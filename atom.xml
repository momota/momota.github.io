<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[momota.txt]]></title>
  <link href="http://momota.github.io/atom.xml" rel="self"/>
  <link href="http://momota.github.io/"/>
  <updated>2013-12-29T17:35:51+09:00</updated>
  <id>http://momota.github.io/</id>
  <author>
    <name><![CDATA[momota]]></name>
    <email><![CDATA[makoto.momota@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[redmine のガントチャートでチケット単位に担当者名を入れたりとか、幅を広げたりとか]]></title>
    <link href="http://momota.github.io/blog/2013/11/22/redmine/"/>
    <updated>2013-11-22T00:29:00+09:00</updated>
    <id>http://momota.github.io/blog/2013/11/22/redmine</id>
    <content type="html"><![CDATA[<p><img src="http://redmine.jp/images/redmine-header-logo.png" alt="redmine" /></p>

<p>一時期 wiki くらいの用途でしか使わなくなっていた redmine。
最近、問合せドリブンの雑多なタスクが増えてきてそれらのタスク管理と、チーム内への対応状況の
シェアがめんどくさくなってきた。チケットでそのあたりのタスク管理とか、進捗管理、スケジュー
ル管理して、チームメンバーには redmine さえ参照してもらえれば把握してもらえるようするため、
改めて redmine を使うようになってきた。</p>

<p>redmine ではチケットに期限を入れてあげるとガントチャートを自動生成してくれる。このガント
チャートがデフォルトだとすこぶる不評だったのでもろもろいじった。そのメモ。</p>

<p>環境は、CentOS, Redmine 1.3.1.stable (MySQL)。</p>

<p><code>REDMINE-HOME</code> は、<code>/var/lib/redmine/</code>。</p>

<!-- more -->


<h2>redmine ガントチャートのチケット単位に担当者名を表示する</h2>

<p><code>REDMINE-HOME/lib/redmine/helpers/gantt.rb</code> を修正する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gu">@@ -353,6 +353,7 @@</span>
</span><span class='line'>           subject &lt;&lt; view.avatar(issue.assigned_to, :class =&gt; &#39;gravatar icon-gravatar&#39;, :size =&gt; 10, :title =&gt; assigned_string).to_s.html_safe
</span><span class='line'>           end
</span><span class='line'>           subject &lt;&lt; view.link_to_issue(issue).html_safe
</span><span class='line'><span class="gi">+          subject &lt;&lt; &quot; - &lt;strong&gt;#{issue.assigned_to}&lt;/strong&gt;&quot;</span>
</span><span class='line'>           subject &lt;&lt; &#39;&lt;/span&gt;&#39;.html_safe
</span><span class='line'>           html_subject(options, subject, :css =&gt; &quot;issue-subject&quot;, :title =&gt; issue.subject) + &quot;\n&quot;
</span><span class='line'>           when :image
</span></code></pre></td></tr></table></div></figure>


<h2>redmine ガントチャートのチケットリストの幅を広げる</h2>

<p><code>REDMINE-HOME/app/views/gantts/show.html.erb</code> を修正する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gu">@@ -32,7 +32,7 @@</span>
</span><span class='line'> &lt;% zoom = 1
</span><span class='line'> @gantt.zoom.times { zoom = zoom * 2 }
</span><span class='line'>
</span><span class='line'><span class="gd">-subject_width = 330</span>
</span><span class='line'><span class="gi">+subject_width = 550</span>
</span><span class='line'> header_heigth = 18
</span><span class='line'>
</span><span class='line'> headers_height = header_heigth
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[trema をインストールする (Ruby 2.0)]]></title>
    <link href="http://momota.github.io/blog/2013/11/13/trema/"/>
    <updated>2013-11-13T00:02:00+09:00</updated>
    <id>http://momota.github.io/blog/2013/11/13/trema</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/trema/trema">trema</a> は、ネットワークをソフトウェアでコントロールするという思想のSDNの中のひとつ、openflowのコントローラを開発するためのフレームワーク。</p>

<p>インストール環境は、 ubuntu12.04.2 LTS on vagrant on windows 7。</p>

<p>インストールする trema バージョンは 0.4.3。</p>

<p>ruby バージョンは 2.0.0p247。</p>

<!-- more -->


<h2>1. trema に必要なパッケージをインストールする</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo apt-get install gcc make ruby-dev libopenssl-ruby libpcap-dev libsqlite3-dev libglib2.0-dev
</span></code></pre></td></tr></table></div></figure>


<h2>2. 作業ディレクトリ dev を作り、移動する</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>mkdir dev
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>dev
</span></code></pre></td></tr></table></div></figure>


<h2>3. github から最新のコードをクローンする</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git clone git@github.com:trema/trema.git
</span><span class='line'>Cloning into <span class="s1">&#39;trema&#39;</span>...
</span><span class='line'>Enter passphrase <span class="k">for </span>key <span class="s1">&#39;/home/momota/.ssh/id_rsa&#39;</span>: *********************
</span><span class='line'>remote: Counting objects: 18921, <span class="k">done</span>.
</span><span class='line'>remote: Compressing objects: 100% <span class="o">(</span>5536/5536<span class="o">)</span>, <span class="k">done</span>.
</span><span class='line'>remote: Total 18921 <span class="o">(</span>delta 14585<span class="o">)</span>, reused 17492 <span class="o">(</span>delta 13303<span class="o">)</span>
</span><span class='line'>Receiving objects: 100% <span class="o">(</span>18921/18921<span class="o">)</span>, 17.31 MiB | 15 KiB/s, <span class="k">done</span>.
</span><span class='line'>Resolving deltas: 100% <span class="o">(</span>14585/14585<span class="o">)</span>, <span class="k">done</span>.
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>trema
</span></code></pre></td></tr></table></div></figure>


<h2>4. trema を動かすための ruby バージョンを rbenv で 2.0 系に指定する</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rbenv <span class="nb">local </span>2.0.0-p247
</span><span class='line'><span class="nv">$ </span>rbenv rehash
</span><span class='line'><span class="nv">$ </span>ruby -v
</span><span class='line'>ruby 2.0.0p247 <span class="o">(</span>2013-06-27 revision 41674<span class="o">)</span> <span class="o">[</span>x86_64-linux<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<h2>5. bundler で関連 gem をインストールする</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>gem install bundle
</span><span class='line'><span class="nv">$ </span>bundle -v
</span><span class='line'>Bundler version 1.3.5
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>bundle install --path vendor/bundle
</span><span class='line'>Fetching gem metadata from https://rubygems.org/.........
</span><span class='line'>Fetching gem metadata from https://rubygems.org/..
</span><span class='line'>Resolving dependencies...
</span><span class='line'>Installing rake <span class="o">(</span>10.1.0<span class="o">)</span>
</span><span class='line'>Installing Platform <span class="o">(</span>0.4.0<span class="o">)</span>
</span><span class='line'>Installing open4 <span class="o">(</span>1.3.0<span class="o">)</span>
</span><span class='line'>Installing POpen4 <span class="o">(</span>0.1.4<span class="o">)</span>
</span><span class='line'>Installing archive-tar-minitar <span class="o">(</span>0.5.2<span class="o">)</span>
</span><span class='line'>Installing ffi <span class="o">(</span>1.9.0<span class="o">)</span>
</span><span class='line'>Installing childprocess <span class="o">(</span>0.3.9<span class="o">)</span>
</span><span class='line'>Installing builder <span class="o">(</span>3.2.2<span class="o">)</span>
</span><span class='line'>Installing diff-lcs <span class="o">(</span>1.2.4<span class="o">)</span>
</span><span class='line'>Installing multi_json <span class="o">(</span>1.8.0<span class="o">)</span>
</span><span class='line'>Installing gherkin <span class="o">(</span>2.12.1<span class="o">)</span>
</span><span class='line'>Installing multi_test <span class="o">(</span>0.0.2<span class="o">)</span>
</span><span class='line'>Installing cucumber <span class="o">(</span>1.3.8<span class="o">)</span>
</span><span class='line'>Installing rspec-expectations <span class="o">(</span>2.14.3<span class="o">)</span>
</span><span class='line'>Installing aruba <span class="o">(</span>0.5.3<span class="o">)</span>
</span><span class='line'>Installing bindata <span class="o">(</span>1.6.0<span class="o">)</span>
</span><span class='line'>Using bundler <span class="o">(</span>1.3.5<span class="o">)</span>
</span><span class='line'>Installing sexp_processor <span class="o">(</span>4.3.0<span class="o">)</span>
</span><span class='line'>Installing ruby_parser <span class="o">(</span>3.2.2<span class="o">)</span>
</span><span class='line'>Installing flay <span class="o">(</span>2.4.0<span class="o">)</span>
</span><span class='line'>Installing flog <span class="o">(</span>4.1.2<span class="o">)</span>
</span><span class='line'>Installing gli <span class="o">(</span>2.8.0<span class="o">)</span>
</span><span class='line'>Installing json <span class="o">(</span>1.8.0<span class="o">)</span>
</span><span class='line'>Installing mime-types <span class="o">(</span>1.25<span class="o">)</span>
</span><span class='line'>Installing paper_house <span class="o">(</span>0.4.0<span class="o">)</span>
</span><span class='line'>Installing pio <span class="o">(</span>0.2.4<span class="o">)</span>
</span><span class='line'>Installing rdoc <span class="o">(</span>4.0.1<span class="o">)</span>
</span><span class='line'>Installing redcarpet <span class="o">(</span>3.0.0<span class="o">)</span>
</span><span class='line'>Installing ruby2ruby <span class="o">(</span>2.0.6<span class="o">)</span>
</span><span class='line'>Installing reek <span class="o">(</span>1.3.3<span class="o">)</span>
</span><span class='line'>Installing rest-client <span class="o">(</span>1.6.7<span class="o">)</span>
</span><span class='line'>Installing relish <span class="o">(</span>0.7<span class="o">)</span>
</span><span class='line'>Installing rspec-core <span class="o">(</span>2.14.5<span class="o">)</span>
</span><span class='line'>Installing rspec-mocks <span class="o">(</span>2.14.3<span class="o">)</span>
</span><span class='line'>Installing rspec <span class="o">(</span>2.14.1<span class="o">)</span>
</span><span class='line'>Using trema <span class="o">(</span>0.4.2<span class="o">)</span> from <span class="nb">source </span>at /home/momota/trema_train/trema
</span><span class='line'>Installing yard <span class="o">(</span>0.8.7.2<span class="o">)</span>
</span><span class='line'>Your bundle is <span class="nb">complete</span>!
</span><span class='line'>It was installed into ./vendor/bundle
</span><span class='line'>Post-install message from rdoc:
</span><span class='line'>Depending on your version of ruby, you may need to install ruby rdoc/ri data:
</span><span class='line'>
</span><span class='line'>&lt;<span class="o">=</span> 1.8.6 : <span class="nv">unsupported</span>
</span><span class='line'> <span class="o">=</span> 1.8.7 : gem install rdoc-data; rdoc-data --install
</span><span class='line'> <span class="o">=</span> 1.9.1 : gem install rdoc-data; rdoc-data --install
</span><span class='line'>&gt;<span class="o">=</span> 1.9.2 : nothing to <span class="k">do</span>! Yay!
</span><span class='line'>Post-install message from reek:
</span><span class='line'>Thank you <span class="k">for </span>downloading Reek. For info see the reek wiki http://wiki.github.com/troessner/reek
</span></code></pre></td></tr></table></div></figure>


<h2>6. trema をビルドする</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake
</span></code></pre></td></tr></table></div></figure>


<h2>7. インストールできたか確認する</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>./trema --version
</span><span class='line'>trema version 0.4.3
</span></code></pre></td></tr></table></div></figure>


<h2>8. サンプルプログラムを動かしてみる</h2>

<p>openflow コントローラの実装 <code>./src/examples/hello_trema/hello-trema.rb</code> のソースは以下。
Controller クラスを継承してメソッドを実装するだけ。
datapath_id は仮想スイッチの IDのようだ。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">HelloTrema</span> <span class="o">&lt;</span> <span class="no">Controller</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">switch_ready</span> <span class="n">datapath_id</span>
</span><span class='line'>    <span class="n">info</span> <span class="s2">&quot;Hello %#x!&quot;</span> <span class="o">%</span> <span class="n">datapath_id</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>仮想スイッチの設定ファイル <code>./src/examples/hello_trema/sample.conf</code> は以下の内容が記載されている。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">vswitch</span> <span class="p">{</span> <span class="n">datapath_id</span> <span class="s2">&quot;0xabc&quot;</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>実行してみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>./trema run ./src/examples/hello_trema/hello-trema.rb -c ./src/examples/hello_trema/sample.conf
</span><span class='line'>Hello 0xabc!
</span><span class='line'>^C
</span><span class='line'>terminated
</span></code></pre></td></tr></table></div></figure>


<p>無事に動いた。
Let&rsquo;s enjoy SDN.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[眠れなくて、高校の頃聴いてた音楽を思い返していたら楽しくなってきた]]></title>
    <link href="http://momota.github.io/blog/2013/10/13/music/"/>
    <updated>2013-10-13T04:38:00+09:00</updated>
    <id>http://momota.github.io/blog/2013/10/13/music</id>
    <content type="html"><![CDATA[<p>眠れなくて、最近同僚に「高校の頃、どんな音楽聴いてたの？」と言われたのを思い出して、そういえば俺どんな音楽聴いてたんだっけ？って思い出してたらなんか楽しくなってきたので記す。
今でも聴いている音楽とかもあるけど、最近なぜかあまり聴かなくなったやつを中心に書く。そういえば、MD プレイヤーとかで登下校中に聴いてたなあ。</p>

<!-- more -->


<h2>邦楽</h2>

<p>まとめてみると、スカっぽいのが好きだったのに気づいた。</p>

<h3>BACK DROP BOMB</h3>

<p>なぜか真っ先に思い出したのが BACK DROP BOMB,</p>

<iframe width="420" height="315" src="http://momota.github.io//www.youtube.com/embed/7Sd7TX0ZAYg" frameborder="0" allowfullscreen></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=FFFFFF&IS2=1&bg1=FFFFFF&fc1=000000&lc1=000000&t=momotamakonob-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00005H02V" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h3>BRAHMAN</h3>

<iframe width="420" height="315" src="http://momota.github.io//www.youtube.com/embed/_N_0YO-fjnM" frameborder="0" allowfullscreen></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=FFFFFF&IS2=1&bg1=FFFFFF&fc1=000000&lc1=000000&t=momotamakonob-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00005F3LI" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h3>SNAIL RAMP</h3>

<iframe width="420" height="315" src="http://momota.github.io//www.youtube.com/embed/4nuzi4WPVQs" frameborder="0" allowfullscreen></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=FFFFFF&IS2=1&bg1=FFFFFF&fc1=000000&lc1=000000&t=momotamakonob-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00003Q47W" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h3>KEMURI</h3>

<iframe width="420" height="315" src="http://momota.github.io//www.youtube.com/embed/KFyezEqPXtU" frameborder="0" allowfullscreen></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=FFFFFF&IS2=1&bg1=FFFFFF&fc1=000000&lc1=000000&t=momotamakonob-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00005GU6E" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h3>THUMB</h3>

<iframe width="420" height="315" src="http://momota.github.io//www.youtube.com/embed/wcr2q9iPp40" frameborder="0" allowfullscreen></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=FFFFFF&IS2=1&bg1=FFFFFF&fc1=000000&lc1=000000&t=momotamakonob-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00004SAQ2" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h3>BLANKY JET CITY</h3>

<iframe width="420" height="315" src="http://momota.github.io//www.youtube.com/embed/OQUhMrD5DuY" frameborder="0" allowfullscreen></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=FFFFFF&IS2=1&bg1=FFFFFF&fc1=000000&lc1=000000&t=momotamakonob-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00005FJVT" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h2>洋楽</h2>

<h3>KORN</h3>

<iframe width="560" height="315" src="http://momota.github.io//www.youtube.com/embed/2s3iGpDqQpQ" frameborder="0" allowfullscreen></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=FFFFFF&IS2=1&bg1=FFFFFF&fc1=000000&lc1=000000&t=momotamakonob-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B0000365OR" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h3>Limp Bizkit</h3>

<iframe width="560" height="315" src="http://momota.github.io//www.youtube.com/embed/Dn8vzTsnPps" frameborder="0" allowfullscreen></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=FFFFFF&IS2=1&bg1=FFFFFF&fc1=000000&lc1=000000&t=momotamakonob-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00000JCB2" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h3>Green day</h3>

<iframe width="420" height="315" src="http://momota.github.io//www.youtube.com/embed/NUTGr5t3MoY" frameborder="0" allowfullscreen></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=FFFFFF&IS2=1&bg1=FFFFFF&fc1=000000&lc1=000000&t=momotamakonob-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B000002MP2" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h3>Rage Against The Machine</h3>

<iframe width="420" height="315" src="http://momota.github.io//www.youtube.com/embed/H0kJLW2EwMg" frameborder="0" allowfullscreen></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=FFFFFF&IS2=1&bg1=FFFFFF&fc1=000000&lc1=000000&t=momotamakonob-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00002MZ2C" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h3>The Offspring</h3>

<iframe width="560" height="315" src="http://momota.github.io//www.youtube.com/embed/nzY2Qcu5i2A" frameborder="0" allowfullscreen></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=FFFFFF&IS2=1&bg1=FFFFFF&fc1=000000&lc1=000000&t=momotamakonob-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B007W4DXHE" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h3>Smaching pumpkins</h3>

<iframe width="420" height="315" src="http://momota.github.io//www.youtube.com/embed/xmUZ6nCFNoU" frameborder="0" allowfullscreen></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=FFFFFF&IS2=1&bg1=FFFFFF&fc1=000000&lc1=000000&t=momotamakonob-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B005MW8CWY" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails から外れた僕らは sinatra で i did it my way (3)]]></title>
    <link href="http://momota.github.io/blog/2013/09/23/sinatra/"/>
    <updated>2013-09-23T20:39:00+09:00</updated>
    <id>http://momota.github.io/blog/2013/09/23/sinatra</id>
    <content type="html"><![CDATA[<p><img src="http://www.sinatrarb.com/images/logo.png" alt="sinatra" /></p>

<p>今回はこれまで作った sinatra アプリケーションを PaaS の <a href="https://www.heroku.com/">heroku</a> へデプロイする。
事前に heroku には sign up しておこう。</p>

<p>最初にできあがりを示す。
<a href="http://sample-mongo-app.herokuapp.com/">http://sample-mongo-app.herokuapp.com/</a></p>

<hr />

<ul>
<li><a href="http://momota.github.io/blog/2013/09/16/sinatra/">rails から外れた僕らは sinatra で i did it my way (1)</a>

<ul>
<li>sinatra の基本 (ルーティング、ヘルパー、フィルター、テンプレートエンジンなど)</li>
</ul>
</li>
<li><a href="http://momota.github.io/blog/2013/09/22/sinatra/">rails から外れた僕らは sinatra で i did it my way (2)</a>

<ul>
<li>sinatra で MongoDB を使ったデータ永続化</li>
<li>HTTP POSTへの対応</li>
<li>Bootstrap でのお化粧</li>
</ul>
</li>
<li><a href="http://momota.github.io/blog/2013/09/23/sinatra/">rails から外れた僕らは sinatra で i did it my way (3)</a>

<ul>
<li>sinatra の heroku へのデプロイ</li>
</ul>
</li>
</ul>


<!-- more -->


<h2>heroku toolbelt をインストールする</h2>

<p>heroku へデプロイするために heroku toolbelt をインストールする。
heroku toolbelt は  <a href="https://toolbelt.heroku.com/">https://toolbelt.heroku.com/</a> から環境にあったやり方を選んでインストールする。mac ではインストーラが <code>.pkg</code> 形式で配布されているので、それをぽちぽちクリックして進めればよい。</p>

<p>なお、heroku toolbelt には、以下が含まれている。</p>

<ul>
<li>heroku client: heroku アプリケーションを作成したり、管理したりする CLI ツール</li>
<li>foreman: procfile ベースでアプリケーションの管理をする</li>
<li>git</li>
</ul>


<p>shell でバージョン確認してインストールできたかを確認する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>heroku --version
</span><span class='line'>heroku-toolbelt/2.41.0 <span class="o">(</span>x86_64-darwin10.8.0<span class="o">)</span> ruby/1.9.3
</span></code></pre></td></tr></table></div></figure>


<p>インストールできているようだ。</p>

<h2>heroku login</h2>

<p><code>heroku login</code> で heroku への認証を通したり、ssh キーを登録したりする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>heroku login
</span><span class='line'>Enter your Heroku credentials.
</span><span class='line'>Email: makoto.momota@gmail.com
</span><span class='line'>Password <span class="o">(</span>typing will be hidden<span class="o">)</span>: ENTER_YOUR_HEROKU_PASSWORD
</span><span class='line'>Authentication successful.
</span></code></pre></td></tr></table></div></figure>


<p>私の場合は、すでにキー登録していたので、なにもキー登録操作がなかったが、初回実行の際は、以下のような感じになるらしい。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>Could not find an existing public key.
</span><span class='line'>Would you like to generate one? <span class="o">[</span>Yn<span class="o">]</span>
</span><span class='line'>Generating new SSH public key.
</span><span class='line'>Uploading ssh public key /Users/adam/.ssh/id_rsa.pub
</span></code></pre></td></tr></table></div></figure>


<h2>foreman で sinatra が起動できるか確認する</h2>

<p>foreman で複数の sinatra アプリケーション を管理したり、アプリケーションごとに異なる起動方法を単一に wrapping できる。
heroku では、アプリケーションを起動するために foreman が必須のようだ。
foreman でのアプリケーション起動には、 <code>Procfile</code> を書く必要がある。書式は <code>アプリケーション名: コマンド</code> を改行区切りで列挙していく。</p>

<p>ここでは、<code>mongo_app.rb</code> を起動するので、以下のように記述する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>web: bundle <span class="nb">exec </span>ruby mongo_app.rb -p <span class="nv">$PORT</span>
</span></code></pre></td></tr></table></div></figure>


<p>お試しに、ローカルで <code>foreman start</code> により sinatra アプリケーションを起動する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>foreman start
</span><span class='line'>17:25:31 web.1  | started with pid 10879
</span><span class='line'>17:25:33 web.1  | <span class="o">[</span>2013-09-23 17:25:33<span class="o">]</span> INFO  WEBrick 1.3.1
</span><span class='line'>17:25:33 web.1  | <span class="o">[</span>2013-09-23 17:25:33<span class="o">]</span> INFO  ruby 2.0.0 <span class="o">(</span>2013-06-27<span class="o">)</span> <span class="o">[</span>x86_64-darwin12.4.0<span class="o">]</span>
</span><span class='line'>17:25:33 web.1  | <span class="o">==</span> Sinatra/1.4.3 has taken the stage on 5000 <span class="k">for </span>development with backup from WEBrick
</span><span class='line'>17:25:33 web.1  | <span class="o">[</span>2013-09-23 17:25:33<span class="o">]</span> INFO  WEBrick::HTTPServer#start: <span class="nv">pid</span><span class="o">=</span>10879 <span class="nv">port</span><span class="o">=</span>5000
</span></code></pre></td></tr></table></div></figure>


<p>5000 番ポートで起動したので、<a href="http://localhost:5000/">http://localhost:5000/</a> にアクセスしてみる。問題なさそう。</p>

<h2>git リポジトリを作成して push する</h2>

<p>heroku デプロイには git が必須。
git でバージョン管理していなければ、<code>git init</code> して始めよう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git init
</span><span class='line'><span class="nv">$ </span>git add .
</span><span class='line'><span class="nv">$ </span>git commit -m <span class="s1">&#39;your commit message&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>heroku へデプロイする</h2>

<p>いよいよ heroku 上にアプリケーションを登録する。アプリケーション名はなしでも任意の名前が付けられるが、ここでは<code>sample-mongo-app</code>にした。(のちほど変えることも可能)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>heroku apps:create sample-mongo-app
</span><span class='line'>Creating sample-mongo-app... <span class="k">done</span>, stack is cedar
</span><span class='line'>http://sample-mongo-app.herokuapp.com/ | git@heroku.com:sample-mongo-app.git
</span><span class='line'>Git remote heroku added
</span></code></pre></td></tr></table></div></figure>


<p>このコマンドにより以下のように git リモートリポジトリに heroku リポジトリが登録される。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git remote
</span><span class='line'>heroku
</span><span class='line'><span class="nv">$ </span>git remote show heroku
</span><span class='line'>* remote heroku
</span><span class='line'>Fetch URL: git@heroku.com:sample-mongo-app.git
</span><span class='line'>Push  URL: git@heroku.com:sample-mongo-app.git
</span><span class='line'>HEAD branch: <span class="o">(</span>unknown<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>heroku リポジトリに push することで、デプロイできる。なんとシンプルな仕組み。
ちなみに、Gemfile.lock も git で管理してないとデプロイ時にエラーとなる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git push heroku master
</span><span class='line'>Counting objects: 90, <span class="k">done</span>.
</span><span class='line'>Delta compression using up to 2 threads.
</span><span class='line'>Compressing objects: 100% <span class="o">(</span>85/85<span class="o">)</span>, <span class="k">done</span>.
</span><span class='line'>Writing objects: 100% <span class="o">(</span>90/90<span class="o">)</span>, 126.44 KiB, <span class="k">done</span>.
</span><span class='line'>Total 90 <span class="o">(</span>delta 27<span class="o">)</span>, reused 0 <span class="o">(</span>delta 0<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>-----&gt; Ruby/Rack app detected
</span><span class='line'>-----&gt; Using Ruby version: ruby-2.0.0
</span><span class='line'>-----&gt; Installing dependencies using Bundler version 1.3.2
</span><span class='line'>       Running: bundle install --without development:test --path vendor/bundle --binstubs vendor/bundle/bin --deployment
</span><span class='line'>       Fetching gem metadata from https://rubygems.org/..........
</span><span class='line'>       Fetching gem metadata from https://rubygems.org/..
</span><span class='line'>       Installing backports <span class="o">(</span>3.3.4<span class="o">)</span>
</span><span class='line'>       Installing bson <span class="o">(</span>1.9.2<span class="o">)</span>
</span><span class='line'>       Installing bson_ext <span class="o">(</span>1.9.2<span class="o">)</span>
</span><span class='line'>       Installing eventmachine <span class="o">(</span>1.0.3<span class="o">)</span>
</span><span class='line'>       Installing mongo <span class="o">(</span>1.9.2<span class="o">)</span>
</span><span class='line'>       Installing rack <span class="o">(</span>1.5.2<span class="o">)</span>
</span><span class='line'>       Installing rack-protection <span class="o">(</span>1.5.0<span class="o">)</span>
</span><span class='line'>       Installing rack-test <span class="o">(</span>0.6.2<span class="o">)</span>
</span><span class='line'>       Installing tilt <span class="o">(</span>1.4.1<span class="o">)</span>
</span><span class='line'>       Installing sinatra <span class="o">(</span>1.4.3<span class="o">)</span>
</span><span class='line'>       Installing sinatra-contrib <span class="o">(</span>1.4.0<span class="o">)</span>
</span><span class='line'>       Using bundler <span class="o">(</span>1.3.2<span class="o">)</span>
</span><span class='line'>       Your bundle is <span class="nb">complete</span>! It was installed into ./vendor/bundle
</span><span class='line'>       Cleaning up the bundler cache.
</span><span class='line'>-----&gt; WARNINGS:
</span><span class='line'>       You have not declared a Ruby version in your Gemfile.
</span><span class='line'>       To <span class="nb">set </span>your Ruby version add this line to your Gemfile:
</span><span class='line'>       ruby <span class="s1">&#39;2.0.0&#39;</span>
</span><span class='line'>       <span class="c"># See https://devcenter.heroku.com/articles/ruby-versions for more information.&quot;</span>
</span><span class='line'>-----&gt; Discovering process types
</span><span class='line'>       Procfile declares types     -&gt; web
</span><span class='line'>       Default types <span class="k">for </span>Ruby/Rack -&gt; console, rake
</span><span class='line'>
</span><span class='line'>-----&gt; Compiled slug size: 26.4MB
</span><span class='line'>-----&gt; Launching... <span class="k">done</span>, v3
</span><span class='line'>       http://sample-mongo-app.herokuapp.com deployed to Heroku
</span><span class='line'>
</span><span class='line'>To git@heroku.com:sample-mongo-app.git
</span><span class='line'> * <span class="o">[</span>new branch<span class="o">]</span>      master -&gt; master
</span></code></pre></td></tr></table></div></figure>


<h2>mongodb を heroku で使う</h2>

<p>heroku ではさまざまな add-on が提供されており、その中から mongodb のホスティングである <a href="https://addons.heroku.com/mongohq">MongoHQ</a> を利用する。</p>

<p>add-on を利用するにはクレジットカード情報の登録が必要となるので、済ませておく。<a href="https://heroku.com/verify">https://heroku.com/verify</a></p>

<p>以下で、add-on の設定をする。ここでは、無料プランの ”sandbox” を選ぶ。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>heroku addons:add mongohq:sandbox
</span><span class='line'>Adding mongohq:sandbox on sample-mongo-app... <span class="k">done</span>, v4 <span class="o">(</span>free<span class="o">)</span>
</span><span class='line'>Use <span class="sb">`</span>heroku addons:docs mongohq<span class="sb">`</span> to view documentation.
</span><span class='line'><span class="nv">$ </span>heroku <span class="nv">config</span>
</span><span class='line'><span class="o">===</span> sample-mongo-app Config Vars
</span><span class='line'>MONGOHQ_URL: mongodb://ID:パスワード@paulo.mongohq.com:10014/データベース名
</span></code></pre></td></tr></table></div></figure>


<p>sinatraの DB 接続部分を mongohq 用に書き換える。</p>

<p><a href="https://devcenter.heroku.com/articles/mongohq">公式サイト</a>通り、 DB コネクションをメソッド化する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;sinatra&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;sinatra/reloader&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;mongo&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;uri&#39;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">get_connection</span>
</span><span class='line'>  <span class="k">return</span> <span class="vi">@db_connection</span> <span class="k">if</span> <span class="vi">@db_connection</span>
</span><span class='line'>  <span class="n">db</span> <span class="o">=</span> <span class="no">URI</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;MONGOHQ_URL&#39;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="n">db_name</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/^\//</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="vi">@db_connection</span> <span class="o">=</span> <span class="ss">Mongo</span><span class="p">:</span><span class="ss">:Connection</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">host</span><span class="p">,</span> <span class="n">db</span><span class="o">.</span><span class="n">port</span><span class="p">)</span><span class="o">.</span><span class="n">db</span><span class="p">(</span><span class="n">db_name</span><span class="p">)</span>
</span><span class='line'>  <span class="vi">@db_connection</span><span class="o">.</span><span class="n">authenticate</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">user</span><span class="p">,</span> <span class="n">db</span><span class="o">.</span><span class="n">password</span><span class="p">)</span> <span class="k">unless</span> <span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">user</span><span class="o">.</span><span class="n">nil?</span> <span class="o">||</span> <span class="n">db</span><span class="o">.</span><span class="n">user</span><span class="o">.</span><span class="n">nil?</span><span class="p">)</span>
</span><span class='line'>  <span class="vi">@db_connection</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">before</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">db_con</span> <span class="o">=</span> <span class="n">get_connection</span>
</span><span class='line'>  <span class="vi">@comments</span> <span class="o">=</span> <span class="n">db_con</span><span class="o">.</span><span class="n">collection</span><span class="p">(</span><span class="s1">&#39;comments&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">helpers</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># escape html</span>
</span><span class='line'>  <span class="kp">include</span> <span class="ss">Rack</span><span class="p">:</span><span class="ss">:Utils</span>
</span><span class='line'>  <span class="n">alias_method</span> <span class="ss">:h</span><span class="p">,</span> <span class="ss">:escape_html</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">get</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">erb</span> <span class="ss">:index</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">post</span> <span class="s1">&#39;/new&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="vi">@comments</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span> <span class="ss">:body</span> <span class="o">=&gt;</span> <span class="n">params</span><span class="o">[</span><span class="ss">:body</span><span class="o">]</span> <span class="p">)</span>
</span><span class='line'>  <span class="n">redirect</span> <span class="s1">&#39;/&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">post</span> <span class="s1">&#39;/delete&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="nb">id</span> <span class="o">=</span> <span class="ss">BSON</span><span class="p">:</span><span class="ss">:ObjectId</span><span class="p">(</span> <span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span> <span class="p">)</span>
</span><span class='line'>  <span class="vi">@comments</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="s1">&#39;_id&#39;</span> <span class="o">=&gt;</span> <span class="nb">id</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">d_comment</span><span class="o">|</span>
</span><span class='line'>    <span class="vi">@comments</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span> <span class="n">d_comment</span> <span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>これを前述したとおり、<code>git commit/push</code>してあげれば、heroku 上で sinatra アプリケーション 〜 mongodb 間の接続が確認できる。</p>

<p>私がデプロイした sinatra サンプルアプリケーションは、以下からアクセス可能。</p>

<p><a href="http://sample-mongo-app.herokuapp.com/">http://sample-mongo-app.herokuapp.com/</a></p>

<h3>heroku でのデバッグ</h3>

<p>以下でアプリケーションログを <code>tail -f</code> しているように参照できる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>heroku logs --tail
</span></code></pre></td></tr></table></div></figure>


<hr />

<h1>番外編</h1>

<p>heroku gem は将来的に廃止されるようで、heroku toolbelt をインストールすることを推奨する。</p>

<h2>(失敗,というか古い情報編) heroku gem をインストールする</h2>

<p>Gemfile に <code>gem "heroku"</code> を追記して bundler でインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gh">diff --git a/Gemfile b/Gemfile</span>
</span><span class='line'><span class="gh">index 74db599..734c191 100644</span>
</span><span class='line'><span class="gd">--- a/Gemfile</span>
</span><span class='line'><span class="gi">+++ b/Gemfile</span>
</span><span class='line'><span class="gu">@@ -8,4 +8,5 @@ gem &quot;sinatra&quot;, &quot;1.4.3&quot;</span>
</span><span class='line'> gem &quot;sinatra-contrib&quot;, &quot;1.4.0&quot;
</span><span class='line'> gem &quot;mongo&quot;
</span><span class='line'> gem &quot;bson_ext&quot;
</span><span class='line'><span class="gi">+gem &quot;heroku&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>bundle install</code> する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle install --path vendor/bundle
</span><span class='line'>Fetching gem metadata from https://rubygems.org/...........
</span><span class='line'>Fetching gem metadata from https://rubygems.org/..
</span><span class='line'>Resolving dependencies...
</span><span class='line'>Using i18n <span class="o">(</span>0.6.1<span class="o">)</span>
</span><span class='line'>Using multi_json <span class="o">(</span>1.8.0<span class="o">)</span>
</span><span class='line'>Using activesupport <span class="o">(</span>3.2.13<span class="o">)</span>
</span><span class='line'>Using builder <span class="o">(</span>3.0.4<span class="o">)</span>
</span><span class='line'>Using activemodel <span class="o">(</span>3.2.13<span class="o">)</span>
</span><span class='line'>Using arel <span class="o">(</span>3.0.2<span class="o">)</span>
</span><span class='line'>Using tzinfo <span class="o">(</span>0.3.37<span class="o">)</span>
</span><span class='line'>Using activerecord <span class="o">(</span>3.2.13<span class="o">)</span>
</span><span class='line'>Installing addressable <span class="o">(</span>2.3.5<span class="o">)</span>
</span><span class='line'>Using backports <span class="o">(</span>3.3.4<span class="o">)</span>
</span><span class='line'>Using bson <span class="o">(</span>1.9.2<span class="o">)</span>
</span><span class='line'>Using bson_ext <span class="o">(</span>1.9.2<span class="o">)</span>
</span><span class='line'>Using eventmachine <span class="o">(</span>1.0.3<span class="o">)</span>
</span><span class='line'>Installing excon <span class="o">(</span>0.25.3<span class="o">)</span>
</span><span class='line'>Installing heroku-api <span class="o">(</span>0.3.15<span class="o">)</span>
</span><span class='line'>Installing launchy <span class="o">(</span>2.3.0<span class="o">)</span>
</span><span class='line'>Installing netrc <span class="o">(</span>0.7.7<span class="o">)</span>
</span><span class='line'>Installing mime-types <span class="o">(</span>1.25<span class="o">)</span>
</span><span class='line'>Installing rest-client <span class="o">(</span>1.6.7<span class="o">)</span>
</span><span class='line'>Installing rubyzip <span class="o">(</span>1.0.0<span class="o">)</span>
</span><span class='line'>Installing heroku <span class="o">(</span>2.41.0<span class="o">)</span>
</span><span class='line'>Using mongo <span class="o">(</span>1.9.2<span class="o">)</span>
</span><span class='line'>Using rack <span class="o">(</span>1.5.2<span class="o">)</span>
</span><span class='line'>Using rack-protection <span class="o">(</span>1.5.0<span class="o">)</span>
</span><span class='line'>Using rack-test <span class="o">(</span>0.6.2<span class="o">)</span>
</span><span class='line'>Using tilt <span class="o">(</span>1.4.1<span class="o">)</span>
</span><span class='line'>Using sinatra <span class="o">(</span>1.4.3<span class="o">)</span>
</span><span class='line'>Using sinatra-contrib <span class="o">(</span>1.4.0<span class="o">)</span>
</span><span class='line'>Using sqlite3 <span class="o">(</span>1.3.7<span class="o">)</span>
</span><span class='line'>Using bundler <span class="o">(</span>1.3.5<span class="o">)</span>
</span><span class='line'>Your bundle is <span class="nb">complete</span>!
</span><span class='line'>It was installed into ./vendor/bundle
</span><span class='line'>Post-install message from heroku:
</span><span class='line'> !    The <span class="sb">`</span>heroku<span class="sb">`</span> gem has been deprecated and replaced with the Heroku Toolbelt.
</span><span class='line'> !    Download and install from: https://toolbelt.heroku.com
</span><span class='line'> !    For API access, see: https://github.com/heroku/heroku.rb
</span></code></pre></td></tr></table></div></figure>


<p>なんか heroku gem は、もう廃止されるみたいなメッセージが出た。
アンインストールすることにしよう。</p>

<h3>heroku gem アンインストール</h3>

<p>Gemfile から先ほど追加した <code>gem "heroku"</code> 行を消す。
そのあとに <code>bundle clean</code> でアンインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle clean
</span><span class='line'>Resolving dependencies...
</span><span class='line'>Removing addressable <span class="o">(</span>2.3.5<span class="o">)</span>
</span><span class='line'>Removing excon <span class="o">(</span>0.25.3<span class="o">)</span>
</span><span class='line'>Removing heroku <span class="o">(</span>2.41.0<span class="o">)</span>
</span><span class='line'>Removing heroku-api <span class="o">(</span>0.3.15<span class="o">)</span>
</span><span class='line'>Removing launchy <span class="o">(</span>2.3.0<span class="o">)</span>
</span><span class='line'>Removing mime-types <span class="o">(</span>1.25<span class="o">)</span>
</span><span class='line'>Removing netrc <span class="o">(</span>0.7.7<span class="o">)</span>
</span><span class='line'>Removing rest-client <span class="o">(</span>1.6.7<span class="o">)</span>
</span><span class='line'>Removing rubyzip <span class="o">(</span>1.0.0<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails から外れた僕らは sinatra で i did it my way (2)]]></title>
    <link href="http://momota.github.io/blog/2013/09/22/sinatra/"/>
    <updated>2013-09-22T06:15:00+09:00</updated>
    <id>http://momota.github.io/blog/2013/09/22/sinatra</id>
    <content type="html"><![CDATA[<p><img src="http://www.sinatrarb.com/images/logo.png" alt="sinatra" /></p>

<p><a href="http://momota.github.io/blog/2013/09/16/sinatra/">前回の &ldquo;sinatra で rails から外れた僕らは sinatra で i did it my way&rdquo; の続き</a></p>

<p>今回は、mongodb を使って簡単な sinatra web アプリケーションをつくってみる。
また、bootstrap3 で簡単に見た目を綺麗にしてみる。</p>

<hr />

<ul>
<li><a href="http://momota.github.io/blog/2013/09/16/sinatra/">rails から外れた僕らは sinatra で i did it my way (1)</a>

<ul>
<li>sinatra の基本 (ルーティング、ヘルパー、フィルター、テンプレートエンジンなど)</li>
</ul>
</li>
<li><a href="http://momota.github.io/blog/2013/09/22/sinatra/">rails から外れた僕らは sinatra で i did it my way (2)</a>

<ul>
<li>sinatra で MongoDB を使ったデータ永続化</li>
<li>HTTP POSTへの対応</li>
<li>Bootstrap でのお化粧</li>
</ul>
</li>
<li><a href="http://momota.github.io/blog/2013/09/23/sinatra/">rails から外れた僕らは sinatra で i did it my way (3)</a>

<ul>
<li>sinatra の heroku へのデプロイ</li>
</ul>
</li>
</ul>


<!-- more -->


<h2>MongoDB を使うための準備</h2>

<p>データの永続化をするために、ここでは mongodb を使う。別に sqlite3 や MySQL でも良かったがなんとなく NoSQLを選定。</p>

<p>まずは、<a href="http://docs.mongodb.org/manual/installation/">こちらを参考に</a> mongodb をインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>brew update
</span><span class='line'><span class="nv">$ </span>brew install mongodb
</span><span class='line'><span class="nv">$ </span>mongo --version
</span><span class='line'>MongoDB shell version: 2.4.6
</span><span class='line'>
</span><span class='line'><span class="c"># mongod を起動する</span>
</span><span class='line'><span class="nv">$ </span>/usr/local/bin/mongod --fork
</span><span class='line'>all output going to: /usr/local/var/log/mongodb/mongo.log
</span></code></pre></td></tr></table></div></figure>


<p>mongodb を ruby から扱うための gem を bundler でインストールする。</p>

<p>Gemfile に <code>mongo</code> と <code>bson_ext</code> を追加する。(以下は Gemfile の diff 結果)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gh">diff --git a/Gemfile b/Gemfile</span>
</span><span class='line'><span class="gh">index 140fec0..74db599 100644</span>
</span><span class='line'><span class="gd">--- a/Gemfile</span>
</span><span class='line'><span class="gi">+++ b/Gemfile</span>
</span><span class='line'><span class="gu">@@ -6,3 +6,6 @@ gem &quot;activerecord&quot;, &quot;3.2.13&quot;</span>
</span><span class='line'> gem &quot;sqlite3&quot;, &quot;1.3.7&quot;
</span><span class='line'> gem &quot;sinatra&quot;, &quot;1.4.3&quot;
</span><span class='line'> gem &quot;sinatra-contrib&quot;, &quot;1.4.0&quot;
</span><span class='line'><span class="gi">+gem &quot;mongo&quot;</span>
</span><span class='line'><span class="gi">+gem &quot;bson_ext&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>bundler でインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle install --path vendor/bundle
</span><span class='line'>Fetching gem metadata from https://rubygems.org/...........
</span><span class='line'>Fetching gem metadata from https://rubygems.org/..
</span><span class='line'>Resolving dependencies...
</span><span class='line'>Using i18n <span class="o">(</span>0.6.1<span class="o">)</span>
</span><span class='line'>Using multi_json <span class="o">(</span>1.8.0<span class="o">)</span>
</span><span class='line'>Using activesupport <span class="o">(</span>3.2.13<span class="o">)</span>
</span><span class='line'>Using builder <span class="o">(</span>3.0.4<span class="o">)</span>
</span><span class='line'>Using activemodel <span class="o">(</span>3.2.13<span class="o">)</span>
</span><span class='line'>Using arel <span class="o">(</span>3.0.2<span class="o">)</span>
</span><span class='line'>Using tzinfo <span class="o">(</span>0.3.37<span class="o">)</span>
</span><span class='line'>Using activerecord <span class="o">(</span>3.2.13<span class="o">)</span>
</span><span class='line'>Using backports <span class="o">(</span>3.3.4<span class="o">)</span>
</span><span class='line'>Installing bson <span class="o">(</span>1.9.2<span class="o">)</span>
</span><span class='line'>Installing bson_ext <span class="o">(</span>1.9.2<span class="o">)</span>
</span><span class='line'>Using eventmachine <span class="o">(</span>1.0.3<span class="o">)</span>
</span><span class='line'>Installing mongo <span class="o">(</span>1.9.2<span class="o">)</span>
</span><span class='line'>Using rack <span class="o">(</span>1.5.2<span class="o">)</span>
</span><span class='line'>Using rack-protection <span class="o">(</span>1.5.0<span class="o">)</span>
</span><span class='line'>Using rack-test <span class="o">(</span>0.6.2<span class="o">)</span>
</span><span class='line'>Using tilt <span class="o">(</span>1.4.1<span class="o">)</span>
</span><span class='line'>Using sinatra <span class="o">(</span>1.4.3<span class="o">)</span>
</span><span class='line'>Using sinatra-contrib <span class="o">(</span>1.4.0<span class="o">)</span>
</span><span class='line'>Using sqlite3 <span class="o">(</span>1.3.7<span class="o">)</span>
</span><span class='line'>Using bundler <span class="o">(</span>1.3.5<span class="o">)</span>
</span><span class='line'>Your bundle is <span class="nb">complete</span>!
</span></code></pre></td></tr></table></div></figure>


<h2>ルーティング処理を追加する</h2>

<p>まず、mongodb を ruby から扱うために <code>require 'mongo'</code> しておく。</p>

<p>before filter で mongodb とのコネクションを張っておく。</p>

<p>helper には、html エスケープ処理の alias を定義しておく。(のちほど <code>views/index.erb</code> で使う)</p>

<p>ブラウザから投稿&#8221;/new&#8221;と削除&#8221;/delete&#8221;の HTTP POST リクエストを受け付けるため、各ルーティング処理を追加している。
投稿では、mongodb への insert 処理を、削除では、mongodb からの remove 処理を記述している。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;sinatra&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;sinatra/reloader&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;mongo&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># filter</span>
</span><span class='line'><span class="n">before</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">db_con</span> <span class="o">=</span> <span class="ss">Mongo</span><span class="p">:</span><span class="ss">:Connection</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s1">&#39;localhost&#39;</span><span class="p">,</span> <span class="mi">27017</span><span class="p">)</span>
</span><span class='line'>  <span class="vi">@db</span>    <span class="o">=</span> <span class="n">db_con</span><span class="o">.</span><span class="n">db</span><span class="p">(</span><span class="s1">&#39;sinatra_sample&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="vi">@comments</span> <span class="o">=</span> <span class="vi">@db</span><span class="o">.</span><span class="n">collection</span><span class="p">(</span><span class="s1">&#39;comments&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># helper</span>
</span><span class='line'><span class="n">helpers</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># escape html</span>
</span><span class='line'>  <span class="kp">include</span> <span class="ss">Rack</span><span class="p">:</span><span class="ss">:Utils</span>
</span><span class='line'>  <span class="n">alias_method</span> <span class="ss">:h</span><span class="p">,</span> <span class="ss">:escape_html</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">get</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">erb</span> <span class="ss">:index</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">post</span> <span class="s1">&#39;/new&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="vi">@comments</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span> <span class="ss">:body</span> <span class="o">=&gt;</span> <span class="n">params</span><span class="o">[</span><span class="ss">:body</span><span class="o">]</span> <span class="p">)</span>
</span><span class='line'>  <span class="n">redirect</span> <span class="s1">&#39;/&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">post</span> <span class="s1">&#39;/delete&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="nb">id</span> <span class="o">=</span> <span class="ss">BSON</span><span class="p">:</span><span class="ss">:ObjectId</span><span class="p">(</span> <span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span> <span class="p">)</span>
</span><span class='line'>  <span class="vi">@comments</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="s1">&#39;_id&#39;</span> <span class="o">=&gt;</span> <span class="nb">id</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">d_comment</span><span class="o">|</span>
</span><span class='line'>    <span class="vi">@comments</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span> <span class="n">d_comment</span> <span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>フォームとか</h2>

<p>フォームとかを作るため、<code>views/index.erb</code> を修正する。</p>

<p><code>&lt;ul&gt;</code> ブロックで、mongodb からデータを抜いてきてリスト表示させている。</p>

<p><code>&lt;form&gt;</code> ブロックで新規の投稿をする。<code>/new</code> に POST しているので、上記の <code>post '/new' do ... end</code> 部分の処理にルーティングされる。</p>

<p><code>&lt;script&gt;</code> ブロックで jquery を利用して既存記事を削除する。<a href="https://developers.google.com/speed/libraries/devguide?hl=ja">Google API</a>を利用。
[x] をクリックしたときに、<code>/delete</code> に POST しているので、上記の <code>post '/delete' do ... end</code> 部分の処理にルーティングされる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">  &lt;h1&gt;sinatra sample&lt;/h1&gt;</span>
</span><span class='line'><span class="x">  &lt;ul&gt;</span>
</span><span class='line'><span class="x">    </span><span class="cp">&lt;%</span> <span class="vi">@comments</span><span class="o">.</span><span class="n">find</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">comment</span><span class="o">|</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">    &lt;li data-id=&quot;</span><span class="cp">&lt;%=</span> <span class="n">comment</span><span class="o">[</span><span class="s2">&quot;_id&quot;</span><span class="o">]</span><span class="cp">%&gt;</span><span class="x">&quot;&gt;</span>
</span><span class='line'><span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">h</span> <span class="n">comment</span><span class="o">[</span><span class="s2">&quot;body&quot;</span><span class="o">]</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">      &lt;span class=&quot;deleteCmd&quot; style=&quot;cursor:pointer; color:blue&quot;&gt;[x]&lt;/span&gt;</span>
</span><span class='line'><span class="x">      &lt;/li&gt;</span>
</span><span class='line'><span class="x">    </span><span class="cp">&lt;%</span> <span class="p">}</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  &lt;/ul&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">  &lt;h2&gt;Add new&lt;/h2&gt;</span>
</span><span class='line'><span class="x">  &lt;form method=&quot;post&quot; action=&quot;new&quot;&gt;</span>
</span><span class='line'><span class="x">    &lt;input type=&quot;text&quot; name=&quot;body&quot;&gt; &lt;input type=&quot;submit&quot; value=&quot;post&quot;&gt;</span>
</span><span class='line'><span class="x">  &lt;/form&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">  &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js&quot;&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="x">  &lt;script&gt;</span>
</span><span class='line'><span class="x">    $(&#39;.deleteCmd&#39;).click(function() {</span>
</span><span class='line'><span class="x">      var el = $( this ).parent();</span>
</span><span class='line'><span class="x">      if(confirm(&#39;are you sure to delete ?&#39;)) {</span>
</span><span class='line'><span class="x">        $.post(&#39;/delete&#39;, {</span>
</span><span class='line'><span class="x">          id: el.data(&#39;id&#39;)</span>
</span><span class='line'><span class="x">          }, function() {</span>
</span><span class='line'><span class="x">            el.fadeOut( 800 );</span>
</span><span class='line'><span class="x">          });</span>
</span><span class='line'><span class="x">      }</span>
</span><span class='line'><span class="x">      })</span>
</span><span class='line'><span class="x">  &lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="https://dl.dropboxusercontent.com/u/28495046/octopress/20130921_sinatra/bs_before.png" alt="" /></p>

<p>これで、mongodb を使った sinatra web アプリケーションができた。</p>

<p>ちょっと殺風景なので、twitter bootstrap3 を使ってお化粧する。</p>

<h2>twitter bootstrap3 を使う</h2>

<p>できあがったものがかなりそっけないので、CSS フレームワークである <a href="http://getbootstrap.com/">twitter bootstrap</a> を使って、すこしだけおしゃれにする。
<a href="https://github.com/twbs/bootstrap/releases/download/v3.0.0/bootstrap-3.0.0-dist.zip">zip ファイル</a> で配布されているので、ダウンロードして解凍する。
sinatra では静的ファイルを <code>public/</code> 以下につっこむため、解凍したディレクトリを public にリネームして sinatra アプリを作っているワーキングディレクトリへ置いておく。</p>

<h3>layout テンプレートの修正</h3>

<p>bootstrap を使うため、<code>views/layout.erb</code> を以下のように修正する。
落としてきた css とscript を指定するのと、bootstrap を使う上で必須な jquery を指定している。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">&lt;!DOCTYPE html&gt;</span>
</span><span class='line'><span class="x">&lt;html lang=&quot;ja&quot;&gt;</span>
</span><span class='line'><span class="x">  &lt;head&gt;</span>
</span><span class='line'><span class="x">    &lt;meata charset=&quot;urf-8&quot;&gt;</span>
</span><span class='line'><span class="x">    &lt;title&gt;sinatra test&lt;/title&gt;</span>
</span><span class='line'><span class="x">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span>
</span><span class='line'><span class="x">    &lt;link href=&quot;css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot; media=&quot;screen&quot;&gt;</span>
</span><span class='line'><span class="x">  &lt;/head&gt;</span>
</span><span class='line'><span class="x">  &lt;body&gt;</span>
</span><span class='line'><span class="x">  &lt;div class=&quot;container&quot; syle=&quot;padding:20px 0&quot;&gt;</span>
</span><span class='line'><span class="x">    &lt;h1&gt;Sinatra Sample&lt;/h1&gt;</span>
</span><span class='line'><span class="x">    </span><span class="cp">&lt;%=</span> <span class="k">yield</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  &lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">  &lt;script src=&quot;http://code.jquery.com/jquery.js&quot;&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="x">  &lt;script src=&quot;js/bootstrap.min.js&quot;&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="x">  &lt;/body&gt;</span>
</span><span class='line'><span class="x">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>views/indx.erb</code> も以下のように修正する。
<code>&lt;ul&gt;</code> をやめて、<code>&lt;table&gt;</code> へ。[x]という文字列も、削除アイコンへ修正。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">  &lt;table class=&quot;table table-striped&quot;&gt;</span>
</span><span class='line'><span class="x">    </span><span class="cp">&lt;%</span> <span class="vi">@comments</span><span class="o">.</span><span class="n">find</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">comment</span><span class="o">|</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">    &lt;tr data-id=&quot;</span><span class="cp">&lt;%=</span> <span class="n">comment</span><span class="o">[</span><span class="s2">&quot;_id&quot;</span><span class="o">]</span><span class="cp">%&gt;</span><span class="x">&quot;&gt;</span>
</span><span class='line'><span class="x">      &lt;td&gt;</span>
</span><span class='line'><span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">h</span> <span class="n">comment</span><span class="o">[</span><span class="s2">&quot;body&quot;</span><span class="o">]</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">        &lt;span class=&quot;deleteCmd&quot; style=&quot;cursor:pointer;&quot;&gt;</span>
</span><span class='line'><span class="x">          &lt;i class=&quot;glyphicon glyphicon-remove&quot;&gt;&lt;/i&gt;</span>
</span><span class='line'><span class="x">        &lt;/span&gt;</span>
</span><span class='line'><span class="x">      &lt;/td&gt;</span>
</span><span class='line'><span class="x">    &lt;/tr&gt;</span>
</span><span class='line'><span class="x">    </span><span class="cp">&lt;%</span> <span class="p">}</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  &lt;/table&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">  &lt;h2&gt;Add new&lt;/h2&gt;</span>
</span><span class='line'><span class="x">  &lt;form method=&quot;post&quot; action=&quot;new&quot;&gt;</span>
</span><span class='line'><span class="x">    &lt;div class=&quot;form-group&quot;&gt;</span>
</span><span class='line'><span class="x">      &lt;label class=&quot;control-label&quot; for=&quot;comment&quot; &gt;comment&lt;/label&gt;</span>
</span><span class='line'><span class="x">      &lt;input type=&quot;text&quot; name=&quot;body&quot; class=&quot;form-control&quot; placeholder=&quot;your comment&quot;&gt;</span>
</span><span class='line'><span class="x">    &lt;/div&gt;</span>
</span><span class='line'><span class="x">    &lt;div class=&quot;form-group&quot;&gt;</span>
</span><span class='line'><span class="x">      &lt;input type=&quot;submit&quot; value=&quot;post&quot; class=&quot;btn btn-primary&quot;&gt;</span>
</span><span class='line'><span class="x">    &lt;/div&gt;</span>
</span><span class='line'><span class="x">  &lt;/form&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">  &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js&quot;&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="x">  &lt;script&gt;</span>
</span><span class='line'><span class="x">    $(&#39;.deleteCmd&#39;).click(function() {</span>
</span><span class='line'><span class="x">      var el = $( this ).parent().parent();</span>
</span><span class='line'><span class="x">      if(confirm(&#39;are you sure to delete ?&#39;)) {</span>
</span><span class='line'><span class="x">        $.post(&#39;/delete&#39;, {</span>
</span><span class='line'><span class="x">          id: el.data(&#39;id&#39;)</span>
</span><span class='line'><span class="x">          }, function() {</span>
</span><span class='line'><span class="x">            el.fadeOut( 800 );</span>
</span><span class='line'><span class="x">          });</span>
</span><span class='line'><span class="x">      }</span>
</span><span class='line'><span class="x">      })</span>
</span><span class='line'><span class="x">  &lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>これで、<code>bundle exec ruby main.rb</code> で sinatra を起動して <a href="http://localhost:4567/">http://localhost:4567/</a> にアクセスする。</p>

<p><img src="https://dl.dropboxusercontent.com/u/28495046/octopress/20130921_sinatra/bs_after.png" alt="" /></p>

<p>こんな感じでちょっとだけおしゃれになる。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails から外れた僕らは sinatra で i did it my way (1)]]></title>
    <link href="http://momota.github.io/blog/2013/09/16/sinatra/"/>
    <updated>2013-09-16T17:37:00+09:00</updated>
    <id>http://momota.github.io/blog/2013/09/16/sinatra</id>
    <content type="html"><![CDATA[<p><img src="http://www.sinatrarb.com/images/logo.png" alt="sinatra" /></p>

<p><a href="http://www.sinatrarb.com/">sinatra</a> は ruby の web アプリケーションフレームワーク。rails よりもシンプルで柔軟なプログラムが可能となる。つまり、しかれた rails に乗り切れない人のためのフレームワーク。
本稿では以下について書く。</p>

<ol>
<li>sinatra インストール</li>
<li>hello world アプリケーション</li>
<li>ルーティング</li>
<li>フィルタ</li>
<li>ヘルパー</li>
<li>テンプレートの呼び出し</li>
</ol>


<hr />

<ul>
<li><a href="http://momota.github.io/blog/2013/09/16/sinatra/">rails から外れた僕らは sinatra で i did it my way (1)</a>

<ul>
<li>sinatra の基本 (ルーティング、ヘルパー、フィルター、テンプレートエンジンなど)</li>
</ul>
</li>
<li><a href="http://momota.github.io/blog/2013/09/22/sinatra/">rails から外れた僕らは sinatra で i did it my way (2)</a>

<ul>
<li>sinatra で MongoDB を使ったデータ永続化</li>
<li>HTTP POSTへの対応</li>
<li>Bootstrap でのお化粧</li>
</ul>
</li>
<li><a href="http://momota.github.io/blog/2013/09/23/sinatra/">rails から外れた僕らは sinatra で i did it my way (3)</a>

<ul>
<li>sinatra の heroku へのデプロイ</li>
</ul>
</li>
</ul>


<!-- more -->


<h2>前準備: インストール</h2>

<p>ruby 2.0 を rbenv でインストールする。
以下、作業は <code>/Users/momota/dev/sinatra/</code> で行う。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rbenv install 2.0.0-p247
</span><span class='line'><span class="nv">$ </span>rbenv <span class="nb">local </span>2.0.0-p247
</span><span class='line'><span class="nv">$ </span>rbenv rehash
</span><span class='line'><span class="nv">$ </span>rbenv version
</span><span class='line'>2.0.0-p247 <span class="o">(</span><span class="nb">set </span>by /Users/momota/dev/sinatra/.ruby-version<span class="o">)</span>
</span><span class='line'><span class="nv">$ </span>ruby -v
</span><span class='line'>ruby 2.0.0p247 <span class="o">(</span>2013-06-27 revision 41674<span class="o">)</span> <span class="o">[</span>x86_64-darwin12.4.0<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>bundler で sinatra と関連 gem をインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>gem install bundler
</span><span class='line'><span class="nv">$ </span>bundle -v
</span><span class='line'>Bundler version 1.3.5
</span><span class='line'><span class="nv">$ </span>bundle init
</span><span class='line'>Writing new Gemfile to /Users/momota/dev/sinatra/Gemfile
</span><span class='line'><span class="nv">$ </span>cat <span class="s">&lt;&lt; EOF &gt;&gt; ./Gemfile</span>
</span><span class='line'><span class="s">heredoc&gt; gem &quot;activerecord&quot;, &quot;3.2.13&quot;</span>
</span><span class='line'><span class="s">heredoc&gt; gem &quot;sqlite3&quot;, &quot;1.3.7&quot;</span>
</span><span class='line'><span class="s">heredoc&gt; gem &quot;sinatra&quot;, &quot;1.4.3&quot;</span>
</span><span class='line'><span class="s">heredoc&gt; gem &quot;sinatra-contrib&quot;, &quot;1.4.0&quot;</span>
</span><span class='line'><span class="s">heredoc&gt; EOF</span>
</span><span class='line'><span class="nv">$ </span>bundle install --path vendor/bundle
</span><span class='line'>Fetching gem metadata from https://rubygems.org/...........
</span><span class='line'>Fetching gem metadata from https://rubygems.org/..
</span><span class='line'>Resolving dependencies...
</span><span class='line'>Installing i18n <span class="o">(</span>0.6.1<span class="o">)</span>
</span><span class='line'>Installing multi_json <span class="o">(</span>1.8.0<span class="o">)</span>
</span><span class='line'>Installing activesupport <span class="o">(</span>3.2.13<span class="o">)</span>
</span><span class='line'>Installing builder <span class="o">(</span>3.0.4<span class="o">)</span>
</span><span class='line'>Installing activemodel <span class="o">(</span>3.2.13<span class="o">)</span>
</span><span class='line'>Installing arel <span class="o">(</span>3.0.2<span class="o">)</span>
</span><span class='line'>Installing tzinfo <span class="o">(</span>0.3.37<span class="o">)</span>
</span><span class='line'>Installing activerecord <span class="o">(</span>3.2.13<span class="o">)</span>
</span><span class='line'>Installing backports <span class="o">(</span>3.3.4<span class="o">)</span>
</span><span class='line'>Installing eventmachine <span class="o">(</span>1.0.3<span class="o">)</span>
</span><span class='line'>Installing rack <span class="o">(</span>1.5.2<span class="o">)</span>
</span><span class='line'>Installing rack-protection <span class="o">(</span>1.5.0<span class="o">)</span>
</span><span class='line'>Installing rack-test <span class="o">(</span>0.6.2<span class="o">)</span>
</span><span class='line'>Installing tilt <span class="o">(</span>1.4.1<span class="o">)</span>
</span><span class='line'>Installing sinatra <span class="o">(</span>1.4.3<span class="o">)</span>
</span><span class='line'>Installing sinatra-contrib <span class="o">(</span>1.4.0<span class="o">)</span>
</span><span class='line'>Installing sqlite3 <span class="o">(</span>1.3.7<span class="o">)</span>
</span><span class='line'>Using bundler <span class="o">(</span>1.3.5<span class="o">)</span>
</span><span class='line'>Your bundle is <span class="nb">complete</span>!
</span><span class='line'>It was installed into ./vendor/bundle
</span></code></pre></td></tr></table></div></figure>


<h2>hello world を返す sinatra アプリケーションを書く</h2>

<p>サイトのルートへアクセスが遇ったときに &ldquo;hello world&rdquo; を返す <code>main.rb</code> を作成する。適当なエディタで以下を書いて保存する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;sinatra&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">get</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="s2">&quot;hello world&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>アプリケーションを実行する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>ruby main.rb
</span></code></pre></td></tr></table></div></figure>


<p>動作確認をする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl http://localhost:4567/
</span><span class='line'>hello world%
</span></code></pre></td></tr></table></div></figure>


<p>ちゃんと返ってきている。簡単。
ここでは、 <code>curl</code> で確認したが、もちろん web ブラウザで <a href="http://localhost:4567/">http://localhost:4567/</a> へアクセスして確認してもOK。
アプリケーションの終了は <code>Ctrl-c</code> でOK。</p>

<h2>ルーティング: 複数のリクエストをさばく</h2>

<p>sinatra では、以下のように HTTP メソッド (GET, POST, &hellip;)とURLがペアでルーティングされる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">get</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># show something</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">post</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># create something</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">put</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># replace something</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">patch</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># modify something</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">delete</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># annihilate something</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">options</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># appease something</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">link</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># affiliate something</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">unlink</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># separate something</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>先ほど書いた <code>main.rb</code> を修正していろいろな HTTP GET リクエストに対応する。
ここでは <a href="http://localhost:4567/about">http://localhost:4567/about</a> にアクセスが有った場合、 &ldquo;about this site&rdquo; 文字列を返すように追記する。
以下は、<code>git diff</code> の結果を示す。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gh">diff --git a/main.rb b/main.rb</span>
</span><span class='line'><span class="gh">index 713861d..9423680 100644</span>
</span><span class='line'><span class="gd">--- a/main.rb</span>
</span><span class='line'><span class="gi">+++ b/main.rb</span>
</span><span class='line'><span class="gu">@@ -1,5 +1,11 @@</span>
</span><span class='line'> require &#39;sinatra&#39;
</span><span class='line'><span class="gi">+require &#39;sinatra/reloader&#39;</span>
</span><span class='line'>
</span><span class='line'> get &#39;/&#39; do
</span><span class='line'>   &quot;hello world&quot;
</span><span class='line'> end
</span><span class='line'><span class="gi">+</span>
</span><span class='line'><span class="gi">+get &#39;/about&#39; do</span>
</span><span class='line'><span class="gi">+  &quot;about this site&quot;</span>
</span><span class='line'><span class="gi">+end</span>
</span><span class='line'><span class="gi">+</span>
</span></code></pre></td></tr></table></div></figure>


<p>通常、スクリプトの修正をアプリケーションへ反映するためには、アプリケーションの再起動が必要となる。<code>require 'sinatra/reloader'</code> により、その必要がなくなる。</p>

<h2>URL からのパラメータを扱う</h2>

<p>以下のメソッドを書くことにより、<a href="http://localhost:4567/hello/SOME_NAME">http://localhost:4567/hello/SOME_NAME</a> へアクセスすると SOME_NAME 部分を扱うことができる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">get</span> <span class="s1">&#39;/hello/:name&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="s2">&quot;hello </span><span class="si">#{</span><span class="n">params</span><span class="o">[</span><span class="ss">:name</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>これは以下のようにも書ける。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">get</span> <span class="s1">&#39;/hello/:name&#39;</span> <span class="k">do</span> <span class="o">|</span><span class="n">n</span><span class="o">|</span>
</span><span class='line'>  <span class="s2">&quot;hello </span><span class="si">#{</span><span class="n">n</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>複数のパラメータを扱うときは以下のように書く。
<a href="http://localhost:4567/hello/FAMILY_NAME/LAST_NAME">http://localhost:4567/hello/FAMILY_NAME/LAST_NAME</a> へアクセスすると、FAMILY_NAME と LAST_NAME を扱える。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">get</span> <span class="s1">&#39;/hello/:fname/?:lname?&#39;</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="p">,</span> <span class="n">l</span><span class="o">|</span>
</span><span class='line'>  <span class="s2">&quot;hello </span><span class="si">#{</span><span class="n">f</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="n">l</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>パラメータは、ワイルドカードや正規表現で扱うことができる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">get</span> <span class="s1">&#39;/from/*/to/*&#39;</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="p">,</span> <span class="n">t</span><span class="o">|</span>
</span><span class='line'>  <span class="s2">&quot;from </span><span class="si">#{</span><span class="n">f</span><span class="si">}</span><span class="s2"> to </span><span class="si">#{</span><span class="n">t</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>結果は以下のとおり。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl http://localhost:4567/from/fukuoka/to/tokyo
</span><span class='line'>from fukuoka to tokyo%
</span></code></pre></td></tr></table></div></figure>


<p>正規表現で扱う場合は、以下。ここでは、<code>/users/</code> 以下がすべて数字であるアクセスの場合にマッチングさせている。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">get</span> <span class="sr">%r{/users/([0-9]+)}</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>  <span class="s2">&quot;user id = </span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>結果は以下のとおり。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl http://localhost:4567/users/12345
</span><span class='line'>user <span class="nv">id</span> <span class="o">=</span> 12345%
</span></code></pre></td></tr></table></div></figure>


<h2>before/after filter</h2>

<p>sinatra のフィルタは、ルーティングされたコンテキストを実行する前後(before / after)で、リクエストとレスポンスを変更することができる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">before</span> <span class="k">do</span>
</span><span class='line'>  <span class="vi">@before_value</span> <span class="o">=</span> <span class="s2">&quot;foo&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">get</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="s2">&quot;before_value has been set to </span><span class="si">#{</span><span class="vi">@before_value</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">after</span> <span class="k">do</span>
</span><span class='line'> <span class="nb">puts</span> <span class="s2">&quot;After filter called to perform some task.&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>以下のように記述することで、フィルタは特定パスのリクエストにのみ評価される。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">before</span> <span class="s1">&#39;/path/you/want/*&#39;</span>
</span><span class='line'>  <span class="c1"># execute only before the &#39;/path/you/want/*&#39; route</span>
</span><span class='line'>  <span class="n">authenticate</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>helper</h2>

<p>ヘルパーメソッドを定義して、ルートハンドラーやテンプレートとして使える。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">helpers</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># 共通関数を書ける</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">say_hello</span><span class="p">(</span> <span class="nb">name</span> <span class="p">)</span>
</span><span class='line'>    <span class="s2">&quot;hello, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">get</span> <span class="s1">&#39;/:name&#39;</span> <span class="k">do</span> <span class="o">|</span><span class="n">n</span><span class="o">|</span>
</span><span class='line'>  <span class="n">say_hello</span><span class="p">(</span> <span class="n">n</span> <span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記は、モジュールとしても記述できる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Hello</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">say_hello</span><span class="p">(</span> <span class="nb">name</span> <span class="p">)</span> <span class="s2">&quot;hello, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">Goodbye</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">say_goodbye</span><span class="p">(</span> <span class="nb">name</span> <span class="p">)</span> <span class="s2">&quot;goodbye, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">helpers</span> <span class="no">Hello</span><span class="p">,</span> <span class="no">Goodbye</span>
</span></code></pre></td></tr></table></div></figure>


<h2>テンプレートエンジンを扱う</h2>

<p>sinatra では様々なテンプレートエンジンを扱うことができる。
例えば、haml, erb, sass, markdown, slim, coffescript など。詳細は <a href="http://www.sinatrarb.com/intro.html#Available%20Template%20Languages">http://www.sinatrarb.com/intro.html#Available%20Template%20Languages</a> このあたりを参照。</p>

<p>ここでは、erb の例を示す。</p>

<p><code>views/index.erb</code> を作成する。スクリプトからは以下のように呼び出せばOK。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">get</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">erb</span> <span class="ss">:index</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>テンプレートエンジンにパラメータを渡す</h3>

<p>インスタンス変数に渡して、テンプレート側からコールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">get</span> <span class="s1">&#39;/:name&#39;</span> <span class="k">do</span> <span class="o">|</span><span class="n">n</span><span class="o">|</span>
</span><span class='line'>  <span class="vi">@name</span>  <span class="o">=</span> <span class="n">n</span>
</span><span class='line'>  <span class="vi">@title</span> <span class="o">=</span> <span class="s1">&#39;sinatra sample&#39;</span>
</span><span class='line'>  <span class="n">erb</span> <span class="ss">:index</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>views/index.erb</code> は以下。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">&lt;!DOCTYPE html&gt;</span>
</span><span class='line'><span class="x">&lt;html lang=&quot;ja&quot;&gt;</span>
</span><span class='line'><span class="x">&lt;head&gt;</span>
</span><span class='line'><span class="x">  &lt;meta charset=&quot;urf-8&quot;&gt;</span>
</span><span class='line'><span class="x">  &lt;title&gt;</span><span class="cp">&lt;%=</span> <span class="vi">@title</span> <span class="cp">%&gt;</span><span class="x">&lt;/title&gt;</span>
</span><span class='line'><span class="x">&lt;/head&gt;</span>
</span><span class='line'><span class="x">&lt;body&gt;</span>
</span><span class='line'><span class="x">&lt;h1&gt;hello </span><span class="cp">&lt;%=</span> <span class="vi">@name</span> <span class="cp">%&gt;</span><span class="x">&lt;/h1&gt;</span>
</span><span class='line'><span class="x">&lt;/body&gt;</span>
</span><span class='line'><span class="x">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>実行結果は以下のとおり。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl http://localhost:4567/taro
</span><span class='line'>&lt;!DOCTYPE html&gt;
</span><span class='line'>&lt;html <span class="nv">lang</span><span class="o">=</span><span class="s2">&quot;ja&quot;</span>&gt;
</span><span class='line'>&lt;head&gt;
</span><span class='line'>  &lt;meta <span class="nv">charset</span><span class="o">=</span><span class="s2">&quot;urf-8&quot;</span>&gt;
</span><span class='line'>  &lt;title&gt;sinatra sample&lt;/title&gt;
</span><span class='line'>&lt;/head&gt;
</span><span class='line'>&lt;body&gt;
</span><span class='line'>&lt;h1&gt;hello taro&lt;/h1&gt;
</span><span class='line'>&lt;/body&gt;
</span><span class='line'>&lt;/html&gt;
</span></code></pre></td></tr></table></div></figure>


<h3>layout テンプレート</h3>

<p>テンプレートが複数存在するときに、ヘッダーやフッターなど、共通部分が出てくる。
そのような共通部分を <code>views/layout.erb</code> 切り出すことができる。(erb以外のときはファイル拡張子を変えればよい。)
<code>views/layout.erb</code> は優先的に読み込まれる。</p>

<p>共通部分を <code>layout.erb</code> に記述し、個別記述部分を <code>yield</code> で呼び出す。以下に <code>layout.erb</code> の例を示す。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">&lt;!DOCTYPE html&gt;</span>
</span><span class='line'><span class="x">&lt;html lang=&quot;ja&quot;&gt;</span>
</span><span class='line'><span class="x">&lt;head&gt;</span>
</span><span class='line'><span class="x">  &lt;meta charset=&quot;urf-8&quot;&gt;</span>
</span><span class='line'><span class="x">  &lt;title&gt;test&lt;/title&gt;</span>
</span><span class='line'><span class="x">&lt;/head&gt;</span>
</span><span class='line'><span class="x">&lt;body&gt;</span>
</span><span class='line'><span class="x">  </span><span class="cp">&lt;%=</span> <span class="k">yield</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">&lt;/body&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>この時、以下のような <code>index.erb</code> テンプレートと</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">  &lt;h1&gt;test&lt;/h1&gt;</span>
</span><span class='line'><span class="x">  &lt;h2&gt;</span><span class="cp">&lt;%=</span> <span class="vi">@name</span><span class="cp">%&gt;</span><span class="x">&lt;/h2&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>以下のルーティングにより</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;sinatra&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;sinatra/reloader&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">get</span> <span class="s1">&#39;/:name&#39;</span> <span class="k">do</span> <span class="o">|</span><span class="n">n</span><span class="o">|</span>
</span><span class='line'>  <span class="vi">@name</span> <span class="o">=</span> <span class="n">n</span>
</span><span class='line'>  <span class="n">erb</span> <span class="ss">:index</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>以下の様な結果になる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl http://localhost:4567/hanako
</span><span class='line'>&lt;!DOCTYPE html&gt;
</span><span class='line'>&lt;html <span class="nv">lang</span><span class="o">=</span><span class="s2">&quot;ja&quot;</span>&gt;
</span><span class='line'>&lt;head&gt;
</span><span class='line'>  &lt;meta <span class="nv">charset</span><span class="o">=</span><span class="s2">&quot;urf-8&quot;</span>&gt;
</span><span class='line'>  &lt;title&gt;test&lt;/title&gt;
</span><span class='line'>&lt;/head&gt;
</span><span class='line'>&lt;body&gt;
</span><span class='line'>    &lt;h1&gt;test&lt;/h1&gt;
</span><span class='line'>  &lt;h2&gt;hanako&lt;/h2&gt;
</span><span class='line'>
</span><span class='line'>&lt;/body&gt;
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[junos firewall filter term 定義を挿入する方法]]></title>
    <link href="http://momota.github.io/blog/2013/09/14/junos-filter/"/>
    <updated>2013-09-14T12:36:00+09:00</updated>
    <id>http://momota.github.io/blog/2013/09/14/junos-filter</id>
    <content type="html"><![CDATA[<p><img src="http://upload.wikimedia.org/wikipedia/en/8/86/Junos_sw_logo.jpg" alt="junos" /></p>

<p>junos の firewall filter の設定で定義の順序について。(EXシリーズを想定)</p>

<p>以下、すべてconfiguration mode での操作。</p>

<p>下記のようなフィルタがすでに設定されている場合に、<code>TERM10</code> と <code>TERM20</code> の間に <code>TERM15</code> を挿入したいことがある。フィルタは上から順に評価されるし。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># show | display set 
</span><span class='line'>...
</span><span class='line'>set firewall family inet filter FILTER01 term TERM10 from source-address 10.0.0.1/32
</span><span class='line'>set firewall family inet filter FILTER01 term TERM10 from destination-address 192.168.1.0/24
</span><span class='line'>set firewall family inet filter FILTER01 term TERM10 from tcp-established
</span><span class='line'>set firewall family inet filter FILTER01 term TERM10 then accept
</span><span class='line'>set firewall family inet filter FILTER01 term TERM20 then count COUNTER20
</span><span class='line'>set firewall family inet filter FILTER01 term TERM20 then discard
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<p>単純に以下のターム定義 <code>TERM15</code> を追加で設定すると</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># set firewall family inet filter FILTER01 term TERM15 from source-address 10.0.0.2/32
</span><span class='line'># set firewall family inet filter FILTER01 term TERM15 from destination-address 192.168.1.0/24
</span><span class='line'># set firewall family inet filter FILTER01 term TERM15 from protocol tcp
</span><span class='line'># set firewall family inet filter FILTER01 term TERM15 from destination-port 20-21
</span><span class='line'># set firewall family inet filter FILTER01 term TERM15 then accept</span></code></pre></td></tr></table></div></figure>


<p>以下のように、意図した箇所に設定が反映されない。
つまり、10.0.0.2/32 から 192.168.1.0/24 への FTP 通信は許可されない。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'># show | display set
</span><span class='line'>...
</span><span class='line'>  set firewall family inet filter FILTER01 term TERM10 from source-address 10.0.0.1/32
</span><span class='line'>  set firewall family inet filter FILTER01 term TERM10 from destination-address 192.168.1.0/24
</span><span class='line'>  set firewall family inet filter FILTER01 term TERM10 from tcp-established
</span><span class='line'>  set firewall family inet filter FILTER01 term TERM10 then accept
</span><span class='line'>  set firewall family inet filter FILTER01 term TERM20 then count COUNTER20
</span><span class='line'>  set firewall family inet filter FILTER01 term TERM20 then discard
</span><span class='line'><span class="gi">+ set firewall family inet filter FILTER01 term TERM15 from source-address 10.0.0.2/32</span>
</span><span class='line'><span class="gi">+ set firewall family inet filter FILTER01 term TERM15 from destination-address 192.168.1.0/24</span>
</span><span class='line'><span class="gi">+ set firewall family inet filter FILTER01 term TERM15 from protocol tcp</span>
</span><span class='line'><span class="gi">+ set firewall family inet filter FILTER01 term TERM15 from destination-port 20-21</span>
</span><span class='line'><span class="gi">+ set firewall family inet filter FILTER01 term TERM15 then accept</span>
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p><code>TERM10</code> と <code>TERM20</code> の間に <code>TERM15</code> を挿入する場合は、以下のように既存定義をすべて <code>delete</code> してから新しい定義追加済みの定義を設定し直す必要があるが、ターム定義が1000くらいあるケースを想定するとそれは避けたい。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'># delete firewall family inet filter FILTER01 term TERM10
</span><span class='line'># delete firewall family inet filter FILTER01 term TERM20
</span><span class='line'>#
</span><span class='line'># set firewall family inet filter FILTER01 term TERM10 from source-address 10.0.0.1/32
</span><span class='line'># set firewall family inet filter FILTER01 term TERM10 from destination-address 192.168.1.0/24
</span><span class='line'># set firewall family inet filter FILTER01 term TERM10 from tcp-established
</span><span class='line'># set firewall family inet filter FILTER01 term TERM10 then accept
</span><span class='line'># set firewall family inet filter FILTER01 term TERM15 from source-address 10.0.0.2/32
</span><span class='line'># set firewall family inet filter FILTER01 term TERM15 from destination-address 192.168.1.0/24
</span><span class='line'># set firewall family inet filter FILTER01 term TERM15 from protocol tcp
</span><span class='line'># set firewall family inet filter FILTER01 term TERM15 from destination-port 20-21
</span><span class='line'># set firewall family inet filter FILTER01 term TERM15 then accept
</span><span class='line'># set firewall family inet filter FILTER01 term TERM20 then count COUNTER20
</span><span class='line'># set firewall family inet filter FILTER01 term TERM20 then discard
</span></code></pre></td></tr></table></div></figure>


<p>このようなときには <code>insert</code> を使う。以下のようにターム設定後に <code>insert</code> してあげればOK。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'># set firewall family inet filter FILTER01 term TERM15 from source-address 10.0.0.2/32
</span><span class='line'># set firewall family inet filter FILTER01 term TERM15 from destination-address 192.168.1.0/24
</span><span class='line'># set firewall family inet filter FILTER01 term TERM15 from protocol tcp
</span><span class='line'># set firewall family inet filter FILTER01 term TERM15 from destination-port 20-21
</span><span class='line'># set firewall family inet filter FILTER01 term TERM15 then accept
</span><span class='line'>#
</span><span class='line'># insert firewall family inet filter FILTER01 term TERM15 after term TERM_10
</span></code></pre></td></tr></table></div></figure>


<p>そうすると、以下のように意図したとおり定義できる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'># show | display set
</span><span class='line'>...
</span><span class='line'>  set firewall family inet filter FILTER01 term TERM10 from source-address 10.0.0.1/32
</span><span class='line'>  set firewall family inet filter FILTER01 term TERM10 from destination-address 192.168.1.0/24
</span><span class='line'>  set firewall family inet filter FILTER01 term TERM10 from tcp-established
</span><span class='line'>  set firewall family inet filter FILTER01 term TERM10 then accept
</span><span class='line'><span class="gi">+ set firewall family inet filter FILTER01 term TERM15 from source-address 10.0.0.2/32</span>
</span><span class='line'><span class="gi">+ set firewall family inet filter FILTER01 term TERM15 from destination-address 192.168.1.0/24</span>
</span><span class='line'><span class="gi">+ set firewall family inet filter FILTER01 term TERM15 from protocol tcp</span>
</span><span class='line'><span class="gi">+ set firewall family inet filter FILTER01 term TERM15 from destination-port 20-21</span>
</span><span class='line'><span class="gi">+ set firewall family inet filter FILTER01 term TERM15 then accept</span>
</span><span class='line'>  set firewall family inet filter FILTER01 term TERM20 then count COUNTER20
</span><span class='line'>  set firewall family inet filter FILTER01 term TERM20 then discard
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[zsh をログインシェルにしてワーク・ライフ・バランスを改善する (oh-my-zsh)]]></title>
    <link href="http://momota.github.io/blog/2013/09/07/oh-my-zsh/"/>
    <updated>2013-09-07T00:04:00+09:00</updated>
    <id>http://momota.github.io/blog/2013/09/07/oh-my-zsh</id>
    <content type="html"><![CDATA[<p>bash や tcsh でいいよ、って人もだまされたと思って zsh 試してほしい。もう元に戻れないくらい便利だと感じてもらえるだろう。本番環境のサーバにも入れたいくらい。</p>

<p>zsh そのままでも十分便利だけど、<em>oh-my-zsh</em> を入れるとさらに便利になるよ。
oh-my-zsh はオープンソースで zsh の便利設定やカラーテーマなどがまとまっているもの。</p>

<p>以下では、zsh インストールと oh-my-zsh の導入について記載するよ。</p>

<!-- more -->


<h2>0. zsh の特徴, つまり導入メリット</h2>

<p><a href="http://ja.wikipedia.org/wiki/Z_Shell">wikipedia に zsh の特徴がまとめられている</a>が、その中でも特に以下が個人的に便利だと思う。</p>

<ul>
<li>プログラム可能な補完機能に拠って、多くのユーザーコマンドのオプションや引数を打つのを支援する

<ul>
<li>インストールの時点で数百のコマンドをサポートしている</li>
</ul>
</li>
<li>スペル修正機能

<ul>
<li>間違いを正すのはもちろん、大文字を小文字に変換してくれたり</li>
</ul>
</li>
<li>ユーザーの起動している全てのzshでコマンド履歴を共有することができる

<ul>
<li>screen や tmux 使いにはうれしい</li>
</ul>
</li>
</ul>


<p>その他、Wikipediaには以下の特徴が列挙されている。</p>

<ul>
<li>拡張ファイル名生成（ワイルドカード展開）に拠って &ldquo;find&rdquo; のような外部コマンドを呼び出さないで、ファイル名を展開する。</li>
<li>変数や配列の処理が改善されている。</li>
<li>複数行コマンドがバッファーで編集できる。</li>
<li>様々な互換モードが在る。例えば、zshをshとして実行したとき、bashの振りをするようにできる。</li>
<li>プロンプトテーマ</li>
<li>端末の右端に情報を表示し長いコマンドを打っているときは自動的に隠れる右プロンプトを表示できる。</li>
<li>殆ど全部のカスタマイズが可能。</li>
</ul>


<h2>1. zsh をインストールする</h2>

<p>失うものが何もなくなったところで zsh をインストールしよう。</p>

<p>centos だと yum でインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo yum -y install zsh
</span></code></pre></td></tr></table></div></figure>


<p>macだと homebrew でインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo brew install zsh
</span></code></pre></td></tr></table></div></figure>


<p>ubuntu だと apt でインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo apt-get install zsh
</span></code></pre></td></tr></table></div></figure>


<p>インストールできたかどうかを確認する。(上述したすべてのOSで共通、たぶん)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>zsh --version
</span><span class='line'>zsh 4.3.17 <span class="o">(</span>x86_64-unknown-linux-gnu<span class="o">)</span>
</span><span class='line'><span class="nv">$ </span>which zsh
</span><span class='line'>/usr/bin/zsh
</span></code></pre></td></tr></table></div></figure>


<h2>2. ログインシェルを zsh にする</h2>

<p>ログイン直後にデフォルトで起動する shell を zsh にするよ。
ここでは ubuntu 12.04 でのコマンド例ですが、たぶん mac や centos とかでも一緒でOKだと思う。</p>

<p>現在利用可能なシェルの一覧は以下で確認できる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>cat /etc/shells
</span><span class='line'><span class="c"># /etc/shells: valid login shells</span>
</span><span class='line'>/bin/sh
</span><span class='line'>/bin/dash
</span><span class='line'>/bin/bash
</span><span class='line'>/bin/rbash
</span><span class='line'>/bin/zsh
</span><span class='line'>/usr/bin/zsh
</span><span class='line'>/usr/bin/tmux
</span></code></pre></td></tr></table></div></figure>


<p>それではログインシェルを zsh に変えよう。
インタラクティブにパスワードと zsh への path を入力しよう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>chsh
</span><span class='line'>Password:
</span><span class='line'>Changing the login shell <span class="k">for </span>momota
</span><span class='line'>Enter the new value, or press ENTER <span class="k">for </span>the default
</span><span class='line'>        Login Shell <span class="o">[</span>/bin/bash<span class="o">]</span>: /usr/bin/zsh
</span></code></pre></td></tr></table></div></figure>


<p>再度ログインして、ログインシェルが zsh へ変わったことを確認しよう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="nv">$SHELL</span>
</span><span class='line'>/usr/bin/zsh
</span></code></pre></td></tr></table></div></figure>


<p>ここで、<code>‾/.zshrc</code> を作りたい衝動を抑えて、次に進もう。</p>

<h2>3. <a href="https://github.com/robbyrussell/oh-my-zsh">oh-my-zsh</a> を導入する</h2>

<p>繰り返しになりますが、oh-my-zsh はオープンソースで zsh の便利設定やカラーテーマなどがまとまっているもの。<code>.zshrc</code>もテンプレがあるのでコピれば楽ちん。
カスタマイズしたければ oh-my-zsh を導入してからにしよう。
導入方法は github に書いてあるとおり <code>curl -L https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh | sh</code> でいいと思うけど、シェルスクリプトの中身をチェックするのがめんどかったのでわたしはマニュアルで入れました。</p>

<h3>3.1. リポジトリから 最新版を clone する</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git clone git://github.com/robbyrussell/oh-my-zsh.git ‾/.oh-my-zsh
</span></code></pre></td></tr></table></div></figure>


<h3>3.2. すでに <code>‾/.zshrc</code> を作っているひとはバックアップしよう</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>cp ‾/.zshrc ‾/.zshrc.orig
</span></code></pre></td></tr></table></div></figure>


<h3>3.3. <code>.zshrc</code> テンプレートをコピる</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>cp ‾/.oh-my-zsh/templates/zshrc.zsh-template ‾/.zshrc
</span></code></pre></td></tr></table></div></figure>


<h3>3.4. 新しい <code>.zshrc</code> を読み込もう</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">source</span> ‾/.zshrc
</span></code></pre></td></tr></table></div></figure>


<p><code>source</code> の代わりに再ログインしてもいいけど。
こんな感じで git のステータスも見やすくなる。</p>

<p><img src="https://dl.dropboxusercontent.com/u/28495046/octopress/20130907_oh-my-zsh/zsh.png" alt="zsh" /></p>

<h3>3.5. テーマを変更する</h3>

<p><a href="https://github.com/robbyrussell/oh-my-zsh/wiki/themes">ここにいろいろなテーマがある</a> ので好きなテーマ名を <code>‾/.zshrc</code> 中の <code>ZSH_THEME</code> にセットしてあげればOK。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">ZSH_THEME</span><span class="o">=</span><span class="s2">&quot;wedisagree&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>変更したら、以下で <code>‾/.zshrc</code> を再読み込み。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">source</span> ‾/.zshrc
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[man ページに色付けする (zsh, bash)]]></title>
    <link href="http://momota.github.io/blog/2013/08/31/shell-man-color/"/>
    <updated>2013-08-31T22:31:00+09:00</updated>
    <id>http://momota.github.io/blog/2013/08/31/shell-man-color</id>
    <content type="html"><![CDATA[<h1>man コマンドで表示するマニュアルページに色付けする</h1>

<p>man コマンド、man コマンド、マンコマンド… 連呼している私はもう今年で31歳です。こんばんわ。</p>

<p><code>~/.zshrc</code> [bash 使いなら <code>~/.bash_profile</code> ] に以下を追記するとman に色がついて読みやすいっす。</p>

<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>man<span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        env <span class="se">\</span>
</span><span class='line'>                <span class="nv">LESS_TERMCAP_mb</span><span class="o">=</span><span class="k">$(</span><span class="nb">printf</span> <span class="s2">&quot;\e[1;31m&quot;</span><span class="k">)</span> <span class="se">\</span>
</span><span class='line'>                <span class="nv">LESS_TERMCAP_md</span><span class="o">=</span><span class="k">$(</span><span class="nb">printf</span> <span class="s2">&quot;\e[1;31m&quot;</span><span class="k">)</span> <span class="se">\</span>
</span><span class='line'>                <span class="nv">LESS_TERMCAP_me</span><span class="o">=</span><span class="k">$(</span><span class="nb">printf</span> <span class="s2">&quot;\e[0m&quot;</span><span class="k">)</span> <span class="se">\</span>
</span><span class='line'>                <span class="nv">LESS_TERMCAP_se</span><span class="o">=</span><span class="k">$(</span><span class="nb">printf</span> <span class="s2">&quot;\e[0m&quot;</span><span class="k">)</span> <span class="se">\</span>
</span><span class='line'>                <span class="nv">LESS_TERMCAP_so</span><span class="o">=</span><span class="k">$(</span><span class="nb">printf</span> <span class="s2">&quot;\e[1;44;33m&quot;</span><span class="k">)</span> <span class="se">\</span>
</span><span class='line'>                <span class="nv">LESS_TERMCAP_ue</span><span class="o">=</span><span class="k">$(</span><span class="nb">printf</span> <span class="s2">&quot;\e[0m&quot;</span><span class="k">)</span> <span class="se">\</span>
</span><span class='line'>                <span class="nv">LESS_TERMCAP_us</span><span class="o">=</span><span class="k">$(</span><span class="nb">printf</span> <span class="s2">&quot;\e[1;32m&quot;</span><span class="k">)</span> <span class="se">\</span>
</span><span class='line'>                man <span class="s2">&quot;$@&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>設定変更後は、適当に <code>$ source ~/.zshrc</code> とかしてください。</p>

<ul>
<li>before</li>
</ul>


<p><img src="https://dl.dropboxusercontent.com/u/28495046/octopress/20130831_sh/sh_before.png" alt="before_man" /></p>

<ul>
<li>after</li>
</ul>


<p><img src="https://dl.dropboxusercontent.com/u/28495046/octopress/20130831_sh/sh_after.png" alt="after_man" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vim プラグインで幸せな生活を送る]]></title>
    <link href="http://momota.github.io/blog/2013/08/29/vim-plugins/"/>
    <updated>2013-08-29T00:38:00+09:00</updated>
    <id>http://momota.github.io/blog/2013/08/29/vim-plugins</id>
    <content type="html"><![CDATA[<p>vimはhjklな変態的キーバインドから敬遠されがちだと思うけど強力なプラグインがあってこそ、やめられないとまらないわけであって、ここではプラグインの導入方法や管理方法を記載します。</p>

<!-- more -->


<h2>ノーマルなプラグイン導入</h2>

<ol>
<li><p>プラグインファイルをダウンロードしてくる</p></li>
<li><p>ダウンロードしたプラグインファイル一式を runtimepathで指定されたディレクトリ以下に放り込む</p>

<ul>
<li>通常は <code>$HOME/.vim</code> 。runtimepathは以下のviコマンドで確認できる。</li>
</ul>
</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'><span class="p">:</span><span class="k">set</span> <span class="nb">runtimepath</span>
</span></code></pre></td></tr></table></div></figure>


<p>helpを見てみると、以下ディレクトリ(優先順)がデフォルト設定されている。(vim74-kaoriya-win64で確認)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'> :help <span class="nb">runtimepath</span>
</span><span class='line'> # <span class="p">=&gt;</span> 以下抜粋
</span><span class='line'> <span class="s1">&#39;runtimepath&#39;</span> <span class="s1">&#39;rtp&#39;</span> 文字列  <span class="p">(</span>既定値:
</span><span class='line'>                 Unix: <span class="c">&quot;$HOME/.vim,</span>
</span><span class='line'>                 $VIM/vimfiles<span class="p">,</span>
</span><span class='line'>                 $VIMRUNTIME<span class="p">,</span>
</span><span class='line'>                 $VIM<span class="sr">/vimfiles/</span>after<span class="p">,</span>
</span><span class='line'>                 $HOME<span class="sr">/.vim/</span>after&quot;
</span><span class='line'>                 DOS<span class="p">,</span> MS<span class="p">-</span>Win系<span class="p">,</span> OS<span class="sr">/2: &quot;$HOME/</span>vimfiles<span class="p">,</span>
</span><span class='line'>                 $VIM/vimfiles<span class="p">,</span>
</span><span class='line'>                 $VIMRUNTIME<span class="p">,</span>
</span><span class='line'>                 $VIM<span class="sr">/vimfiles/</span>after<span class="p">,</span>
</span><span class='line'>                 $HOME<span class="sr">/vimfiles/</span>after&quot;
</span><span class='line'>                 Macintosh: <span class="c">&quot;$VIM:vimfiles,</span>
</span><span class='line'>                 $VIMRUNTIME<span class="p">,</span>
</span><span class='line'>                 $VIM:vimfiles:after&quot;
</span><span class='line'>                 <span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>プラグインによるプラグインパッケージ管理</h2>

<p>上述したプラグイン導入を続けていくと、<code>$HOME/.vim/</code> 以下が散らかっていくことが容易に想像できるでしょう。散らかるだけで実害がなければ良いのですが、あるプラグインだけ削除したいときなどに難易度高くて困ります。
そこで、プラグインの相互独立性を担保しながら管理できるプラグインを導入します。</p>

<p>代表的なプラグインパッケージ管理プラグインは、以下です。</p>

<table>
<thead>
<tr>
<th></th>
<th>プラグイン名 </th>
<th>概要       </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td><a href="https://github.com/tpope/vim-pathogen">pathogen</a>      </td>
<td> <code>~/.vim/bundle/&lt;プラグイン名&gt;/</code> 以下の各ディレクトリも <code>~/.vim/</code> 直下と同じように読み込むようにするプラグイン。これにより、<code>~/.vim/bundle/</code> 以下にプラグインごとに別のディレクトリを切って管理をすることができるようになる。</td>
</tr>
<tr>
<td></td>
<td><a href="https://github.com/gmarik/vundle">vundle</a>             </td>
<td>Vundle は Rails 3 で採用されている、Gem 管理システム Bundler に影響を受けたプラグイン管理システム。自分で <code>~/.vim/bundle</code> git cloneなどで放り込まなくても、vimコマンドでプラグイン追加が可能。</td>
</tr>
<tr>
<td></td>
<td><a href="https://github.com/Shougo/neobundle.vim">neobundle</a>   </td>
<td>Vundleにインスパイアされたプラグイン管理システム。Vundleの改良版。</td>
</tr>
</tbody>
</table>


<p>上記よりNeoBundleを選びたいと思います。</p>

<h2>NeoBundleインストールと設定</h2>

<h3>1. NeoBundleをセットアップする</h3>

<ul>
<li>githubから最新NeoBundleのソースを clone する。ここでは、runtimepathを<code>~./.vim/</code>とします。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>mkdir -p ~/.vim/bundle
</span><span class='line'><span class="nv">$ </span>git clone git://github.com/Shougo/neobundle.vim ~/.vim/bundle/neobundle.vim
</span></code></pre></td></tr></table></div></figure>


<h3>2. NeoBundleを設定する</h3>

<ul>
<li><code>~/.vimrc</code> にNeoBundleの設定を加える。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'><span class="c">&quot; ----------------------------------------------------------------------------------------</span>
</span><span class='line'><span class="c">&quot;   neobundle</span>
</span><span class='line'><span class="c">&quot; ----------------------------------------------------------------------------------------</span>
</span><span class='line'><span class="k">set</span> <span class="nb">nocompatible</span>               <span class="c">&quot; Be iMproved</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> has<span class="p">(</span><span class="s1">&#39;vim_starting&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">set</span> <span class="nb">runtimepath</span><span class="p">+=~</span><span class="sr">/.vim/</span>bundle<span class="sr">/neobundle.vim/</span>
</span><span class='line'><span class="k">endif</span>
</span><span class='line'>
</span><span class='line'><span class="k">call</span> neobundle#rc<span class="p">(</span>expand<span class="p">(</span><span class="s1">&#39;~/.vim/bundle/&#39;</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="c">&quot; Let NeoBundle manage NeoBundle</span>
</span><span class='line'>NeoBundleFetch <span class="s1">&#39;Shougo/neobundle.vim&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&quot; Recommended to install</span>
</span><span class='line'><span class="c">&quot; After install, turn shell ~/.vim/bundle/vimproc, (n,g)make -f your_machines_makefile</span>
</span><span class='line'>NeoBundle <span class="s1">&#39;Shougo/vimproc&#39;</span><span class="p">,</span> {
</span><span class='line'>        \ <span class="s1">&#39;build&#39;</span> : {
</span><span class='line'>                \ <span class="s1">&#39;windows&#39;</span> : <span class="s1">&#39;make -f make_mingw32.mak&#39;</span><span class="p">,</span>
</span><span class='line'>                \ <span class="s1">&#39;cygwin&#39;</span> : <span class="s1">&#39;make -f make_cygwin.mak&#39;</span><span class="p">,</span>
</span><span class='line'>                \ <span class="s1">&#39;mac&#39;</span> : <span class="s1">&#39;make -f make_mac.mak&#39;</span><span class="p">,</span>
</span><span class='line'>                \ <span class="s1">&#39;unix&#39;</span> : <span class="s1">&#39;make -f make_unix.mak&#39;</span><span class="p">,</span>
</span><span class='line'>        \ }<span class="p">,</span>
</span><span class='line'>\ }
</span><span class='line'>
</span><span class='line'><span class="k">filetype</span> plugin indent <span class="k">on</span>     <span class="c">&quot; Required!</span>
</span><span class='line'>
</span><span class='line'><span class="c">&quot; Brief help</span>
</span><span class='line'><span class="c">&quot; :NeoBundleList          - list configured bundles</span>
</span><span class='line'><span class="c">&quot; :NeoBundleInstall(!)    - install(update) bundles</span>
</span><span class='line'><span class="c">&quot; :NeoBundleClean(!)      - confirm(or auto-approve) removal of unused bundles</span>
</span><span class='line'>
</span><span class='line'><span class="c">&quot; Installation check.</span>
</span><span class='line'>NeoBundleCheck
</span></code></pre></td></tr></table></div></figure>


<h3>3. プラグインの取得</h3>

<ul>
<li><code>~/.vimrc</code>にインストールするプラグインを列挙する。(以下は例)</li>
<li>保存したあと、vim を起動し<code>:NeoBundleInstall</code> を実行するとプラグインがインストールされる。プラグインファイルは、<code>.vim/bundle/</code>以下にプラグイン別に保存される。もちろん各プラグインの設定は個別に <code>.vimrc</code> へ記述する必要がある。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'><span class="c">&quot; GitHubリポジトリにあるプラグインを利用する</span>
</span><span class='line'><span class="c">&quot; --&gt; NeoBundle &#39;USER/REPOSITORY-NAME&#39;</span>
</span><span class='line'>NeoBundle <span class="s1">&#39;Shougo/neocomplcache&#39;</span>
</span><span class='line'>NeoBundle <span class="s1">&#39;Shougo/neosnippet&#39;</span>
</span><span class='line'>NeoBundle <span class="s1">&#39;Shougo/unite.vim&#39;</span>
</span><span class='line'>NeoBundle <span class="s1">&#39;thinca/vim-quickrun&#39;</span>
</span><span class='line'>NeoBundle <span class="s1">&#39;davidoc/taskpaper.vim&#39;</span>
</span><span class='line'>NeoBundle <span class="s1">&#39;itchyny/lightline.vim&#39;</span>
</span><span class='line'>NeoBundle <span class="s1">&#39;altercation/vim-colors-solarized&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&quot;GitHub以外のGitリポジトリにあるプラグインを利用する</span>
</span><span class='line'>NeoBundle <span class="s1">&#39;git://git.wincent.com/command-t.git&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&quot; vim-scripts リポジトリにあるプラグインを利用する</span>
</span><span class='line'>NeoBundle <span class="s1">&#39;surround.vim&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&quot;Git以外のリポジトリにあるプラグインを利用する</span>
</span><span class='line'>NeoBundle <span class="s1">&#39;http://svn.macports.org/repository/macports/contrib/mpvim/&#39;</span>
</span><span class='line'>NeoBundle <span class="s1">&#39;https://bitbucket.org/ns9tks/vim-fuzzyfinder&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>プラグインをアンインストールしたい場合は、<code>.vimrc</code>から当該プラグインの記述を消し、<code>:NeoBundleClean</code>を実行する。</li>
</ul>


<h2>おすすめプラグイン</h2>

<table>
<thead>
<tr>
<th></th>
<th>プラグイン名  </th>
<th>概要                                        </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td><a href="https://github.com/Shougo/neocomplcache.vim">neocomplcache</a> </td>
<td>入力補完機能を提供する</td>
</tr>
<tr>
<td></td>
<td><a href="https://github.com/Shougo/neosnippet.vim">neosnippet</a>    </td>
<td>スニペット入力サポート</td>
</tr>
<tr>
<td></td>
<td><a href="https://github.com/itchyny/lightline.vim">lightline.vim</a> </td>
<td>ステータスライン表示をおしゃれに</td>
</tr>
<tr>
<td></td>
<td><a href="https://github.com/davidoc/taskpaper.vim">taskpaper.vim</a> </td>
<td>タスク・TODOリストを管理</td>
</tr>
<tr>
<td></td>
<td><a href="https://github.com/Shougo/unite.vim">unite.vim</a>     </td>
<td>ファイラとして利用</td>
</tr>
<tr>
<td></td>
<td><a href="https://github.com/altercation/vim-colors-solarized">solarized</a>     </td>
<td>カラースキーム</td>
</tr>
<tr>
<td></td>
<td><a href="http://www.vim.org/scripts/script.php?script_id=1697">surround</a>      </td>
<td>HTMLタグなど&#8221;囲まれているもの&#8221;の編集補助</td>
</tr>
</tbody>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rbenv でrubyバージョンにはもう泣かされない]]></title>
    <link href="http://momota.github.io/blog/2013/08/25/rbenv/"/>
    <updated>2013-08-25T22:06:00+09:00</updated>
    <id>http://momota.github.io/blog/2013/08/25/rbenv</id>
    <content type="html"><![CDATA[<p>ソフトウェアバージョンの差異に悩まされる人は多いと思う。</p>

<p>同じOS上で違うバージョンのrubyを動かしたいことはまあある。
<code>/home/you/foo</code>以下は既存コードがあるから1.8系のままでで動かしたいし、<code>/home/you/bar</code>以下は新しい試みとして2.0系を動かしたいとか。
そこでrbenvという便利なrubyバージョン管理ツールがある。
rbenvにより、あるディレクトリ以下のrubyバージョンを任意に指定できる。</p>

<!-- more -->


<h1>rbenv をインストールする</h1>

<p>詳細はgithubの<code>README.md</code>参照。<a href="https://github.com/sstephenson/rbenv">https://github.com/sstephenson/rbenv</a></p>

<h2>1. 最新コードをローカルにチェックアウトする</h2>

<p>githubから最新版を <code>~/.rbenv</code> にチェックアウトする</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git clone https://github.com/sstephenson/rbenv.git ~/.rbenv
</span></code></pre></td></tr></table></div></figure>


<h2>2. pathを通すため、shellの設定を変更する</h2>

<ul>
<li><code>~/.rbenv/bin</code> を <code>$PATH</code> に追加する</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;export PATH=&quot;$HOME/.rbenv/bin:$PATH&quot;&#39;</span> &gt;&gt; ~/.zshrc
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>shim と 自動補完を有効にする</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;eval &quot;$(rbenv init -)&quot;&#39;</span> &gt;&gt; ~/.zshrc
</span></code></pre></td></tr></table></div></figure>


<p>bash ユーザは <code>~/.zshrc</code> の代わりに <code>~/.bash_profile</code> へ。
ubuntu ユーザは <code>~/.zshrc</code> の代わりに <code>~/.profile</code> へ。</p>

<h2>3. 設定変更内容を反映するため、shell を再起動する</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">exec</span> <span class="nv">$SHELL</span> -l
</span></code></pre></td></tr></table></div></figure>


<h2>(番外編) rbenv を最新版にアップグレードする</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> ~/.rbenv
</span><span class='line'><span class="nv">$ </span>git pull
</span></code></pre></td></tr></table></div></figure>


<h1>rbenv で任意バージョンの ruby インストールしたり、切り替えたり</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># インストール可能な ruby バージョンを一覧表示する</span>
</span><span class='line'><span class="c"># &quot;install&quot; command require that install ruby-build</span>
</span><span class='line'><span class="c">#   -&gt; https://github.com/sstephenson/ruby-build</span>
</span><span class='line'><span class="nv">$ </span>rbenv install -l
</span><span class='line'>
</span><span class='line'><span class="c"># List all Ruby versions known by rbenv</span>
</span><span class='line'><span class="nv">$ </span>rbenv versions
</span><span class='line'>
</span><span class='line'><span class="c"># install</span>
</span><span class='line'><span class="nv">$ </span>rbenv install 1.9.3-pxx
</span><span class='line'>
</span><span class='line'><span class="c"># switch version</span>
</span><span class='line'><span class="nv">$ </span>rbenv global 1.9.3-pxx
</span><span class='line'>
</span><span class='line'><span class="c"># back to system default</span>
</span><span class='line'><span class="nv">$ </span>rbenv global system
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c"># 特定のディレクトリ以下のRubyバージョンを切り替え</span>
</span><span class='line'><span class="nv">$ </span>rbenv <span class="nb">local </span>1.9.3-p327
</span><span class='line'>
</span><span class='line'><span class="c"># ローカル設定を解除</span>
</span><span class='line'><span class="nv">$ </span>rbenv <span class="nb">local</span> --unset
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c"># get the latest ruby versions for rbenv</span>
</span><span class='line'><span class="nv">$ </span>brew install ruby-build
</span><span class='line'><span class="nv">$ </span>brew link -f ruby-build
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c"># path to installed ruby or gem</span>
</span><span class='line'><span class="nv">$ </span>rbenv rehash
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vim7.4 を mac (osx) にインストール]]></title>
    <link href="http://momota.github.io/blog/2013/08/24/vim-osx/"/>
    <updated>2013-08-24T12:56:00+09:00</updated>
    <id>http://momota.github.io/blog/2013/08/24/vim-osx</id>
    <content type="html"><![CDATA[<p><a href="http://vim-jp.org/blog/2013/08/10/vim_7.4_released.html">vim 7.4がリリースされた</a>ので、macのvimをupdateする。</p>

<!-- more -->


<h2>install mercurial</h2>

<p>最新のvimをリポジトリから引っ張ってくる(後述の<code>hg clone http://...</code>)ため、分散型バージョン管理システムであるmercurialをインストールする。mercurialはgitの親戚かな。</p>

<ol>
<li><p>インストーラをダウンロードする</p>

<p> mercurial インストーラをダウンロードする from <a href="http://mercurial.selenic.com/">http://mercurial.selenic.com/</a></p></li>
<li><p>install</p>

<p> ダウンロードしたファイルを unzip する。
 解凍した <code>*.mpkg</code> をダブルクリックし、インストーラを起動する。そのあとはポチポチと次へ的なボタンを押す簡単なお仕事。</p></li>
</ol>


<h2>install vim</h2>

<p><a href="http://stackoverflow.com/questions/7211820/update-built-in-vim-on-mac-os-x">http://stackoverflow.com/questions/7211820/update-built-in-vim-on-mac-os-x</a> を参考にした。</p>

<h3>(1) 事前確認</h3>

<p>現状のバイナリへのpathやバージョンを確認する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>which vim
</span><span class='line'>/usr/bin/vim
</span><span class='line'><span class="nv">$ </span>vim --version | head -n 2
</span><span class='line'>VIM - Vi IMproved 7.3 <span class="o">(</span>2010 Aug 15, compiled Jun 20 2012 13:16:02<span class="o">)</span>
</span><span class='line'>Compiled by root@apple.com
</span></code></pre></td></tr></table></div></figure>


<h3>(2) インストールと設定</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /opt/local/bin
</span><span class='line'>
</span><span class='line'><span class="c"># download, compile, and install the latest vim</span>
</span><span class='line'><span class="nv">$ </span>sudo hg clone https://code.google.com/p/vim/
</span><span class='line'><span class="nv">$ </span>mv vim vim_
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>vim_
</span><span class='line'><span class="nv">$ </span>sudo ./configure --prefix<span class="o">=</span>/opt/local
</span><span class='line'><span class="nv">$ </span>sudo make
</span><span class='line'><span class="nv">$ </span>sudo make install
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c"># add the binary to your path, ahead of /usr/bin</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;export PATH=&quot;/opt/local/bin:$PATH&quot;&#39;</span> &gt;&gt; ~/.zshrc
</span><span class='line'>
</span><span class='line'><span class="c"># reload zshrc so the changes take effect in this window</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">source</span> ~/.zshrc
</span></code></pre></td></tr></table></div></figure>


<p>リポジトリからクローンしたときにディレクトリ名が<code>vim</code>のままだと<code>make install</code>時にエラーになるので、<code>vim_</code>など適当なディレクトリ名に変更しました。</p>

<h3>(3) 事後確認</h3>

<p>7.4になりました。enjoy your vim life.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>which vim
</span><span class='line'>/opt/local/bin/vim
</span><span class='line'><span class="nv">$ </span>vim --version | head -n 2
</span><span class='line'>IM - Vi IMproved 7.4 <span class="o">(</span>2013 Aug 10, compiled Aug 24 2013 12:28:42<span class="o">)</span>
</span><span class='line'>MacOS X <span class="o">(</span>unix<span class="o">)</span> version
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iTerm2へsolarized導入]]></title>
    <link href="http://momota.github.io/blog/2013/08/24/solarized-iterm2/"/>
    <updated>2013-08-24T00:52:00+09:00</updated>
    <id>http://momota.github.io/blog/2013/08/24/solarized-iterm2</id>
    <content type="html"><![CDATA[<p><img src="http://ethanschoonover.com/solarized/img/solarized-yinyang.png" alt="solarized" /></p>

<p>人気のカラースキーム <a href="http://ethanschoonover.com/solarized">Solarized</a> を、iTerm2へ適用する。</p>

<p>適用イメージは以下。</p>

<ul>
<li>before</li>
</ul>


<p><img src="https://dl.dropboxusercontent.com/u/28495046/octopress/20130823_iterm_solarized/before_iterm.png" alt="iterm before" /></p>

<ul>
<li>after</li>
</ul>


<p><img src="https://dl.dropboxusercontent.com/u/28495046/octopress/20130823_iterm_solarized/after_iterm.png" alt="iterm after" /></p>

<!-- more -->


<ol>
<li><p>Solarized*.itermcolors をダウンロードする</p>

<p> <a href="https://github.com/altercation/solarized/tree/master/iterm2-colors-solarized">https://github.com/altercation/solarized/tree/master/iterm2-colors-solarized</a> からSolarized*.itermcolors ファイルをダウンロードする</p></li>
<li><p>iterm2 を開く</p>

<p> ちなみにわたしは、<code>ctrl + space</code> でSpotlightを開き、<code>ite</code>入力くらいで起動しています。</p></li>
<li><p>preferencesダイアログを開く</p>

<p> <code>command + o</code> でprofilesダイアログを開いて、<code>Edit Profiles...</code> ボタンを押下する。</p></li>
<li><p>solarized用のprofileを作成する</p>

<p> preferences ダイアログの<code>Profiles</code>タブから、左下の方の<code>+</code>を押下し、プロファイルを追加する。
 <code>General</code>タブのBasicのNameを<code>solarized</code>とかに修正する</p></li>
<li><ol>
<li>でダウンロードしたファイルを読み込ませる</li>
</ol>


<p> <code>Colors</code> タブから <code>Load Presets...</code> ボタンを押下後、<code>import</code> を押す。1. でダウンロードしたSolarized*.itermcolorsファイルを選択する。</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PuTTY へsolarized導入]]></title>
    <link href="http://momota.github.io/blog/2013/08/22/solarized-putty/"/>
    <updated>2013-08-22T23:00:00+09:00</updated>
    <id>http://momota.github.io/blog/2013/08/22/solarized-putty</id>
    <content type="html"><![CDATA[<p><img src="http://ethanschoonover.com/solarized/img/solarized-yinyang.png" alt="solarized" /></p>

<p>人気のカラースキーム <a href="http://ethanschoonover.com/solarized">Solarized</a> を、PuTTYへ適用する。
ちなみにパティと発音するみたいですね。ずっとプティと発音してました。</p>

<p>適用イメージは以下。</p>

<ul>
<li>before</li>
</ul>


<p><img src="https://dl.dropboxusercontent.com/u/28495046/octopress/20130822_putty_solarized/01_before_putty.png" alt="putty before" /></p>

<ul>
<li>after</li>
</ul>


<p><img src="https://dl.dropboxusercontent.com/u/28495046/octopress/20130822_putty_solarized/02_after_putty.png" alt="putty after" /></p>

<!-- more -->


<h1>環境</h1>

<ul>
<li>windows 7 professional service pack 1</li>
<li>PuTTY 0.60-JP_Y-2007-08-06</li>
<li>ちなみにフォントは、&#8221;Osakaー等幅&#8221; を利用</li>
</ul>


<h1>solarized_dark.reg (solarized_light.reg)をダウンロードする</h1>

<p><a href="https://github.com/brantb/solarized/tree/master/putty-colors-solarized">https://github.com/brantb/solarized/tree/master/putty-colors-solarized</a></p>

<p>solarized_dark.regをダウンロードし、<code>C:¥Program Files (x86)¥PuTTY¥</code> に保存</p>

<h1>solarized_dark.regを修正する</h1>

<p><a href="http://27213143.at.webry.info/201304/article_1.html">http://27213143.at.webry.info/201304/article_1.html</a></p>

<p>solarized_dark.regをテキストエディタで開き、ファイル中の <code>Solarized%20Dark(Solarized%20Light)</code> 部分をputtyのセッション名に修正する。下の例では セッション名は <code>_vagrant_ubuntu</code>。</p>

<p><img src="https://dl.dropboxusercontent.com/u/28495046/octopress/20130822_putty_solarized/putty_session_name.png" alt="putty session name" /></p>

<h1>putty設定をインポートする</h1>

<p>以下の2通りのやり方がある。お好きな方でどうぞ。</p>

<h2>(1) ダブルクリックでインポート</h2>

<p>solarized_dark.reg をダブルクリックする。</p>

<h2>(2) コマンドプロンプトからインポート</h2>

<p><a href="http://103px.blog.fc2.com/blog-entry-46.html">http://103px.blog.fc2.com/blog-entry-46.html</a></p>

<p>windowsコマンドプロンプトから.regファイルをインポートする</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'> <span class="p">&gt;</span> <span class="n">reg</span> import C:¥Program Files (x<span class="m">86</span>)¥PuTTY¥solarized_dark.reg
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopressでblog]]></title>
    <link href="http://momota.github.io/blog/2013/08/19/octopress/"/>
    <updated>2013-08-19T23:40:00+09:00</updated>
    <id>http://momota.github.io/blog/2013/08/19/octopress</id>
    <content type="html"><![CDATA[<h1>流れ</h1>

<ol>
<li>github pages用リポジトリ作成</li>
<li>octopressコードをローカルにclone</li>
<li>関連gemをインストール</li>
<li>新規記事をpostする</li>
<li>記事とソースをgithubへデプロイする</li>
</ol>


<h1>環境</h1>

<ul>
<li>mac os x 10.8.4</li>
<li>git version 1.7.9.6 (Apple Git-31.1)</li>
<li>zsh</li>
</ul>


<!-- more -->


<h1>create new github repository</h1>

<p>githubへログイン後、github pages用リポジトリを作成する。<a href="https://github.com/new">https://github.com/new</a>
リポジトリ名は、「username.github.io」。</p>

<h1>最新版のoctopressコードをclone</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git clone git://github.com/imathis/octopress.git username.github.io
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /path/to/username.github.io
</span></code></pre></td></tr></table></div></figure>


<h1>install ruby 1.9.3 by rbenv</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rbenv install 1.9.3-pxx
</span><span class='line'><span class="nv">$ </span>rbenv <span class="nb">local </span>1.9.3-pxx
</span><span class='line'><span class="nv">$ </span>rbenv rehash
</span><span class='line'><span class="nv">$ </span>ruby -v <span class="c"># =&gt; 1.9.3-pxx</span>
</span></code></pre></td></tr></table></div></figure>


<h1>configure octopress</h1>

<p>bundlerをインストールし、関連gemをインストールする。</p>

<ul>
<li><a href="http://octopress.org/docs/setup/">http://octopress.org/docs/setup/</a></li>
<li><a href="http://octopress.org/docs/configuring/">http://octopress.org/docs/configuring/</a></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>gem install bundler
</span><span class='line'><span class="nv">$ </span>bundle install --path vendor/bundle
</span></code></pre></td></tr></table></div></figure>


<p>_config.ymlを編集する。とりあえず以下のフィールドを自分に合わせて修正。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">url</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">http://momota.github.io</span>
</span><span class='line'><span class="l-Scalar-Plain">title</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">momota.txt</span>
</span><span class='line'><span class="l-Scalar-Plain">subtitle</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">momota memo</span>
</span><span class='line'><span class="l-Scalar-Plain">author</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">momota</span>
</span><span class='line'><span class="l-Scalar-Plain">date_format</span><span class="p-Indicator">:</span> <span class="s">&quot;%Y-%m-%d&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">email</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">makoto.momota@gmail.com</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">github_user</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">momota</span>
</span><span class='line'><span class="l-Scalar-Plain">twitter_user</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">momota</span>
</span><span class='line'><span class="l-Scalar-Plain">disqus_short_name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">momota</span>
</span><span class='line'><span class="l-Scalar-Plain">facebook_like</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span></code></pre></td></tr></table></div></figure>


<h2>install octopress theme</h2>

<p>install default theme</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake install
</span></code></pre></td></tr></table></div></figure>


<p>install 3rd party theme</p>

<p><a href="https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes">https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake install<span class="se">\[</span><span class="s1">&#39;theme you like&#39;</span><span class="se">\]</span>
</span></code></pre></td></tr></table></div></figure>


<h2>はてなブックマークボタンを設置する</h2>

<ul>
<li>source/_includes/post/sharing.html に以下を追加</li>
<li><code>\{\{ site.url \}\}\{\{ page.url \}\}</code>部分の<code>\{\}</code>はバックスラッシュなしでOK。ここでは本URLに変換されるためバックスラッシュでエスケープしている。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">style=</span><span class="s">&quot;float:left&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://b.hatena.ne.jp/entry/\{\{ site.url \}\}\{\{ page.url \}\}&quot;</span> <span class="na">class=</span><span class="s">&quot;hatena-bookmark-button&quot;</span> <span class="na">data-hatena-bookmark-layout=</span><span class="s">&quot;standard&quot;</span> <span class="na">title=</span><span class="s">&quot;このエントリーをはてなブックマークに追加&quot;</span><span class="nt">&gt;&lt;img</span> <span class="na">src=</span><span class="s">&quot;http://b.st-hatena.com/images/entry-button/button-only.gif&quot;</span> <span class="na">alt=</span><span class="s">&quot;このエントリーをはてなブックマークに追加&quot;</span> <span class="na">width=</span><span class="s">&quot;20&quot;</span> <span class="na">height=</span><span class="s">&quot;20&quot;</span> <span class="na">style=</span><span class="s">&quot;border: none;&quot;</span> <span class="nt">/&gt;&lt;/a&gt;</span>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;http://b.st-hatena.com/js/bookmark_button.js&quot;</span> <span class="na">charset=</span><span class="s">&quot;utf-8&quot;</span> <span class="na">async=</span><span class="s">&quot;async&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>コメント欄を設ける by disqus</h2>

<p>ブログパーツとしてコメント欄を提供する <a href="http://disqus.com/">disqus</a> のアカウントを作る。
<code>_config.yml</code> で設定する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="c1"># Disqus Comments</span>
</span><span class='line'><span class="l-Scalar-Plain">disqus_short_name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">xxxxxx</span>
</span><span class='line'><span class="l-Scalar-Plain">disqus_show_comment_count</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">false</span>
</span></code></pre></td></tr></table></div></figure>


<h1>post</h1>

<ul>
<li>以下コマンドで、記事ファイル<code>source/_posts/yyyy-MM-dd-post-title.markdown</code>を生成。</li>
<li>生成後は、vim/emacsなど自分の好きなエディタで編集する</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake new_post<span class="se">\[</span><span class="s1">&#39;post title&#39;</span><span class="se">\]</span>
</span></code></pre></td></tr></table></div></figure>


<h1>check your post</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># htmlなどの生成</span>
</span><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake generate
</span><span class='line'><span class="c"># プレビュー: http://localhost:4000/ へアクセスしてみる</span>
</span><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake preview
</span></code></pre></td></tr></table></div></figure>


<h1>deploy github pages</h1>

<ul>
<li><a href="http://octopress.org/docs/deploying/github/">http://octopress.org/docs/deploying/github/</a> を参考に。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake setup_github_pages
</span><span class='line'><span class="c"># Enter the read/write url for your repository:</span>
</span><span class='line'><span class="c"># --&gt; git@github.com:username/username.github.io.git</span>
</span><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake deploy
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>ソースもgit pushする</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git add .
</span><span class='line'><span class="nv">$ </span>git commit -m <span class="s1">&#39;commit comment&#39;</span>
</span><span class='line'><span class="nv">$ </span>git push origin <span class="nb">source</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
