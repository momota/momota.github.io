<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[momota.txt]]></title>
  <link href="http://momota.github.io/atom.xml" rel="self"/>
  <link href="http://momota.github.io/"/>
  <updated>2018-06-07T21:26:23+09:00</updated>
  <id>http://momota.github.io/</id>
  <author>
    <name><![CDATA[momota]]></name>
    <email><![CDATA[makoto.momota@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[docker で Elasticsearch]]></title>
    <link href="http://momota.github.io/blog/2018/06/07/elasticsearch/"/>
    <updated>2018-06-07T13:56:00+09:00</updated>
    <id>http://momota.github.io/blog/2018/06/07/elasticsearch</id>
    <content type="html"><![CDATA[<p>Docker for Windows で Windows10 上に Elasticsearch を動かしたときのメモ。</p>

<ul>
<li>Docker: 18.03.1-ce-win65 (17513)</li>
<li>Elasticsearch: 6.2.4</li>
</ul>


<!-- more -->


<p>日本語を扱いたいのでプラグイン <code>kuromoji</code> をインストールする Dockerfile を用意する。</p>

<p>Dockerfile の内容は以下。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>FROM docker.elastic.co/elasticsearch/elasticsearch:6.2.4
</span><span class='line'>
</span><span class='line'># Plugin x-pack already exists in this image
</span><span class='line'># RUN elasticsearch-plugin install --batch x-pack
</span><span class='line'>RUN elasticsearch-plugin install analysis-kuromoji</span></code></pre></td></tr></table></div></figure>


<p>この Dockerfile に基づいてイメージをビルドする。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; docker build -t es-kuromoji:1.0 ./
</span><span class='line'>&gt; docker images
</span><span class='line'>REPOSITORY                                               TAG                 IMAGE ID            CREATED              SIZE
</span><span class='line'>es-kuromoji                                              1.0                 dxxxxxxxxxxx        About a minute ago   519MB
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html#docker-cli-run">Install Elasticsearch with Docker | Elasticsearch Reference ［6.2］ | Elastic</a> に書いてあるとおりに起動する。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; docker run -p 9200:9200 -p 9300:9300 -e "discovery.type=single-node" es-kuromoji:1.0</span></code></pre></td></tr></table></div></figure>


<p>Elasticsearch の起動を REST APIから確認する。
<code>health</code> が <code>green</code> なので問題ない。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># In my environment, need `noproxy` option: curl http://localhost:9200/_cat/indices?v --noproxy localhost</span>
</span><span class='line'><span class="nv">$ </span>curl http://localhost:9200/_cat/indices?v
</span><span class='line'>health status index                       uuid                   pri rep docs.count docs.deleted store.size pri.store.size
</span><span class='line'>green  open   .monitoring-es-6-2018.06.07 xxxxxxxxxxxxxxxxxxxxxx   1   0       3094            2      1.1mb          1.1mb
</span></code></pre></td></tr></table></div></figure>


<p>Windows側で確認する場合は、<code>curl</code> の代わりに PowerShell <code>Invoke-WebRequest</code> コマンドで確認できる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># In windows, we can confirm Elasticsearch is running by using powershell</span>
</span><span class='line'>PS C:<span class="se">\&gt;</span> Invoke-WebRequest -Uri http://localhost:9200/_cat/indices?v
</span><span class='line'>
</span><span class='line'>StatusCode        : 200
</span><span class='line'>StatusDescription : OK
</span><span class='line'>Content           : health status index                       uuid                   pri rep docs.count docs.deleted store.size pri.store.size
</span><span class='line'>                    green  open   .monitoring-es-6-2018.06.07 xxxxxxxxxxxxxxxxxxxxxx   1   0     ...
</span><span class='line'>RawContent        : HTTP/1.1 200 OK
</span><span class='line'>                    Content-Length: 246
</span><span class='line'>                    Content-Type: text/plain; <span class="nv">charset</span><span class="o">=</span>UTF-8
</span><span class='line'>
</span><span class='line'>                    health status index                       uuid                   pri rep docs.count docs.deleted store.size pri.store.s...
</span><span class='line'>Forms             : <span class="o">{}</span>
</span><span class='line'>Headers           : <span class="o">{[</span>Content-Length, 246<span class="o">]</span>, <span class="o">[</span>Content-Type, text/plain; <span class="nv">charset</span><span class="o">=</span>UTF-8<span class="o">]}</span>
</span><span class='line'>Images            : <span class="o">{}</span>
</span><span class='line'>InputFields       : <span class="o">{}</span>
</span><span class='line'>Links             : <span class="o">{}</span>
</span><span class='line'>ParsedHtml        : mshtml.HTMLDocumentClass
</span><span class='line'>RawContentLength  : 246
</span></code></pre></td></tr></table></div></figure>


<p>index を作ってみる。
index は RDB のテーブルやビューにあたる。</p>

<p>PUT メソッドを使って <code>customer</code> という index を作る。
<code>pretty</code> は JSON を pretty-print (pretty-print) してくれる。 <code>jq</code> みたいに整形してくれる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl -X PUT http://localhost:9200/customer?pretty
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;acknowledged&quot;</span> : <span class="nb">true</span>,
</span><span class='line'>  <span class="s2">&quot;shards_acknowledged&quot;</span> : <span class="nb">true</span>,
</span><span class='line'>  <span class="s2">&quot;index&quot;</span> : <span class="s2">&quot;customer&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>index が増えていることが確認できる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl http://localhost:9200/_cat/indices?v
</span><span class='line'>health status index                       uuid                   pri rep docs.count docs.deleted store.size pri.store.size
</span><span class='line'>green  open   .monitoring-es-6-2018.06.07 xxxxxxxxxxxxxxxxxxxxxx   1   0       4775           44      1.9mb          1.9mb
</span><span class='line'>yellow open   customer                    xxxxxxxxxxxxxxxxxxxxxx   5   1          0            0      1.1kb          1.1kb
</span></code></pre></td></tr></table></div></figure>


<p>document を追加する。
RDB のレコードみたいなもの。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl -H <span class="s2">&quot;Content-Type: application/json&quot;</span> -X PUT http://localhost:9200/customer/_doc/1?pretty -d <span class="s1">&#39;</span>
</span><span class='line'><span class="s1">&gt; {</span>
</span><span class='line'><span class="s1">&gt;   &quot;name&quot;: &quot;John Doe&quot;</span>
</span><span class='line'><span class="s1">&gt; }</span>
</span><span class='line'><span class="s1">&gt; &#39;</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;_index&quot;</span> : <span class="s2">&quot;customer&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;_type&quot;</span> : <span class="s2">&quot;_doc&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;_id&quot;</span> : <span class="s2">&quot;1&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;_version&quot;</span> : 1,
</span><span class='line'>  <span class="s2">&quot;result&quot;</span> : <span class="s2">&quot;created&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;_shards&quot;</span> : <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;total&quot;</span> : 2,
</span><span class='line'>    <span class="s2">&quot;successful&quot;</span> : 1,
</span><span class='line'>    <span class="s2">&quot;failed&quot;</span> : 0
</span><span class='line'>  <span class="o">}</span>,
</span><span class='line'>  <span class="s2">&quot;_seq_no&quot;</span> : 0,
</span><span class='line'>  <span class="s2">&quot;_primary_term&quot;</span> : 1
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>PowerShell バージョンは以下。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$person</span> <span class="o">=</span> @<span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;John Doe&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="nv">$json</span> <span class="o">=</span> <span class="nv">$person</span> | ConvertTo-Json
</span><span class='line'><span class="nv">$response</span> <span class="o">=</span> Invoke-RestMethod <span class="s1">&#39;http://localhost:9200/customer/_doc/1&#39;</span> -Method Put -Body <span class="nv">$json</span> -ContentType <span class="s1">&#39;application/json&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>document の確認。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl -sS -w <span class="s1">&#39;\n&#39;</span> http://localhost:9200/customer/_doc/1?pretty
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;_index&quot;</span> : <span class="s2">&quot;customer&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;_type&quot;</span> : <span class="s2">&quot;_doc&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;_id&quot;</span> : <span class="s2">&quot;1&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;_version&quot;</span> : 1,
</span><span class='line'>  <span class="s2">&quot;found&quot;</span> : <span class="nb">true</span>,
</span><span class='line'>  <span class="s2">&quot;_source&quot;</span> : <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;John Doe&quot;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows ログイン時に、Cドライブ以外のBitLockerを解除する]]></title>
    <link href="http://momota.github.io/blog/2018/05/25/bitlocker/"/>
    <updated>2018-05-25T17:23:00+09:00</updated>
    <id>http://momota.github.io/blog/2018/05/25/bitlocker</id>
    <content type="html"><![CDATA[<p>BitLocker は Windows 10 Professional/Enterprise に標準搭載されているディスク暗号化機能。
最近、会社 PC を Windows 10 にアップデートしたので使うようになった。</p>

<p>BitLocker は OS ログイン前に C ドライブの暗号化を解除しろ、とパスワード入力を求めてくる。
ただし、その後、OS ログインしても、C ドライブ以外 (たとえば、D ドライブ) は暗号化されたままとなっており、いちいち当該ドライブへアクセスしてパスワード入力して暗号化を解除する必要があった。
また、暗号化解除前に D ドライブ上のファイルへアクセスするとエラーが起きてしまい、大変うざったい。</p>

<p>そこで、OS ログイン時に自動的に C ドライブ以外のディスク暗号化解除するために PowerShell とバッチを書いてスタートアッププログラムに登録した話を書く。</p>

<p>セキュリティクラスタには怒られるのかもしれないが、OS に管理者権限ユーザでログインできている時点でもういろいろ見れて当たり前やろ、という思想。</p>

<!-- more -->


<h2>1. BitLocker 解除用の PowerShell を書く</h2>

<p>ここでは D ドライブの BitLocker 解除するスクリプト <code>C:\PATH-YOU-WANT\unlock-bitLocker.ps1</code> を書く。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ps1'><span class='line'><span class="nv">$password</span> <span class="p">=</span> <span class="nb">ConvertTo-SecureString</span> <span class="s2">&quot;YOUR_PASSWORD&quot;</span> <span class="n">-AsPlainText</span> <span class="n">-Force</span>
</span><span class='line'><span class="nv">$d_drive</span> <span class="p">=</span> <span class="s2">&quot;D:&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">Unlock-BitLocker</span> <span class="n">-MountPoint</span> <span class="nv">$d_drive</span> <span class="n">-Password</span> <span class="nv">$password</span>
</span></code></pre></td></tr></table></div></figure>


<p>複数のドライブがある場合は以下。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ps1'><span class='line'><span class="nv">$password</span> <span class="p">=</span> <span class="nb">ConvertTo-SecureString</span> <span class="s2">&quot;YOUR_PASSWORD&quot;</span> <span class="n">-AsPlainText</span> <span class="n">-Force</span>
</span><span class='line'><span class="nv">$drives</span> <span class="p">=</span> <span class="err">@</span><span class="p">(</span><span class="s2">&quot;D:&quot;</span><span class="p">,</span> <span class="s2">&quot;E:&quot;</span><span class="p">,</span> <span class="s2">&quot;F:&quot;</span><span class="p">,</span> <span class="s2">&quot;G:&quot;</span><span class="p">,</span> <span class="s2">&quot;H:&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">Foreach</span><span class="p">(</span><span class="nv">$drive</span> <span class="k">in</span> <span class="nv">$drives</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">Unlock-BitLocker</span> <span class="n">-MountPoint</span> <span class="nv">$drive</span> <span class="n">-Password</span> <span class="nv">$password</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>2. バッチファイルを書く</h2>

<p>上述の PowerShell スクリプトを管理者権限で実行し、かつ、スタートアッププログラムに登録するために、上記の PowerShell を呼び出すバッチファイル <code>C:\PATH-YOU-WANT\unlock-bitLocker.cmd</code> を書いてあげる。
PowerShell を直接登録したかったのだが、調査力が足りず変な構成になった…</p>

<p>もしくは、これくらいなら PowerShell スクリプトはいらず、バッチスクリプトだけでもよかったかもしれない。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'><span class="p">@</span><span class="k">echo</span> <span class="k">off</span>
</span><span class='line'><span class="k">setlocal</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">set</span> <span class="nv">DDrive</span><span class="o">=</span>D:
</span><span class='line'><span class="k">set</span> <span class="n">/a</span> SleepInterval<span class="o">=</span><span class="m">5</span>
</span><span class='line'>
</span><span class='line'><span class="k">echo</span> Unlocking bitlocker <span class="k">on</span> <span class="nv">%DDrive%</span> drive...
</span><span class='line'><span class="p">@</span>powershell -Command <span class="s2">&quot;Start-Process powershell.exe -ArgumentList C:\PATH-YOU-WANT\unlock_bitlocker.ps1 -Verb runas&quot;</span>
</span><span class='line'>timeout <span class="nv">%SleepInterval%</span> <span class="n">/nobreak</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="k">ERRORLEVEL</span> <span class="m">0</span> (
</span><span class='line'>  dir <span class="nv">%DDrive%</span>
</span><span class='line'>  <span class="k">echo</span> Yey<span class="p">,</span> unlocked bitlocker <span class="k">on</span> <span class="nv">%DDrive%</span> drive !!
</span><span class='line'>) <span class="k">else</span> (
</span><span class='line'>  <span class="k">echo</span> Error occured: unloker script returned error code: <span class="nv">%ERRORLEVEL%</span>
</span><span class='line'>)
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">endlocal</span>
</span><span class='line'><span class="k">pause</span> <span class="p">&gt;</span> <span class="n">nul</span>
</span><span class='line'>exit
</span></code></pre></td></tr></table></div></figure>


<h2>3. バッチファイルをスタートアッププログラムに登録してあげる</h2>

<ol>
<li><code>Windows キー + r</code> : ファイル名を指定して実行を起動</li>
<li><code>shell:startup</code> を入力: スタートアップのフォルダが開く</li>
<li>作ったバッチファイル <code>unlock_bitlocker.cmd</code> のショートカットをスタートアップフォルダの中に作成</li>
</ol>


<p>以上で、OS ログイン後に D ドライブの BitLocker を解除できる。</p>

<p>正確に言うと、スクリプトの実行に管理者権限が必要なので、ログイン後に「このアプリがデバイスへ変更を加えることを許可しますか」と確認ダイアログが出る。「はい」とボタン押下し許可してあげればOK。</p>

<p>BitLocker を有効にしていると、初回起動時に NumLock が有効になっているのを無効化したいんだが、だれか方法を教えてほしい。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySQL パフォーマンスチューニング]]></title>
    <link href="http://momota.github.io/blog/2017/04/20/mysql/"/>
    <updated>2017-04-20T22:41:00+09:00</updated>
    <id>http://momota.github.io/blog/2017/04/20/mysql</id>
    <content type="html"><![CDATA[<p>MySQL 5.7 のパフォーマンスチューニングについて、調べてたのでまとめる。</p>

<p>// 結構な文量になってしまった…</p>

<p>大きく、2つのアプローチがある。</p>

<ol>
<li>DBチューニング

<ul>
<li>システム変数 (my.cnf) のチューニング</li>
<li>全体最適</li>
</ul>
</li>
<li>アプリ (SQL) チューニング

<ul>
<li>個別最適</li>
</ul>
</li>
</ol>


<p>まあ、地道に、計測→問題点の特定→修正→計測… のサイクルを回すしかない。</p>

<!-- more -->


<h1>1. DBチューニング</h1>

<h2>ディスク構成関連</h2>

<ul>
<li>ログファイルとデータファイル (たとえば、システム表領域データファイル) を別の物理ディスクに配置することでI/O性能が向上する</li>
<li>InnoDBデータファイルをRawデバイスに置くことで、I/O性能が向上する</li>
<li>OSマウントオプション noatime を無効化する

<ul>
<li>Linuxのファイルシステムには、ファイル読み込み時刻が「atime」として保存される。1ファイルアクセス当たりのオーバーヘッドはささやかだが、大量のファイルに対して頻繁にアクセスするシステムでは、atimeの更新にかかる時間も無視できなくなる。atimeが不要なシステムであれば、atimeの更新を無効化することでディスクのパフォーマンスが向上する可能性がある。</li>
</ul>
</li>
</ul>


<h2>ストレージエンジン関連</h2>

<ul>
<li><p>バッファプールサイズ <code>innodb_buffer_pool_size</code></p>

<ul>
<li>バッファプールサイズ <code>innodb_buffer_pool_size</code> は InnoDB のデータとインデックスをキャッシュするメモリ上の領域。可能な限り大きくすることが基本方針。</li>
<li>MySQL (InnoDB) のみを利用していれば、バッファプールサイズ <code>innodb_buffer_pool_size</code> はメインメモリの 70-80% 程度を割り当てる。データとインデックスの両方をキャッシュする。(デフォルトは128MB)</li>
<li>ログファイル全体をOSがキャッシュできる程度の余裕を持たせると更新系の性能に利点が大きい。</li>
</ul>
</li>
<li><p>バッファプールインスタンス <code>innodb_buffer_pool_instances</code></p>

<ul>
<li>バッファプールをいくつのインスタンスに分けるか指定する。デフォルト8</li>
<li>十分なメモリがある場合、複数のバッファプールインスタンスに分割することで、グローバル Mutex の衝突を減らすことができ同時並行性を改善可能。キャッシュされたページに対して、異なるスレッドがI/Oを行うときの競合が減るため並列性が増す。</li>
<li><code>innodb_buffer_pool_size</code> が大きく、mutex競合がオーバヘッドとなっている場合は、2以上に設定</li>
<li><code>innodb_buffer_pool_size</code> は <code>N * innodb_buffer_pool_chunk_size * innodb_buffer_pool_instances</code>に等しいサイズにする必要あり。</li>
<li>オンラインでもサイズ変更可能。</li>
<li><a href="https://dev.mysql.com/doc/refman/5.7/en/innodb-init-startup-configuration.html">MySQL :: MySQL 5.7 Reference Manual :: 15.6.1 InnoDB Startup Configuration</a>

<ul>
<li>mutex 競合確認方法の例は以下。</li>
</ul>
</li>
</ul>
</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mysql&gt; select event_name, count_star, sum_timer_wait/1000000000 sum_timer_wait_ms
</span><span class='line'>-&gt; from performance_schema.events_waits_summary_global_by_event_name
</span><span class='line'>-&gt; where event_name like '%buf_pool_mutex%';
</span><span class='line'>+----------------------------------------+------------+-------------------+
</span><span class='line'>| event_name                             | count_star | sum_timer_wait_ms |
</span><span class='line'>+----------------------------------------+------------+-------------------+
</span><span class='line'>| wait/synch/mutex/innodb/buf_pool_mutex | 0          | 0.0000            |
</span><span class='line'>+----------------------------------------+------------+-------------------+
</span><span class='line'>1 row in set (0.00 sec)</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p><code>innoDB_page_size</code></p>

<ul>
<li>デフォルト16k。16KBは、幅広いワークロードに適しているサイズ。特にテーブルスキャンを含むクエリだったり、バルクアップデートを含むDML操作など。</li>
<li>環境によって調整する。
<img src="http://momota.github.io/images/20170420_mysql/mysql_file.png" alt="innodb file structure" /></li>
</ul>
</li>
<li><p>データファイルアクセスに OSキャッシュを無駄に消費しないよう <code>innodb_flush_method</code> を <code>O_DIRECT</code> にする。</p>

<ul>
<li><code>O_DIRECT</code> にすると、OSのDirect I/O機能を利用し、OSのキャッシュをバイパスする。MySQL は自前のキャッシュ機構があるので、OSキャッシュは冗長なので、バイパスしたほうがよい。</li>
<li>Linuxでは、多くの場合 <code>O_DIRECT</code> にしたほうがオーバヘッドが下がる</li>
</ul>
</li>
<li><p><code>innodb_log_file_size</code></p>

<ul>
<li>ログファイル(WAL: Write Ahead Log)はトランザクション更新ログ。ログファイルがどの程度頻繁に切り替わっているかをチェックしておく。</li>
<li>大きくしすぎるとOSキャッシュに載らず、性能劣化する場合あり。また、クラッシュ後のリカバリ時間が長くなる。</li>
<li><code>innodb_buffer_pool_size</code> の25%～100%。デフォルト45MB。最大リカバリ時間に影響するので考慮しつつ大きく設定する。</li>
</ul>
</li>
<li><p><code>innodb_log_buffer_size</code></p>

<ul>
<li>InnoDB は、変更されたデータのレコードを、メモリ上のバッファに書き込み、トランザクションがコミットする前にログがディスクに書き込まれないようにすることで、大きなトランザクション
のI/Oを節約する。</li>
<li>大量・巨大な blob を書き込む必要がなければ、4MB-8MBが適切。</li>
</ul>
</li>
<li><p><code>innodb_flush_log_at_trx_commit</code></p>

<ul>
<li><code>innodb_flush_log_log_at_trx_commit</code> が 1 の時、ログバッファはトランザクションがコミットされるたびにディスク上のログファイルに書き出され、データの整合性を最大限保つ。しかし、これはパフォーマンスへの影響がある。この値を2にすると、ログバッファはトランザクションのコミットごとにOSのファイルキャッシュへ書き出される。これにより、ACIDを意識しないのであればパフ
ォーマンスを最適化・高速化できるが、OSのクラッシュ時には数秒分のトランザクションが消えてしまう可能</li>
</ul>
</li>
<li><p><code>innodb_file_per_table</code></p>

<ul>
<li>テーブル単位でOS上のデータファイルを分ける設定</li>
<li>ディスクI/O分散やibdata ファイルの肥大化を防ぐためONを推奨</li>
<li>pros / cons: <a href="https://dev.mysql.com/doc/refman/5.7/en/innodb-multiple-tablespaces.html">MySQL :: MySQL 5.7 Reference Manual :: 15.7.4 InnoDB File-Per-Table Tablespaces</a></li>
<li>ibdataファイル肥大化時の運用を検討する必要あり: <a href="http://nippondanji.blogspot.jp/2009/01/innodb_16.html">漢(オトコ)のコンピュータ道: InnoDBのファイルサイズ管理</a></li>
</ul>
</li>
<li><p>Double Write Buffer</p>

<ul>
<li>クラッシュ時のpartial write (書き込み途中状態での終了) によるデータページ破壊への対策機能で、InnoDBで使われているファイルFlush技術。

<ul>
<li>InnoDBデータファイルにページを書き出す前に、隣接領域 (これをdoublewrite bufferと呼ぶ)にまず書き出す。double write bufferへの書き込みおよびFlushが完了したら、InnoDBはデータをデータファイルの適切な位置に書き込む。これによりページファイルへの書き込み途中にクラッシュしても (OSやストレージサブシステム、mysqldプロセス)、doublewrite buffer からクラッシュリカバリできる。ただし、これはI/Oオーバヘッドが2倍以上かかるため、性能とのトレードオフ。</li>
</ul>
</li>
<li>障害復旧可能性を高めるため、<code>innodb_doublewrite = ON</code> (デフォルト設定) が推奨</li>
</ul>
</li>
<li><p><code>innodb_thread_concurrency</code> で同時実行スレッド数を調整する。</p>

<ul>
<li>処理を並列に行うとスループットの向上が期待出来るが、同時に実行中のスレッドがあまりに多すぎるとロックの競合が多発してしまって返って性能を落とす原因になってしまう。</li>
<li>5.5 以上であればリミットをかける必要はない。現代的なOSであれば、マルチコア・プロセッサのコンテキストスイッチを効果的に実施してくれる。0は上限なし。デフォルトでOK</li>
<li>並列度で問題が出た場合は、値を調整する。この場合の推奨値は、CPU 数の 2 倍にディスクの数を足したもの。動的変数なのでオンラインで変更可能。</li>
</ul>
</li>
<li><p>InnoDB compression (圧縮機能)</p>

<ul>
<li>以下のメリットがある

<ul>
<li>DBデータファイルサイズを縮小化</li>
<li>I/O削減</li>
<li>スループットの改善</li>
<li>データ量削減</li>
</ul>
</li>
<li>条件

<ul>
<li><code>innodb_file_per_table</code> を有効化すること</li>
<li><code>innodb_file_format</code> が Barracuda であること</li>
</ul>
</li>
<li><code>CREATE TABLE</code> もしくは <code>ALTER TABLE</code> で <code>ROW_FORMAT=COMPRESSED</code> か <code>KEY_BLOCK_SIZE</code> を指定する</li>
</ul>
</li>
<li><p><code>innodb_io_capacity</code></p>

<ul>
<li>InnoDB のバックグラウンドタスクに使用するI/Oキャパシティ(IOPS)の上限を設定する。デフォルト200。</li>
<li>高速なストレージを使用している場合は拡大する。</li>
<li>デフォルト値 (200) は、ストライプされた2本のディスクを目安にした値</li>
</ul>
</li>
<li><code>innodb_read_io_threads</code>, <code>innodb_write_io_threads</code>

<ul>
<li>高速なストレージを使用している場合は拡大する。</li>
<li>デフォルト値 (4) は、一般的には十分な値</li>
</ul>
</li>
</ul>


<h2>コネクションスレッドプール関連</h2>

<ul>
<li><code>max_connections</code>

<ul>
<li>サーバが許容可能なコネクション数。デフォルト151。</li>
<li>多すぎるとメモリを消費し切る可能性あり</li>
</ul>
</li>
<li><code>thread_cache_size</code>

<ul>
<li>スレッドをコネクションの切断後にもキャッシュしておく数。</li>
<li>一般的には <code>max_connections / 3</code></li>
<li>計算式 <code>8 + (max_connections / 100)</code> により自動計算。</li>
</ul>
</li>
<li><code>sort_buffer_size</code>

<ul>
<li>ソート用のメモリサイズ。このサイズを超えるとディスクを利用する。OLTPでは256KB〜1MBを割り当てる。</li>
</ul>
</li>
</ul>


<h2>クエリキャッシュ関連</h2>

<ul>
<li><code>query_cache_size</code>

<ul>
<li>クエリキャッシュに割り当てるメモリサイズ</li>
<li>一般的には32MでOK。デフォルト1MB。</li>
</ul>
</li>
<li><code>query_cache_type</code>

<ul>
<li>最悪のケースでは、パフォーマンスのオーバヘッドが約15%</li>
<li>select 比率が高いサーバで有効</li>
<li>DEMAND に設定すると、クエリ実行時にSQL_CACHE句をつけたクエリだけキャッシュ可能</li>
</ul>
</li>
</ul>


<h2>その他</h2>

<ul>
<li><p><code>autocommit</code> は高負荷なのでOFFが推奨。</p>

<ul>
<li><a href="https://dev.mysql.com/doc/refman/5.7/en/innodb-best-practices.html">MySQL :: MySQL 5.7 Reference Manual :: 15.1.2 Best Practices for InnoDB Tables</a></li>
<li>トランザクション文で明確にコミットすること</li>
</ul>
</li>
<li><p>Read-Ahead</p>

<ul>
<li>read-aheadリクエストは、バッファプールへ近い将来必要になりそうな複数のページを先読みするI/Oリクエスト。1エクステントの全ページに対してリクエストする。I/O性能の改善効果がある。Linear read-head(デフォルト)とRandom read-headの2つのアルゴリズムがある</li>
<li>この関連パラメータはチューニングする余地あり</li>
</ul>
</li>
<li><p>再起動時のウォームアップ運用</p>

<ul>
<li>バッファプールの中身を保存・リストアする機能がある。この機能を利用して、再起動後、データをキャッシュに載せ高速化する。</li>
<li><a href="https://dev.mysql.com/doc/refman/5.7/en/innodb-preload-buffer-pool.html">MySQL :: MySQL 5.7 Reference Manual :: 15.6.3.8 Saving and Restoring the Buffer Pool State</a></li>
</ul>
</li>
</ul>


<h1>2. アプリ (SQL) チューニング</h1>

<ul>
<li><p>適切なSQLを使う (クエリ最適化)</p>

<ul>
<li>まずはスロークエリの分析</li>
<li><code>SHOW FULL PROCESSLIST</code> で現在実行中の時間がかかっているクエリを特定する</li>
<li>EXPLAIN で実行計画の評価

<ul>
<li>たとえば、全件フェッチしてからアプリケーション側で行を絞り込むというようなロジックはNG</li>
</ul>
</li>
<li>フェッチする行数を減らすようなクエリを組み立てる。

<ul>
<li>サブクエリをJOINに書き換えたり、インデックスを適切に貼ったり。</li>
</ul>
</li>
</ul>
</li>
<li><p>テーブルの最適化</p>

<ul>
<li>適切なデータタイプを選択する

<ul>
<li>数値をVARCHAR(桁数)はNG。INT (もしくはBIGINT) にすることで高速かつデータサイズが小さい</li>
</ul>
</li>
<li>インデックスを適切に作成する

<ul>
<li>付けすぎると更新時のオーバヘッドが増える</li>
<li>無駄に付けない。たとえば、性別などの二値にインデックスを張っても意味がない。</li>
</ul>
</li>
<li>適切に正規化する

<ul>
<li>JOIN処理により性能が出ない場合は非正規化も検討する</li>
</ul>
</li>
</ul>
</li>
<li><p>適切な粒度でcommitする</p>

<ul>
<li>グループコミットの利用</li>
</ul>
</li>
<li><p>レプリケーションを利用した負荷分散</p>

<ul>
<li>参照処理はSlave側を向ける、など</li>
</ul>
</li>
<li><p>コネクションプーリングする</p></li>
<li><p>Innodb compression</p>

<ul>
<li>テーブル単位に圧縮オプションを選択可能</li>
<li>DML操作の実行時に compresson failure を引き起こす可能性あり。パラメータをチューニングする。</li>
<li>繰り返しの値や一般的に文字列 (CHAR, VARCHAR, TEXT or BLOB列) は圧縮効果が大きい</li>
<li>ほとんどバイナリデータ (integer or floating point number) や事前に圧縮されているデータ (たとえば JPEG た PNG) は圧縮効果が少ない

<ul>
<li><a href="https://dev.mysql.com/doc/refman/5.7/en/innodb-compression-tuning.html">MySQL :: MySQL 5.7 Reference Manual :: 15.9.1.3 Tuning Compression for InnoDB Tables</a></li>
</ul>
</li>
<li>画像データが入っていないテーブルに適用すると効果あり</li>
</ul>
</li>
</ul>


<h1>性能測定</h1>

<p>推測するな、計測せよ。</p>

<p>設定を変えたり、プログラムを変えたりしても、効果を測れないと意味がない。</p>

<h2>MySQL のステータス</h2>

<ul>
<li><a href="https://dev.mysql.com/doc/refman/5.7/en/innodb-buffer-pool-monitoring.html">MySQL :: MySQL 5.7 Reference Manual :: 15.6.3.9 Monitoring the Buffer Pool Using the InnoDB Standard Monitor</a></li>
<li><code>INFORMATION_SCHEMA</code>

<ul>
<li><code>INNODB_CMP*</code> : 圧縮の状況</li>
<li><code>INNODB_TRX</code>, <code>INNODB_LOCKS*</code> : ロック状況</li>
<li><code>INNODB_SYS_*</code> : システムテーブル (メタデータ)</li>
<li><code>INNODB_BUFFER_*</code> : バッファプール</li>
</ul>
</li>
<li>PERFORMANCE_SCHEMA, sys スキーマ</li>
<li>InnoDB 監視

<ul>
<li>Pending file IOリクエスト</li>
<li>バッファプール統計</li>
<li>ロック、mutex</li>
<li><code>SHOW ENGINE INNODB STATUS</code></li>
</ul>
</li>
</ul>


<h2>性能測定ツール</h2>

<ul>
<li>innotop

<ul>
<li><code>top</code> 風に MySQL のステータスを表示するツール</li>
<li><a href="https://github.com/innotop/innotop">innotop/innotop</a></li>
</ul>
</li>
<li>dstat, sar

<ul>
<li>OSレイヤの性能値を取得する</li>
</ul>
</li>
</ul>


<h2>ベンチマークツール</h2>

<ul>
<li>DBT2

<ul>
<li><a href="https://dev.mysql.com/downloads/benchmarks.html">MySQL :: MySQL Benchmark Tool</a></li>
</ul>
</li>
<li>SysBench

<ul>
<li><a href="https://dev.mysql.com/downloads/benchmarks.html">MySQL :: MySQL Benchmark Tool</a></li>
</ul>
</li>
<li>mysqlslap

<ul>
<li>標準の負荷エミュレーションクライアントプログラム</li>
<li><a href="https://dev.mysql.com/doc/refman/5.7/en/mysqlslap.html">MySQL :: MySQL 5.7 Reference Manual :: 5.5.9 mysqlslap — Load Emulation Client</a></li>
</ul>
</li>
<li>flexAsynch

<ul>
<li>MySQL Cluster用のテストツール</li>
</ul>
</li>
</ul>


<h1>参考資料</h1>

<ul>
<li><a href="https://dev.mysql.com/doc/refman/5.7/en/">MySQL :: MySQL 5.7 Reference Manual</a></li>
<li><a href="https://downloads.mysql.com/presentations/20151208_02_MySQL_Tuning_for_Beginners.pdf">20151208_02_MySQL_Tuning_for_Beginners.pdf</a></li>
<li><a href="http://nippondanji.blogspot.jp/2009/02/mysql10.html">漢(オトコ)のコンピュータ道: MySQLを高速化する10の方法</a></li>
<li><a href="https://yakst.com/ja/posts/65">(帰ってきた)InnoDBパフォーマンス最適化の基礎 | Yakst</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ansible ABC]]></title>
    <link href="http://momota.github.io/blog/2016/08/19/ansible-abc/"/>
    <updated>2016-08-19T08:22:00+09:00</updated>
    <id>http://momota.github.io/blog/2016/08/19/ansible-abc</id>
    <content type="html"><![CDATA[<p>チーム内での Ansible 勉強会の資料を公開。</p>

<p><img src="http://momota.github.io/images/20160818_ansible-logo.png" alt="ansible logo" /></p>

<p>公式サイトは以下。</p>

<ul>
<li><a href="http://www.ansible.com">http://www.ansible.com</a></li>
<li><a href="http://docs.ansible.com">http://docs.ansible.com</a></li>
</ul>


<p>前提知識としては、以下。知っていたほうが理解が早い。</p>

<ul>
<li>unix コマンド</li>
<li>YAML

<ul>
<li><a href="http://blog.n-z.jp/blog/2014-06-21-ansible-yaml.html">ansible使いのためのYAML入門 &ndash; @znz blog</a></li>
</ul>
</li>
</ul>


<p>公式から引用すると、Ansible は <strong>simple IT automation engine</strong>。</p>

<blockquote><p>Ansible is a radically <strong>simple IT automation engine</strong> that automates cloud provisioning, configuration management, application deployment, intra-service orchestration, and many other IT needs.</p>

<p>&mdash;&ndash;    <a href="https://www.ansible.com/how-ansible-works">How Ansible Works</a> より</p></blockquote>

<!-- more -->


<h2>Ansible の概要</h2>

<ul>
<li>Ansible は、サーバの構成管理ツールと言われている。

<ul>
<li>サーバ構成管理とは? Ansible が主に対象としているのは以下。

<ul>
<li>サーバのソフトウェアインストール/アップデート</li>
<li>設定ファイルの作成/修正/削除</li>
<li>サービス停止/起動</li>
<li>ファイル (アプリケーション) の配布</li>
</ul>
</li>
<li>類似ツールに、Chef や Puppet がある。</li>
<li>Infrastructure as Code の流れや世の中のクラウド化に伴い、評価されている</li>
<li>Infrastructure as Code: インフラの状態をコード化できる

<ul>
<li>ソフトウェア開発でのナレッジが活かせる

<ul>
<li>バージョン管理: git, subversion, &hellip;</li>
<li>コードレビュー: pull request, other tools, &hellip;</li>
<li>テスト: test framework like serverspec, infrataster, &hellip;</li>
<li>デプロイ、CI &hellip; : jenkins, &hellip;</li>
</ul>
</li>
<li>設計ドキュメントと実装との差分がある程度埋まる</li>
</ul>
</li>
</ul>
</li>
<li>もともとはAnsible, Inc により開発されていたが、2015年10月に Redhat により買収された</li>
</ul>


<p>以下は、Ansible の動作イメージ。(<a href="https://sysadmincasts.com/episodes/46-configuration-management-with-ansible-part-3-4">https://sysadmincasts.com/episodes/46-configuration-management-with-ansible-part-3-4</a> より引用)</p>

<p><img src="http://momota.github.io/images/20160818_ansible_overview.gif" alt="diagram" /></p>

<h1>Ansible の特徴・利点</h1>

<ul>
<li>冪等性

<ul>
<li>何回やっても同じ結果になること。

<ul>
<li>モジュール側でチェック処理などを吸収してくれる。</li>
<li>shell モジュールや rawモジュールなど、一部、冪等性が担保されないものもある。</li>
</ul>
</li>
<li>単純 re-run が可能。</li>
<li>Immutable Infrastructure との相性の良さ。</li>
</ul>
</li>
<li>Python の &ldquo;バッテリー同梱 (Battery Included)&rdquo; という考え方を引き継いでいる。

<ul>
<li>標準モジュール/機能の豊富さ。</li>
</ul>
</li>
<li>Push 型アーキテクチャ

<ul>
<li>管理対象ノード (Managed Node) に SSH さえできれば良い。</li>
<li>エージェントレス。</li>
<li>マルチプロセスで並列実行が可能。</li>
<li>Ansible 実行サーバを Control Machine, 管理対象ノードを Managed Nodeと呼ぶ。</li>
</ul>
</li>
<li>シンプル

<ul>
<li>独自 DSL ではなく、YAML。

<ul>
<li>データ志向の自動化言語である YAML</li>
<li>学習コストが低い。chef や puppet のように Ruby などの独自 DSL を覚える必要がない。</li>
</ul>
</li>
<li>ファイル・ディレクトリ構造の自由度の高さ。決まり事が少ない。</li>
<li>Ansible 自体は Python で書かれているが、プラグインなどの開発が不要であれば、Python を使う必要なし。</li>
</ul>
</li>
</ul>


<h1>Ansible の用途</h1>

<ul>
<li>複数サーバへの……

<ul>
<li>バッチ処理

<ul>
<li>システム全体の設定 (<code>/etc</code> 以下の設定)

<ul>
<li>hosts へのエントリ</li>
</ul>
</li>
<li>ネットワーク設定

<ul>
<li>ルーティングテーブルエントリの追加</li>
<li>SOCKS プロキシ</li>
<li>proxy.pac</li>
</ul>
</li>
<li>ファイル配布

<ul>
<li>SSHキーの配布</li>
</ul>
</li>
</ul>
</li>
<li>ミドルウェアのインストール/アップデート

<ul>
<li>yum</li>
<li>apt</li>
<li>homebrew</li>
<li>gem</li>
</ul>
</li>
<li>アプリケーションデプロイ</li>
</ul>
</li>
</ul>


<p>公式サイトの Use case を直訳すると、以下。</p>

<blockquote><ul>
<li>provisioning (Bootstrapping と呼ぶほうが正しいかも)

<ul>
<li>ベアメタルサーバやVMに対する、PXEブート (遠隔電源操作), キックスタート (linux の自動インストール)</li>
<li>VM (クラウドインスタンス) に対する、テンプレートからの作成</li>
</ul>
</li>
<li>configuration management

<ul>
<li>コンフィグファイルの中央管理</li>
</ul>
</li>
<li>application deployment

<ul>
<li>Ansible でアプリケーションを定義しデプロイすることで、開発環境から本番環境までのアプリケーション全体のライフサイクルを効果的に管理できる</li>
</ul>
</li>
<li>continuous delivery

<ul>
<li>CI/CD のパイプラインはたくさんのチームから依頼を引き受けることになる。だれもが使えるシンプルなAnsible を使うことで適切にアプリケーションのデプロイ管理ができる</li>
</ul>
</li>
<li>security &amp; compliance

<ul>
<li>Ansible でセキュリティポリシを定義することで、サイト全体のセキュリティポリシのスキャンと修復が可能になる。</li>
</ul>
</li>
<li>orchestration

<ul>
<li>管理対象のコンフィグは多種多様に存在し、かつ、それぞれが相互に作用している。Ansible は、この複雑で混沌とした中に秩序をもたらす。</li>
</ul>
</li>
</ul>
</blockquote>

<p>仕事ではあまり OS を扱うことは少なく、以下のようなレイヤの低いやつを raw モジュールを
駆使して構成変更したり情報取得したりしている。</p>

<ul>
<li>ESXi</li>
<li>iLO</li>
<li>BIOS</li>
<li>その他 SSH 可能なノード</li>
</ul>


<h1>Ansible を動かしてみよう</h1>

<h2>Ansible のインストール</h2>

<p><a href="http://docs.ansible.com/ansible/intro_installation.html#getting-ansible">Installation &ndash; Ansible Documentation</a> を参照</p>

<ol>
<li>Control Machine : Ansible 実行サーバ

<ul>
<li>Python 2.6 or 2.7 が必要</li>
<li>yum や rpm, apt などのパッケージ管理システムでインストール可能</li>
</ul>
</li>
<li>Managed Node : 管理対象ノード

<ul>
<li>Control Machine から SSH できればOK</li>
</ul>
</li>
</ol>


<h2>Ansible 実行してみる</h2>

<p>ansile を単体実行するコマンド書式は以下。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ansible &lt;host-pattern&gt; [-f forks] [-m module_name] [-a args]</span></code></pre></td></tr></table></div></figure>


<table>
<thead>
<tr>
<th>オプション </th>
<th> 意味</th>
</tr>
</thead>
<tbody>
<tr>
<td>-f         </td>
<td> 実行多重度。デフォルトは5 (ansible.cfg で規定)</td>
</tr>
<tr>
<td>-m         </td>
<td> モジュール名</td>
</tr>
<tr>
<td>-a         </td>
<td> モジュール引数</td>
</tr>
</tbody>
</table>


<p><a href="http://docs.ansible.com/ansible/modules_by_category.html">モジュールはこちらを参照。</a></p>

<p>以下はローカルで動くモジュールの一部を紹介。</p>

<table>
<thead>
<tr>
<th>モジュール </th>
<th> 機能</th>
</tr>
</thead>
<tbody>
<tr>
<td>ping       </td>
<td> その名の通り ping</td>
</tr>
<tr>
<td>shell      </td>
<td> コマンドを引数に渡して shell 実行可能</td>
</tr>
<tr>
<td>file       </td>
<td> ファイルのパーミション設定とか、ディレクトリ作成とか</td>
</tr>
<tr>
<td>template   </td>
<td> Control Machine のテンプレートファイル (テンプレートエンジンは jinja2 ) を Managed Node に配布</td>
</tr>
<tr>
<td>service    </td>
<td> init system のサービスを制御</td>
</tr>
<tr>
<td>sysctrl    </td>
<td> カーネルパラメータの操作</td>
</tr>
<tr>
<td>raw        </td>
<td> ssh でナマの文字列をそのまま流し込む</td>
</tr>
</tbody>
</table>


<p>インターネットに接続していれば、以下も有用。</p>

<table>
<thead>
<tr>
<th>モジュール </th>
<th> 機能</th>
</tr>
</thead>
<tbody>
<tr>
<td>yum        </td>
<td> yum によるソフトウェアパッケージ管理</td>
</tr>
<tr>
<td>get_url    </td>
<td> HTTP でのダウンロード (curl, wget 的な)</td>
</tr>
<tr>
<td>git        </td>
<td> git リポジトリからの clone</td>
</tr>
</tbody>
</table>


<p>バージョンが 2 系からJunos とか Cisco, ESXi 用のモジュールもある。</p>

<p><code>&lt;host-pattern&gt;</code> でホストを指定する。
all とすると、<code>/etc/ansible/hosts</code> で定義しているすべてのホストが対象となる。</p>

<p>以下は <code>ping</code> モジュールを利用したコマンド。
localhost に ping する ansible コマンド。
<code>-m</code> オプションのあとに <code>ping</code> モジュールを指定する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>ansible localhost -m ping
</span><span class='line'>localhost | success &gt;&gt; <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;changed&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>    <span class="s2">&quot;ping&quot;</span>: <span class="s2">&quot;pong&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>以下は、<code>shell</code> モジュールを利用したコマンド。
<code>-a</code> オプションのあとにモジュール引数を渡す。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>ansible localhost -m shell -a <span class="s2">&quot;uname -a; date; id; ifconfig&quot;</span>
</span><span class='line'>localhost | success | <span class="nv">rc</span><span class="o">=</span>0 &gt;&gt;
</span><span class='line'>Linux m 3.13.0-32-generic <span class="c">#57-Ubuntu SMP Tue Jul 15 03:51:12 UTC 2014 i686 i686 i686 GNU/Linux</span>
</span><span class='line'>Thu Aug  4 17:37:49 JST 2016
</span><span class='line'><span class="nv">uid</span><span class="o">=</span>1000<span class="o">(</span>momota<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1000<span class="o">(</span>momota<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1000<span class="o">(</span>momota<span class="o">)</span>,4<span class="o">(</span>adm<span class="o">)</span>,24<span class="o">(</span>cdrom<span class="o">)</span>,27<span class="o">(</span>sudo<span class="o">)</span>,30<span class="o">(</span>dip<span class="o">)</span>,33<span class="o">(</span>www-data<span class="o">)</span>,46<span class="o">(</span>plugdev<span class="o">)</span>,108<span class="o">(</span>lpadmin<span class="o">)</span>,124<span class="o">(</span>sambashare<span class="o">)</span>
</span><span class='line'>docker0   Link encap:Ethernet  HWaddr 56:84:7a:fe:97:99
</span><span class='line'>          inet addr:172.*.*.*  Bcast:0.0.0.0  Mask:255.255.0.0
</span><span class='line'>          UP BROADCAST MULTICAST  MTU:1500  Metric:1
</span><span class='line'>          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
</span><span class='line'>          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
</span><span class='line'>          collisions:0 txqueuelen:0
</span><span class='line'>          RX bytes:0 <span class="o">(</span>0.0 B<span class="o">)</span>  TX bytes:0 <span class="o">(</span>0.0 B<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>eth0      Link encap:Ethernet  HWaddr 00:1e:c9:80:66:c6
</span><span class='line'>          inet addr:172.*.*.*  Bcast:172.104.43.255  Mask:255.255.254.0
</span><span class='line'>          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
</span><span class='line'>          RX packets:40670341 errors:0 dropped:0 overruns:0 frame:0
</span><span class='line'>          TX packets:1099217 errors:0 dropped:0 overruns:0 carrier:0
</span><span class='line'>          collisions:0 txqueuelen:1000
</span><span class='line'>          RX bytes:4490922632 <span class="o">(</span>4.4 GB<span class="o">)</span>  TX bytes:329019625 <span class="o">(</span>329.0 MB<span class="o">)</span>
</span><span class='line'>          Interrupt:21 Memory:febe0000-fec00000
</span><span class='line'>
</span><span class='line'>lo        Link encap:Local Loopback
</span><span class='line'>          inet addr:127.0.0.1  Mask:255.0.0.0
</span><span class='line'>          UP LOOPBACK RUNNING  MTU:65536  Metric:1
</span><span class='line'>          RX packets:47797 errors:0 dropped:0 overruns:0 frame:0
</span><span class='line'>          TX packets:47797 errors:0 dropped:0 overruns:0 carrier:0
</span><span class='line'>          collisions:0 txqueuelen:0
</span><span class='line'>          RX bytes:5233688 <span class="o">(</span>5.2 MB<span class="o">)</span>  TX bytes:5233688 <span class="o">(</span>5.2 MB<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>ただし、実際には <code>ansible</code> コマンドを使うことはめったにない。</p>

<p>複数のノードに対してタスクを実行したり、複雑なタスクを実行する場合は、
Inventory ファイルや Playbook ファイルを利用する。</p>

<p>Ansible の主なファイルは以下。</p>

<ul>
<li>ansible.cfg

<ul>
<li>ansible に関するデフォルト設定ファイル。<code>/etc/ansible/ansible.cfg</code></li>
</ul>
</li>
<li>Inventory

<ul>
<li>ansible で管理対象ノードを定義するファイル</li>
</ul>
</li>
<li>Playbook

<ul>
<li>タスク (実行手順) を定義するファイル</li>
</ul>
</li>
</ul>


<h1>Inventory</h1>

<p>Inventory ファイルは、ansible 用の hosts ファイル。
ホストやグルーピングの設定、変数などの定義が可能。
ホストや IP アドレスはレンジでの指定も可能。</p>

<ul>
<li>ホストとグループの定義</li>
<li>ホスト変数とグループ変数</li>
<li>グループのグループ</li>
</ul>


<p>以下は、デフォルト設定 <code>/etc/ansible/hosts</code>。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'><span class="c1">#   - Comments begin with the &#39;#&#39; character</span>
</span><span class='line'><span class="c1">#   - Blank lines are ignored</span>
</span><span class='line'><span class="c1">#   - Groups of hosts are delimited by [header] elements</span>
</span><span class='line'><span class="c1">#   - You can enter hostnames or ip addresses</span>
</span><span class='line'><span class="c1">#   - A hostname/ip can be a member of multiple groups</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Ex 1: Ungrouped hosts, specify before any group headers.</span>
</span><span class='line'>
</span><span class='line'><span class="err">green.example.com</span>
</span><span class='line'><span class="err">blue.example.com</span>
</span><span class='line'><span class="err">192.168.100.1</span>
</span><span class='line'><span class="err">192.168.100.10</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Ex 2: A collection of hosts belonging to the &#39;webservers&#39; group</span>
</span><span class='line'>
</span><span class='line'><span class="k">[webservers]</span>
</span><span class='line'><span class="err">alpha.example.org</span>
</span><span class='line'><span class="err">beta.example.org</span>
</span><span class='line'><span class="err">192.168.1.100</span>
</span><span class='line'><span class="err">192.168.1.110</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># If you have multiple hosts following a pattern you can specify</span>
</span><span class='line'><span class="c1"># them like this:</span>
</span><span class='line'>
</span><span class='line'><span class="err">www[001:006].example.com</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Ex 3: A collection of database servers in the &#39;dbservers&#39; group</span>
</span><span class='line'>
</span><span class='line'><span class="k">[dbservers]</span>
</span><span class='line'>
</span><span class='line'><span class="err">db01.intranet.mydomain.net</span>
</span><span class='line'><span class="err">db02.intranet.mydomain.net</span>
</span><span class='line'><span class="err">10.25.1.56</span>
</span><span class='line'><span class="err">10.25.1.57</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Here&#39;s another example of host ranges, this time there are no</span>
</span><span class='line'><span class="c1"># leading 0s:</span>
</span><span class='line'>
</span><span class='line'><span class="err">db-[99:101]-node.example.com</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Playbook</h1>

<p>Playbook はタスクをまとめて、1つのファイルに記述したもの。
実行順序や依存関係、変数を利用した処理、ループ処理などが表現できる。</p>

<p>Playbookの基本的なフォーマットは以下。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">hosts</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">&lt;対象とするホスト/グループ&gt;</span>
</span><span class='line'>  <span class="l-Scalar-Plain">var</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">&lt;変数名1&gt;</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">&lt;値&gt;</span>
</span><span class='line'>    <span class="l-Scalar-Plain">&lt;変数名2&gt;</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">&lt;値&gt;</span>
</span><span class='line'>      <span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">remote_user</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">&lt;処理を実行するユーザー名&gt;</span>
</span><span class='line'>  <span class="l-Scalar-Plain">become</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">yes</span>   <span class="c1"># sudo するか</span>
</span><span class='line'>  <span class="l-Scalar-Plain">tasks</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">&lt;タスク1&gt;</span>
</span><span class='line'>    <span class="l-Scalar-Plain">&lt;タスク2&gt;</span>
</span><span class='line'>      <span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">handlers</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">&lt;ハンドラ1&gt;</span>
</span><span class='line'>    <span class="l-Scalar-Plain">&lt;ハンドラ2&gt;</span>
</span><span class='line'>      <span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">:</span>
</span></code></pre></td></tr></table></div></figure>


<h2>タスク</h2>

<p>ansible ではホストに対する処理をタスクという単位で管理する。
通常、1つのタスクには1つのモジュールを指定する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">&lt;タスクの説明&gt;</span>
</span><span class='line'>    <span class="l-Scalar-Plain">&lt;モジュール名&gt;</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">&lt;実行時に与えるパラメータ&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>name は description なので省略可能だが、メンテナンス性や playbook 実行時にわかりやすいので絶対書いたほうが良い。</p>

<p>name は日本語でも記載可能。 (文字コードは注意)</p>

<h2>ハンドラ</h2>

<p>ハンドラは、特定のタスクの実行後に、予め指定した処理を実行するための仕組み。
以下のように記述する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">tasks</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">be sure httpd is installed</span>
</span><span class='line'>    <span class="l-Scalar-Plain">yum</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">name=httpd state=installed</span>
</span><span class='line'>    <span class="l-Scalar-Plain">notify</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">restart httpd</span>
</span><span class='line'><span class="l-Scalar-Plain">handlers</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">restart httpd</span>
</span><span class='line'>    <span class="l-Scalar-Plain">service</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">name=httpd state=restarted</span>
</span></code></pre></td></tr></table></div></figure>


<p>この場合、「be sure httpd is installed」というタスクが実行されると、続いて「notify」で指定された「restart httpd」というハンドラが実行される。</p>

<h2>ループ</h2>

<p><code>with_items</code> で列挙した項目に対してループ処理が可能。</p>

<p><a href="http://docs.ansible.com/ansible/playbooks_loops.html">Loops &ndash; Ansible Documentation</a></p>

<p>リモートのコマンド結果 (標準出力)に対して、一行ずつ処理するタスクが以下。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="s">&quot;リモートのコマンド結果を使ったループの例&quot;</span>
</span><span class='line'>  <span class="l-Scalar-Plain">shell</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/usr/bin/something</span>
</span><span class='line'>  <span class="l-Scalar-Plain">register</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">command_result</span>
</span><span class='line'>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="s">&quot;結果を受け取って何かするタスク&quot;</span>
</span><span class='line'>  <span class="l-Scalar-Plain">shell</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/usr/bin/something_else --param {{ item }}</span>
</span><span class='line'>  <span class="l-Scalar-Plain">with_items</span><span class="p-Indicator">:</span> <span class="s">&quot;{{</span><span class="nv"> </span><span class="s">command_result.stdout_lines</span><span class="nv"> </span><span class="s">}}&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>こんな感じで直接リストを書いてもOK。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="s">&quot;リストからパッケージをインストールしていく&quot;</span>
</span><span class='line'>  <span class="l-Scalar-Plain">yum</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">name={{ item }} state=latest</span>
</span><span class='line'>  <span class="l-Scalar-Plain">with_items</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">httpd</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">zsh</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">tmux</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">vim</span>
</span></code></pre></td></tr></table></div></figure>


<h1>playbook のサンプル</h1>

<p>まずはインベントリファイル <code>sample_hosts</code> を作成する</p>

<p>&ldquo;fujiko&rdquo; グループに所属しているホストのリスト (計3台分) を記述している。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'><span class="k">[fujiko]</span>
</span><span class='line'><span class="err">doraemon</span>
</span><span class='line'><span class="err">nobita</span>
</span><span class='line'><span class="err">shizuka</span>
</span></code></pre></td></tr></table></div></figure>


<p>次にplaybook ファイル <code>sample_playbook.yml</code> を作成する。</p>

<p>計 3 つのタスクを記述している。</p>

<p><code>register: &lt;変数名1&gt;</code> という書式でタスク実行結果を変数に保存する。 この変数を Registered Variable と呼ぶ。</p>

<p><code>debug: var=&lt;変数名1&gt;/stdout_lines</code> により、変数に保存したタスク実行結果 (の標準出力) を表示している。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="nn">---</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">hosts</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">fujiko</span>
</span><span class='line'>  <span class="l-Scalar-Plain">tasks</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="s">&quot;死活&quot;</span>
</span><span class='line'>      <span class="l-Scalar-Plain">ping</span><span class="p-Indicator">:</span>
</span><span class='line'>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="s">&quot;ホスト名&quot;</span>
</span><span class='line'>      <span class="l-Scalar-Plain">shell</span><span class="p-Indicator">:</span>    <span class="l-Scalar-Plain">hostname</span>
</span><span class='line'>      <span class="l-Scalar-Plain">register</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">host</span>
</span><span class='line'>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">debug</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">var=host.stdout_lines</span>
</span><span class='line'>      <span class="l-Scalar-Plain">when</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">host | success</span>
</span><span class='line'>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="s">&quot;ユーザ名&quot;</span>
</span><span class='line'>      <span class="l-Scalar-Plain">shell</span><span class="p-Indicator">:</span>    <span class="l-Scalar-Plain">whoami</span>
</span><span class='line'>      <span class="l-Scalar-Plain">register</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">user</span>
</span><span class='line'>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">debug</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">var=user.stdout_lines</span>
</span><span class='line'>      <span class="l-Scalar-Plain">when</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">user | success</span>
</span></code></pre></td></tr></table></div></figure>


<p>playbook の実行前に syntax check (構文の確認)をする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>ansible-playbook -i sample_hosts sample_playbook.yml --syntax-check
</span><span class='line'>
</span><span class='line'>playbook: sample-playbook.yml
</span></code></pre></td></tr></table></div></figure>


<p>次に playbook を dry-run。
実行する前に何が変更されるか、特に、実行時に消えてしまうリソースや入れ替わるリソースを知りたい場合に有効。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>ansible-playbook -i sample_hosts sample_playbook.yml --check
</span><span class='line'>--- snip ---
</span></code></pre></td></tr></table></div></figure>


<p>Playbook を実行する。<code>--step</code> オプションを付けると、タスク単位にステップ実行もできる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>ansible-playbook -i sample_hosts sample_playbook.yml
</span><span class='line'>
</span><span class='line'>PLAY <span class="o">[</span>fujiko<span class="o">]</span> ********************************************************************
</span><span class='line'>
</span><span class='line'>GATHERING FACTS ***************************************************************
</span><span class='line'>ok: <span class="o">[</span>doraemon<span class="o">]</span>
</span><span class='line'>ok: <span class="o">[</span>nobita<span class="o">]</span>
</span><span class='line'>ok: <span class="o">[</span>shizuka<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>TASK: <span class="o">[</span>死活確認<span class="o">]</span> **********************************************************
</span><span class='line'>ok: <span class="o">[</span>nobita<span class="o">]</span>
</span><span class='line'>ok: <span class="o">[</span>doraemon<span class="o">]</span>
</span><span class='line'>ok: <span class="o">[</span>shizuka<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>TASK: <span class="o">[</span>ホスト名<span class="o">]</span> **********************************************************
</span><span class='line'>changed: <span class="o">[</span>nobita<span class="o">]</span>
</span><span class='line'>changed: <span class="o">[</span>doraemon<span class="o">]</span>
</span><span class='line'>changed: <span class="o">[</span>shizuka<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>TASK: <span class="o">[</span>debug <span class="nv">var</span><span class="o">=</span>host.stdout_lines<span class="o">]</span> *******************************************
</span><span class='line'>ok: <span class="o">[</span>nobita<span class="o">]</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;var&quot;</span>: <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;host.stdout_lines&quot;</span>: <span class="o">[</span>
</span><span class='line'>            <span class="s2">&quot;nobita&quot;</span>
</span><span class='line'>        <span class="o">]</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>ok: <span class="o">[</span>doraemon<span class="o">]</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;var&quot;</span>: <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;host.stdout_lines&quot;</span>: <span class="o">[</span>
</span><span class='line'>            <span class="s2">&quot;doraemon&quot;</span>
</span><span class='line'>        <span class="o">]</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>ok: <span class="o">[</span>shizuka<span class="o">]</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;var&quot;</span>: <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;host.stdout_lines&quot;</span>: <span class="o">[</span>
</span><span class='line'>            <span class="s2">&quot;shizuka&quot;</span>
</span><span class='line'>        <span class="o">]</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>TASK: <span class="o">[</span>ユーザ名<span class="o">]</span> **********************************************************
</span><span class='line'>changed: <span class="o">[</span>nobita<span class="o">]</span>
</span><span class='line'>changed: <span class="o">[</span>doraemon<span class="o">]</span>
</span><span class='line'>changed: <span class="o">[</span>shizuka<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>TASK: <span class="o">[</span>debug <span class="nv">var</span><span class="o">=</span>user.stdout_lines<span class="o">]</span> *******************************************
</span><span class='line'>ok: <span class="o">[</span>nobita<span class="o">]</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;var&quot;</span>: <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;user.stdout_lines&quot;</span>: <span class="o">[</span>
</span><span class='line'>            <span class="s2">&quot;momota&quot;</span>
</span><span class='line'>        <span class="o">]</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>ok: <span class="o">[</span>doraemon<span class="o">]</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;var&quot;</span>: <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;user.stdout_lines&quot;</span>: <span class="o">[</span>
</span><span class='line'>            <span class="s2">&quot;momota&quot;</span>
</span><span class='line'>        <span class="o">]</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>ok: <span class="o">[</span>shizuka<span class="o">]</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;var&quot;</span>: <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;user.stdout_lines&quot;</span>: <span class="o">[</span>
</span><span class='line'>            <span class="s2">&quot;momota&quot;</span>
</span><span class='line'>        <span class="o">]</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>PLAY RECAP ********************************************************************
</span><span class='line'>doraemon                   : <span class="nv">ok</span><span class="o">=</span>6    <span class="nv">changed</span><span class="o">=</span>2    <span class="nv">unreachable</span><span class="o">=</span>0    <span class="nv">failed</span><span class="o">=</span>0
</span><span class='line'>nobita                     : <span class="nv">ok</span><span class="o">=</span>6    <span class="nv">changed</span><span class="o">=</span>2    <span class="nv">unreachable</span><span class="o">=</span>0    <span class="nv">failed</span><span class="o">=</span>0
</span><span class='line'>shizuka                    : <span class="nv">ok</span><span class="o">=</span>6    <span class="nv">changed</span><span class="o">=</span>2    <span class="nv">unreachable</span><span class="o">=</span>0    <span class="nv">failed</span><span class="o">=</span>0
</span></code></pre></td></tr></table></div></figure>


<p>playbook は role という単位で分割可能。再利用性が高くなり、1 つ 1 つの playbook の
見通しも良くなるなるので、相互に関係のないタスクは分離していくほうが望ましい。</p>

<p>大規模な環境用に、<a href="http://docs.ansible.com/ansible/playbooks_best_practices.html">Best practices</a> が示されているので、ご参考に。</p>

<h1>システム情報を利用する: Facts</h1>

<p>Playbook 実行結果に「GATHERING FACTS」と出力されている。
これは対象サーバから情報を収集する処理。たとえば、リモートサーバのIPアドレスや
OS名などのシステム情報を、Playbook 中で変数として扱うことができる。</p>

<p>次のように <code>setup</code> モジュールにより、どんな変数が利用可能かを確認することができる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="err">$</span> <span class="err">ansible</span> <span class="err">some-host</span> <span class="err">-m</span> <span class="err">setup</span>
</span><span class='line'><span class="s2">&quot;ansible_all_ipv4_addresses&quot;</span><span class="err">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="s2">&quot;REDACTED IP ADDRESS&quot;</span>
</span><span class='line'><span class="p">]</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_all_ipv6_addresses&quot;</span><span class="err">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="s2">&quot;REDACTED IPV6 ADDRESS&quot;</span>
</span><span class='line'><span class="p">]</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_architecture&quot;</span><span class="err">:</span> <span class="s2">&quot;x86_64&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_bios_date&quot;</span><span class="err">:</span> <span class="s2">&quot;09/20/2012&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_bios_version&quot;</span><span class="err">:</span> <span class="s2">&quot;6.00&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_cmdline&quot;</span><span class="err">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;BOOT_IMAGE&quot;</span><span class="p">:</span> <span class="s2">&quot;/boot/vmlinuz-3.5.0-23-generic&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;quiet&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;ro&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;root&quot;</span><span class="p">:</span> <span class="s2">&quot;UUID=4195bff4-e157-4e41-8701-e93f0aec9e22&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;splash&quot;</span><span class="p">:</span> <span class="kc">true</span>
</span><span class='line'><span class="p">}</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_date_time&quot;</span><span class="err">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;date&quot;</span><span class="p">:</span> <span class="s2">&quot;2013-10-02&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;day&quot;</span><span class="p">:</span> <span class="s2">&quot;02&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;epoch&quot;</span><span class="p">:</span> <span class="s2">&quot;1380756810&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;hour&quot;</span><span class="p">:</span> <span class="s2">&quot;19&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;iso8601&quot;</span><span class="p">:</span> <span class="s2">&quot;2013-10-02T23:33:30Z&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;iso8601_micro&quot;</span><span class="p">:</span> <span class="s2">&quot;2013-10-02T23:33:30.036070Z&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;minute&quot;</span><span class="p">:</span> <span class="s2">&quot;33&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;month&quot;</span><span class="p">:</span> <span class="s2">&quot;10&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;second&quot;</span><span class="p">:</span> <span class="s2">&quot;30&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;time&quot;</span><span class="p">:</span> <span class="s2">&quot;19:33:30&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;tz&quot;</span><span class="p">:</span> <span class="s2">&quot;EDT&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;year&quot;</span><span class="p">:</span> <span class="s2">&quot;2013&quot;</span>
</span><span class='line'><span class="p">}</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_default_ipv4&quot;</span><span class="err">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;address&quot;</span><span class="p">:</span> <span class="s2">&quot;REDACTED&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;alias&quot;</span><span class="p">:</span> <span class="s2">&quot;eth0&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;gateway&quot;</span><span class="p">:</span> <span class="s2">&quot;REDACTED&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;interface&quot;</span><span class="p">:</span> <span class="s2">&quot;eth0&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;macaddress&quot;</span><span class="p">:</span> <span class="s2">&quot;REDACTED&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;mtu&quot;</span><span class="p">:</span> <span class="mi">1500</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;netmask&quot;</span><span class="p">:</span> <span class="s2">&quot;255.255.255.0&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;network&quot;</span><span class="p">:</span> <span class="s2">&quot;REDACTED&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;ether&quot;</span>
</span><span class='line'><span class="p">}</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_default_ipv6&quot;</span><span class="err">:</span> <span class="p">{}</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_devices&quot;</span><span class="err">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;fd0&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;holders&quot;</span><span class="p">:</span> <span class="p">[],</span>
</span><span class='line'>        <span class="nt">&quot;host&quot;</span><span class="p">:</span> <span class="s2">&quot;&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;model&quot;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;partitions&quot;</span><span class="p">:</span> <span class="p">{},</span>
</span><span class='line'>        <span class="nt">&quot;removable&quot;</span><span class="p">:</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;rotational&quot;</span><span class="p">:</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;scheduler_mode&quot;</span><span class="p">:</span> <span class="s2">&quot;deadline&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;sectors&quot;</span><span class="p">:</span> <span class="s2">&quot;0&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;sectorsize&quot;</span><span class="p">:</span> <span class="s2">&quot;512&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;size&quot;</span><span class="p">:</span> <span class="s2">&quot;0.00 Bytes&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;support_discard&quot;</span><span class="p">:</span> <span class="s2">&quot;0&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;vendor&quot;</span><span class="p">:</span> <span class="kc">null</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;sda&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;holders&quot;</span><span class="p">:</span> <span class="p">[],</span>
</span><span class='line'>        <span class="nt">&quot;host&quot;</span><span class="p">:</span> <span class="s2">&quot;SCSI storage controller: LSI Logic / Symbios Logic 53c1030 PCI-X Fusion-MPT Dual Ultra320 SCSI (rev 01)&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;model&quot;</span><span class="p">:</span> <span class="s2">&quot;VMware Virtual S&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;partitions&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;sda1&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="nt">&quot;sectors&quot;</span><span class="p">:</span> <span class="s2">&quot;39843840&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="nt">&quot;sectorsize&quot;</span><span class="p">:</span> <span class="mi">512</span><span class="p">,</span>
</span><span class='line'>                <span class="nt">&quot;size&quot;</span><span class="p">:</span> <span class="s2">&quot;19.00 GB&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="nt">&quot;start&quot;</span><span class="p">:</span> <span class="s2">&quot;2048&quot;</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>            <span class="nt">&quot;sda2&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="nt">&quot;sectors&quot;</span><span class="p">:</span> <span class="s2">&quot;2&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="nt">&quot;sectorsize&quot;</span><span class="p">:</span> <span class="mi">512</span><span class="p">,</span>
</span><span class='line'>                <span class="nt">&quot;size&quot;</span><span class="p">:</span> <span class="s2">&quot;1.00 KB&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="nt">&quot;start&quot;</span><span class="p">:</span> <span class="s2">&quot;39847934&quot;</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>            <span class="nt">&quot;sda5&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="nt">&quot;sectors&quot;</span><span class="p">:</span> <span class="s2">&quot;2093056&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="nt">&quot;sectorsize&quot;</span><span class="p">:</span> <span class="mi">512</span><span class="p">,</span>
</span><span class='line'>                <span class="nt">&quot;size&quot;</span><span class="p">:</span> <span class="s2">&quot;1022.00 MB&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="nt">&quot;start&quot;</span><span class="p">:</span> <span class="s2">&quot;39847936&quot;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;removable&quot;</span><span class="p">:</span> <span class="s2">&quot;0&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;rotational&quot;</span><span class="p">:</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;scheduler_mode&quot;</span><span class="p">:</span> <span class="s2">&quot;deadline&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;sectors&quot;</span><span class="p">:</span> <span class="s2">&quot;41943040&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;sectorsize&quot;</span><span class="p">:</span> <span class="s2">&quot;512&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;size&quot;</span><span class="p">:</span> <span class="s2">&quot;20.00 GB&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;support_discard&quot;</span><span class="p">:</span> <span class="s2">&quot;0&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;vendor&quot;</span><span class="p">:</span> <span class="s2">&quot;VMware,&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;sr0&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;holders&quot;</span><span class="p">:</span> <span class="p">[],</span>
</span><span class='line'>        <span class="nt">&quot;host&quot;</span><span class="p">:</span> <span class="s2">&quot;IDE interface: Intel Corporation 82371AB/EB/MB PIIX4 IDE (rev 01)&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;model&quot;</span><span class="p">:</span> <span class="s2">&quot;VMware IDE CDR10&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;partitions&quot;</span><span class="p">:</span> <span class="p">{},</span>
</span><span class='line'>        <span class="nt">&quot;removable&quot;</span><span class="p">:</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;rotational&quot;</span><span class="p">:</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;scheduler_mode&quot;</span><span class="p">:</span> <span class="s2">&quot;deadline&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;sectors&quot;</span><span class="p">:</span> <span class="s2">&quot;2097151&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;sectorsize&quot;</span><span class="p">:</span> <span class="s2">&quot;512&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;size&quot;</span><span class="p">:</span> <span class="s2">&quot;1024.00 MB&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;support_discard&quot;</span><span class="p">:</span> <span class="s2">&quot;0&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;vendor&quot;</span><span class="p">:</span> <span class="s2">&quot;NECVMWar&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_distribution&quot;</span><span class="err">:</span> <span class="s2">&quot;Ubuntu&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_distribution_release&quot;</span><span class="err">:</span> <span class="s2">&quot;precise&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_distribution_version&quot;</span><span class="err">:</span> <span class="s2">&quot;12.04&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_domain&quot;</span><span class="err">:</span> <span class="s2">&quot;&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_env&quot;</span><span class="err">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;COLORTERM&quot;</span><span class="p">:</span> <span class="s2">&quot;gnome-terminal&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;DISPLAY&quot;</span><span class="p">:</span> <span class="s2">&quot;:0&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;HOME&quot;</span><span class="p">:</span> <span class="s2">&quot;/home/mdehaan&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;LANG&quot;</span><span class="p">:</span> <span class="s2">&quot;C&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;LESSCLOSE&quot;</span><span class="p">:</span> <span class="s2">&quot;/usr/bin/lesspipe %s %s&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;LESSOPEN&quot;</span><span class="p">:</span> <span class="s2">&quot;| /usr/bin/lesspipe %s&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;LOGNAME&quot;</span><span class="p">:</span> <span class="s2">&quot;root&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;LS_COLORS&quot;</span><span class="p">:</span> <span class="s2">&quot;rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lz=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;MAIL&quot;</span><span class="p">:</span> <span class="s2">&quot;/var/mail/root&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;OLDPWD&quot;</span><span class="p">:</span> <span class="s2">&quot;/root/ansible/docsite&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;PATH&quot;</span><span class="p">:</span> <span class="s2">&quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;PWD&quot;</span><span class="p">:</span> <span class="s2">&quot;/root/ansible&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;SHELL&quot;</span><span class="p">:</span> <span class="s2">&quot;/bin/bash&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;SHLVL&quot;</span><span class="p">:</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;SUDO_COMMAND&quot;</span><span class="p">:</span> <span class="s2">&quot;/bin/bash&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;SUDO_GID&quot;</span><span class="p">:</span> <span class="s2">&quot;1000&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;SUDO_UID&quot;</span><span class="p">:</span> <span class="s2">&quot;1000&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;SUDO_USER&quot;</span><span class="p">:</span> <span class="s2">&quot;mdehaan&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;TERM&quot;</span><span class="p">:</span> <span class="s2">&quot;xterm&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;USER&quot;</span><span class="p">:</span> <span class="s2">&quot;root&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;USERNAME&quot;</span><span class="p">:</span> <span class="s2">&quot;root&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;XAUTHORITY&quot;</span><span class="p">:</span> <span class="s2">&quot;/home/mdehaan/.Xauthority&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;_&quot;</span><span class="p">:</span> <span class="s2">&quot;/usr/local/bin/ansible&quot;</span>
</span><span class='line'><span class="p">}</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_eth0&quot;</span><span class="err">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;active&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;device&quot;</span><span class="p">:</span> <span class="s2">&quot;eth0&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;ipv4&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;address&quot;</span><span class="p">:</span> <span class="s2">&quot;REDACTED&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;netmask&quot;</span><span class="p">:</span> <span class="s2">&quot;255.255.255.0&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;network&quot;</span><span class="p">:</span> <span class="s2">&quot;REDACTED&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;ipv6&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;address&quot;</span><span class="p">:</span> <span class="s2">&quot;REDACTED&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;prefix&quot;</span><span class="p">:</span> <span class="s2">&quot;64&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;scope&quot;</span><span class="p">:</span> <span class="s2">&quot;link&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">],</span>
</span><span class='line'>    <span class="nt">&quot;macaddress&quot;</span><span class="p">:</span> <span class="s2">&quot;REDACTED&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;module&quot;</span><span class="p">:</span> <span class="s2">&quot;e1000&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;mtu&quot;</span><span class="p">:</span> <span class="mi">1500</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;ether&quot;</span>
</span><span class='line'><span class="p">}</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_form_factor&quot;</span><span class="err">:</span> <span class="s2">&quot;Other&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_fqdn&quot;</span><span class="err">:</span> <span class="s2">&quot;ubuntu2.example.com&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_hostname&quot;</span><span class="err">:</span> <span class="s2">&quot;ubuntu2&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_interfaces&quot;</span><span class="err">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="s2">&quot;lo&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;eth0&quot;</span>
</span><span class='line'><span class="p">]</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_kernel&quot;</span><span class="err">:</span> <span class="s2">&quot;3.5.0-23-generic&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_lo&quot;</span><span class="err">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;active&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;device&quot;</span><span class="p">:</span> <span class="s2">&quot;lo&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;ipv4&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;address&quot;</span><span class="p">:</span> <span class="s2">&quot;127.0.0.1&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;netmask&quot;</span><span class="p">:</span> <span class="s2">&quot;255.0.0.0&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;network&quot;</span><span class="p">:</span> <span class="s2">&quot;127.0.0.0&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;ipv6&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;address&quot;</span><span class="p">:</span> <span class="s2">&quot;::1&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;prefix&quot;</span><span class="p">:</span> <span class="s2">&quot;128&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;scope&quot;</span><span class="p">:</span> <span class="s2">&quot;host&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">],</span>
</span><span class='line'>    <span class="nt">&quot;mtu&quot;</span><span class="p">:</span> <span class="mi">16436</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;loopback&quot;</span>
</span><span class='line'><span class="p">}</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_lsb&quot;</span><span class="err">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;codename&quot;</span><span class="p">:</span> <span class="s2">&quot;precise&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;description&quot;</span><span class="p">:</span> <span class="s2">&quot;Ubuntu 12.04.2 LTS&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;id&quot;</span><span class="p">:</span> <span class="s2">&quot;Ubuntu&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;major_release&quot;</span><span class="p">:</span> <span class="s2">&quot;12&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;release&quot;</span><span class="p">:</span> <span class="s2">&quot;12.04&quot;</span>
</span><span class='line'><span class="p">}</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_machine&quot;</span><span class="err">:</span> <span class="s2">&quot;x86_64&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_memfree_mb&quot;</span><span class="err">:</span> <span class="mi">74</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_memtotal_mb&quot;</span><span class="err">:</span> <span class="mi">991</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_mounts&quot;</span><span class="err">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;device&quot;</span><span class="p">:</span> <span class="s2">&quot;/dev/sda1&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;fstype&quot;</span><span class="p">:</span> <span class="s2">&quot;ext4&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;mount&quot;</span><span class="p">:</span> <span class="s2">&quot;/&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;options&quot;</span><span class="p">:</span> <span class="s2">&quot;rw,errors=remount-ro&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;size_available&quot;</span><span class="p">:</span> <span class="mi">15032406016</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;size_total&quot;</span><span class="p">:</span> <span class="mi">20079898624</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">]</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_nodename&quot;</span><span class="err">:</span> <span class="s2">&quot;ubuntu2.example.com&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_os_family&quot;</span><span class="err">:</span> <span class="s2">&quot;Debian&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_pkg_mgr&quot;</span><span class="err">:</span> <span class="s2">&quot;apt&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_processor&quot;</span><span class="err">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="s2">&quot;Intel(R) Core(TM) i7 CPU         860  @ 2.80GHz&quot;</span>
</span><span class='line'><span class="p">]</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_processor_cores&quot;</span><span class="err">:</span> <span class="mi">1</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_processor_count&quot;</span><span class="err">:</span> <span class="mi">1</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_processor_threads_per_core&quot;</span><span class="err">:</span> <span class="mi">1</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_processor_vcpus&quot;</span><span class="err">:</span> <span class="mi">1</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_product_name&quot;</span><span class="err">:</span> <span class="s2">&quot;VMware Virtual Platform&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_product_serial&quot;</span><span class="err">:</span> <span class="s2">&quot;REDACTED&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_product_uuid&quot;</span><span class="err">:</span> <span class="s2">&quot;REDACTED&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_product_version&quot;</span><span class="err">:</span> <span class="s2">&quot;None&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_python_version&quot;</span><span class="err">:</span> <span class="s2">&quot;2.7.3&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_selinux&quot;</span><span class="err">:</span> <span class="kc">false</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_ssh_host_key_dsa_public&quot;</span><span class="err">:</span> <span class="s2">&quot;REDACTED KEY VALUE&quot;</span>
</span><span class='line'><span class="s2">&quot;ansible_ssh_host_key_ecdsa_public&quot;</span><span class="err">:</span> <span class="s2">&quot;REDACTED KEY VALUE&quot;</span>
</span><span class='line'><span class="s2">&quot;ansible_ssh_host_key_rsa_public&quot;</span><span class="err">:</span> <span class="s2">&quot;REDACTED KEY VALUE&quot;</span>
</span><span class='line'><span class="s2">&quot;ansible_swapfree_mb&quot;</span><span class="err">:</span> <span class="mi">665</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_swaptotal_mb&quot;</span><span class="err">:</span> <span class="mi">1021</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_system&quot;</span><span class="err">:</span> <span class="s2">&quot;Linux&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_system_vendor&quot;</span><span class="err">:</span> <span class="s2">&quot;VMware, Inc.&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_user_id&quot;</span><span class="err">:</span> <span class="s2">&quot;root&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_userspace_architecture&quot;</span><span class="err">:</span> <span class="s2">&quot;x86_64&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_userspace_bits&quot;</span><span class="err">:</span> <span class="s2">&quot;64&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_virtualization_role&quot;</span><span class="err">:</span> <span class="s2">&quot;guest&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_virtualization_type&quot;</span><span class="err">:</span> <span class="s2">&quot;VMware&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>たとえば、IPアドレスは <code>{{ ansible_eth0["ipv4"]["address"] }}</code> のように、Playbook の中で変数として
扱うことができる。</p>

<p>その他、<code>facter</code> や <code>ohai</code> がリモートホストにインストールされていればそれらも利用可能。
facts よりも詳細な情報が取得できる。</p>

<p>この facts は、いまのところリモートホストが Linux でのみ動作する。
リモートホストが windows やネットワーク機器の場合は以下のように無効化できる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">hosts</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">whatever</span>
</span><span class='line'>  <span class="l-Scalar-Plain">gather_facts</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">no</span>
</span></code></pre></td></tr></table></div></figure>


<p>また、システム情報を利用しない場合も無効化することで実行時間短縮が図れる。</p>

<h1>links</h1>

<ul>
<li><a href="http(//yteraoka.github.io/ansible-tutorial/">Ansible Tutorial</a></li>
<li><a href="https(//github.com/yteraoka/ansible-tutorial/wiki/ansible-playbook%20%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89">ansible playbook コマンド オプション</a></li>
<li><a href="https(//www.ansible.com/blog/ansible-performance-tuning">Ansible Performance Tuning (for Fun and Profit)</a></li>
<li><a href="http(//tdoc.info/blog/2014/01/20/ansible_beyond_configuration.html">Ansibleのアーキテクチャー( 構成管理を超えて</a></li>
<li><a href="http(//qiita.com/yteraoka/items/5ed2bddefff32e1b9faf">Ansible オレオレベストプラクティス</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ansible で MacBook Pro をセットアップ]]></title>
    <link href="http://momota.github.io/blog/2016/08/10/ansible-mac/"/>
    <updated>2016-08-10T15:15:00+09:00</updated>
    <id>http://momota.github.io/blog/2016/08/10/ansible-mac</id>
    <content type="html"><![CDATA[<p>MacBook Pro 2700/13.3 MF839J/A を購入したので (わーい) 、構成管理ツール ansible を使ってセットアップした。</p>

<p><img src="http://momota.github.io/images/20160810_macbookpro.jpg" alt="macbook pro" /></p>

<p>t-wada さんのエントリ <a href="http://t-wada.hatenablog.jp/entry/mac-provisioning-by-ansible">Mac の開発環境構築を自動化する (2015 年初旬編) &ndash; t-wadaのブログ変更する</a>
を見れば事足りると思われるので、本稿は自分用のメモ(t-wada さんのを少しだけカスタマイズ &amp; 補足)。</p>

<p>実行環境は以下。</p>

<table>
<thead>
<tr>
<th>what    </th>
<th> version</th>
</tr>
</thead>
<tbody>
<tr>
<td>laptop  </td>
<td> MacBook Pro (Retina 13-inch, Early 2015)</td>
</tr>
<tr>
<td>OS      </td>
<td> OS X El Capitan 10.11.6</td>
</tr>
<tr>
<td>ansible </td>
<td> 2.1.1.0</td>
</tr>
</tbody>
</table>


<!-- more -->


<h1>1. 事前準備</h1>

<h2>1.1. SSH</h2>

<p>ansible では、コントローラ (Control Machine) から SSH 越しで管理対象ノード (Managed Node) を操作する。
今回は Control Machine も Managed Node も同一マシン (Macbook) なので、localhost に SSH できるようにする。</p>

<p>まず SSH の許可設定。
Mac で「システム環境設定」 > 「共有」 > 「リモートログイン」にチェック。</p>

<p>次にパスなしログインするために公開鍵を設定する。
<a href="http://momota.github.io/blog/2016/02/08/ansible/">こちらでも紹介したとおり</a>、以下のようにする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># no-pass SSH key を生成</span>
</span><span class='line'><span class="nv">$ </span>ssh-keygen -t rsa
</span><span class='line'>
</span><span class='line'><span class="c"># authorized_keysの登録</span>
</span><span class='line'><span class="nv">$ </span>cat ~/.ssh/id_dsa.pub &gt;&gt; ~/.ssh/authorized_keys
</span><span class='line'><span class="nv">$ </span>chmod 600 ~/.ssh/authorized_keys
</span><span class='line'>
</span><span class='line'><span class="c"># SSH アクセス確認</span>
</span><span class='line'><span class="nv">$ </span>ssh 127.0.0.1
</span></code></pre></td></tr></table></div></figure>


<h2>1.2. Xcode</h2>

<p>Homebrew をインストールするために必要なので、App Store から XCode をインストールする。
XCode インストール後、ライセンス同意する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo xcode build -license
</span></code></pre></td></tr></table></div></figure>


<p>ライセンス規約みたいな文章がつらつらと出てくるので、最後に「agree」と入力する。</p>

<p>XCode のコマンドラインツールもインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>xcode-select --install
</span></code></pre></td></tr></table></div></figure>


<h2>1.3. Homebrew</h2>

<p>Homebrew は Mac 用のパッケージマネージャ (yum とか apt 的なやつ。
Homebrew って、ホームブリューと読んでいるけどホームブルーのほうが正しい発音ぽい)。</p>

<p><a href="http://brew.sh/index_ja.html">公式サイト</a>の案内に従い、以下のワンライナーで Homebrew をインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>/usr/bin/ruby -e <span class="s2">&quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記ワンライナーでインストールするとたぶん最新版がインストールされるが、インストール後 <code>brew doctor</code> で古いと出力されたらアップデートする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>brew doctor
</span><span class='line'><span class="nv">$ </span>brew update
</span></code></pre></td></tr></table></div></figure>


<h2>1.4. Ansible</h2>

<p>Ansible に必要な python はすでに 2.7 系がプリインストールされていたので、
そのまま Homebrew で Ansible をインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>brew install ansible
</span><span class='line'><span class="nv">$ </span>ansible --version
</span></code></pre></td></tr></table></div></figure>


<h1>2. Ansible Playbook を開発する</h1>

<p>前回の <a href="http://momota.github.io/blog/2016/02/08/ansible/">Ansible でノート PC をセットアップ</a> で作った仕組みにのせる。</p>

<p>t-wada さんの場合、1 枚の Playbook に変数やタスクを記述していたが、ありものは活用したいという思いがあり。</p>

<p>今回は以下のようなアレンジをした。</p>

<ul>
<li>インストールするパッケージを列挙した変数を <code>vars/common.yml</code> に切り出す</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="c1"># for MacOSX</span>
</span><span class='line'><span class="l-Scalar-Plain">homebrew_taps</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">homebrew/versions</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">homebrew/binary</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">homebrew/dupes</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">caskroom/cask</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">sanemat/font</span>
</span><span class='line'><span class="l-Scalar-Plain">homebrew_packages</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="p-Indicator">{</span> <span class="nv">name</span><span class="p-Indicator">:</span> <span class="nv">readline</span> <span class="p-Indicator">}</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="p-Indicator">{</span> <span class="nv">name</span><span class="p-Indicator">:</span> <span class="nv">openssl</span> <span class="p-Indicator">}</span>
</span><span class='line'>  <span class="c1"># (略)</span>
</span><span class='line'><span class="l-Scalar-Plain">homebrew_cask_packages</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="p-Indicator">{</span> <span class="nv">name</span><span class="p-Indicator">:</span> <span class="nv">iterm2</span> <span class="p-Indicator">}</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="p-Indicator">{</span> <span class="nv">name</span><span class="p-Indicator">:</span> <span class="nv">firefox</span> <span class="p-Indicator">}</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="p-Indicator">{</span> <span class="nv">name</span><span class="p-Indicator">:</span> <span class="nv">google-chrome</span> <span class="p-Indicator">}</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="p-Indicator">{</span> <span class="nv">name</span><span class="p-Indicator">:</span> <span class="nv">google-japanese-ime</span> <span class="p-Indicator">}</span>
</span><span class='line'>  <span class="c1"># (略)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>CentOS などへもインストールするような共通のパッケージは <code>common/</code> 以下の role を利用する

<ul>
<li>今回は tmux とzsh のみ</li>
</ul>
</li>
<li>Mac 固有のタスクは、<code>mac/</code> 以下に切り出す

<ul>
<li>brew (cask も) 用のrole を作る</li>
<li>ricty フォントインストールは個別の処理が多かったため別の role で切り出す</li>
</ul>
</li>
<li>インベントリファイル <code>hosts</code> に mac 用グループ <code>[mac]</code> を作る</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'><span class="k">[mac]</span>
</span><span class='line'><span class="err">127.0.0.1</span>
</span></code></pre></td></tr></table></div></figure>


<p>ディレクトリ構造は以下のようになった。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'><span class="err">└──</span> <span class="err">laptop-build</span>
</span><span class='line'>    <span class="err">├──</span> <span class="err">centos</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">├──</span> <span class="err">docker</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">│  </span> <span class="err">├──</span> <span class="err">files</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">│  </span> <span class="err">└──</span> <span class="err">tasks</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">└──</span> <span class="err">yum</span>
</span><span class='line'>    <span class="err">│  </span>     <span class="err">└──</span> <span class="err">tasks</span>
</span><span class='line'>    <span class="err">├──</span> <span class="err">common</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">├──</span> <span class="err">dotfiles</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">│  </span> <span class="err">├──</span> <span class="err">meta</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">│  </span> <span class="err">└──</span> <span class="err">tasks</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">├──</span> <span class="err">dstat</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">│  </span> <span class="err">└──</span> <span class="err">tasks</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">├──</span> <span class="err">guest_account</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">│  </span> <span class="err">└──</span> <span class="err">tasks</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">├──</span> <span class="err">ruby</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">│  </span> <span class="err">├──</span> <span class="err">meta</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">│  </span> <span class="err">└──</span> <span class="err">tasks</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">├──</span> <span class="err">tmux</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">│  </span> <span class="err">└──</span> <span class="err">tasks</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">├──</span> <span class="err">vim</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">│  </span> <span class="err">└──</span> <span class="err">tasks</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">└──</span> <span class="err">zsh</span>
</span><span class='line'>    <span class="err">│  </span>     <span class="err">└──</span> <span class="err">tasks</span>
</span><span class='line'>    <span class="err">├──</span> <span class="err">mac</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">├──</span> <span class="err">brew</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">│  </span> <span class="err">└──</span> <span class="err">tasks</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">└──</span> <span class="err">ricty</span>
</span><span class='line'>    <span class="err">│  </span>     <span class="err">├──</span> <span class="err">handlers</span>
</span><span class='line'>    <span class="err">│  </span>     <span class="err">└──</span> <span class="err">tasks</span>
</span><span class='line'>    <span class="err">└──</span> <span class="err">vars</span>
</span></code></pre></td></tr></table></div></figure>


<p>できあがった Playbook は Github にあげた。 <a href="https://github.com/momota/laptop-build">momota/laptop-build</a></p>

<h1>3. Ansible を実行する</h1>

<h2>3.1. ansible のログ出力設定</h2>

<p><code>tee</code> とかを使って Playbook の実行出力結果をファイルに保存しようと思ったが、ansible のログ機能を使った。
<code>ansible.cfg</code> に以下を記述。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'><span class="k">[defaults]</span>
</span><span class='line'><span class="na">log_path</span><span class="o">=</span><span class="s">/var/log/ansible.log</span>
</span></code></pre></td></tr></table></div></figure>


<p>mac の場合、<code>/etc/ansible/ansible.cfg</code> がなかった (ディレクトリごとない) ので、<code>~/.ansible.cfg</code> を作成した。</p>

<h2>3.2. ansible の実行</h2>

<p>absible-playbook コマンドで実行する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># git clone</span>
</span><span class='line'><span class="nv">$ </span>git clone https://github.com/momota/laptop-build
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>laptop-build
</span><span class='line'>
</span><span class='line'><span class="c"># execute playbook</span>
</span><span class='line'><span class="nv">$ HOMEBREW_CASK_OPTS</span><span class="o">=</span><span class="s2">&quot;--appdir=/Applications&quot;</span> ansible-playbook -i hosts mac/site.yml -vv -K
</span></code></pre></td></tr></table></div></figure>


<p><code>HOMEBREW_CASK_OPTS="--appdir=/Applications"</code> をつけないと、アプリケーションによって <code>/Applications</code> だったり、 <code>~/Applications</code> だったりにシンボリックリンクリンクが作られてしまうとのこと。</p>

<p>ログインシェルを zsh に変更するタスクで <code>sudo</code> するので、<code>-K</code> オプション付き。</p>

<h1>4. Playbook のトラブルフォロー</h1>

<h2>4.1. shell モジュールでcommand not found</h2>

<p>Playbook をコピペして実行したら、shell モジュールで <code>brew</code> を呼んでいるタスクから
<code>command not found</code> エラーが返ってきた。
フルパスで指定し直す。</p>

<h2>4.2. cask パッケージ名の誤り</h2>

<p><code>/vars/common.yml</code> にインストールしたい cask パッケージ名を定義するが、パッケージ名を謝って途中で処理がこけた。
もちろんググっても良いと思うが、事前に以下のコマンドなどで調べるとよさそう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>brew cask search <span class="o">[</span>探したいパッケージ<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<h2>4.3. cask インストールの処理停止</h2>

<p>Homebrew cask でパッケージインストール途中で処理が止まることがあった。(2, 3回)
どんなに待っても止まったままなので、 <code>Ctrl-c</code> で中断する。</p>

<p>ansible-playbook コマンドに <code>-vvv</code> オプションなどを付けるも、原因はよく分からず。
たぶん、ansible ではなく brew 側に原因がありそう。</p>

<p>インストール処理で止まっているパッケージは、ansible で表示されているパッケージの、<code>vars/common.yml</code> での変数定義上の次のパッケージ。
途中で止まっているパッケージもインストール一覧に出力される。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>brew cask list
</span><span class='line'><span class="c">#=&gt; インストール処理中のパッケージも出力される</span>
</span></code></pre></td></tr></table></div></figure>


<p>リストには表示されるものの、中途半端にインストールされていそうなので、
<code>brew</code> コマンドでインストールし直して Playbook を再実行する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>brew cask install --force <span class="o">[</span>途中で止まったパッケージ<span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="c"># アンインストールして、再インストールしても良いかも</span>
</span><span class='line'><span class="c">#   $ brew cask uninstall [途中で止まったパッケージ]</span>
</span><span class='line'><span class="c">#   $ brew cask install [途中で止まったパッケージ]</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ HOMEBREW_CASK_OPTS</span><span class="o">=</span><span class="s2">&quot;--appdir=/Applications&quot;</span> ansible-playbook -i hosts mac/site.yml -vv -K
</span></code></pre></td></tr></table></div></figure>


<p>なにも考えずに re-run できるのはうれしい。 (これが冪等性のパワーか)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ネットワークエンジニアのための cisco.vim]]></title>
    <link href="http://momota.github.io/blog/2016/06/24/cisco-dot-vim/"/>
    <updated>2016-06-24T16:42:00+09:00</updated>
    <id>http://momota.github.io/blog/2016/06/24/cisco-dot-vim</id>
    <content type="html"><![CDATA[<p>ネットワークエンジニアのみなさん、こんにちは。</p>

<p><a href="http://momota.github.io/blog/2016/06/22/junos-dot-vim/">ネットワークエンジニアのための junos.vim</a> の cisco バージョンです。</p>

<p>cisco の configuration をカラーリングする vim プラグイン
<a href="https://github.com/momota/cisco.vim">momota/cisco.vim</a> を作ったのでご活用下さい。</p>

<p>対象は、cisco ルータと Catalyst スイッチ、Nexus スイッチです。</p>

<p>色を付けることによって、configuration の解釈を手助けしたり、
configuration 作成時のミスに気づきやすくしたりする効果が期待できます。
(誤ったタームを入力すると色が付かないので)</p>

<p>以下のようにカラーリングします。 (colorscheme は molokai)</p>

<h2>before</h2>

<p><img src="http://momota.github.io/images/20160624_cisco-config_before.png" alt="display_before" /></p>

<h2>after</h2>

<p><img src="http://momota.github.io/images/20160624_cisco-config_after.png" alt="display_after" /></p>

<!-- more -->


<h2>インストール</h2>

<p>NeoBundle で vim プラグインを管理している人は以下の行を<code>.vimrc</code> に追加して</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'>NeoBundle <span class="s1">&#39;momota/cisco.vim&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>:NeoBundleInstall</code> でインストールする。</p>

<p>その他は、<a href="https://github.com/momota/cisco.vim#installation">README/Installation</a> を参照。</p>

<h2>使い方</h2>

<p>cisco config ファイルを <code>.cisco</code> という拡張子で保存して vim で開くか、
cisco config ファイルの先頭に以下行を追加して保存し vim で開くと色付けしてくれる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'><span class="p">!</span> <span class="k">vim</span>: <span class="k">set</span> <span class="nb">ft</span><span class="p">=</span>cisco:
</span></code></pre></td></tr></table></div></figure>


<p>もしくは、cisco config ファイルを vim 開いている時に <code>:set ft=cisco</code> を実行する。</p>

<h1>関連</h1>

<ul>
<li><a href="http://momota.github.io/blog/2016/06/22/junos-dot-vim/">ネットワークエンジニアのための junos.vim</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ネットワークエンジニアのための junos.vim]]></title>
    <link href="http://momota.github.io/blog/2016/06/22/junos-dot-vim/"/>
    <updated>2016-06-22T10:57:00+09:00</updated>
    <id>http://momota.github.io/blog/2016/06/22/junos-dot-vim</id>
    <content type="html"><![CDATA[<p>ネットワークエンジニアのみなさん、こんにちは。</p>

<p>Juniper の configuration をカラーリングする vim プラグイン
<a href="https://github.com/momota/junos.vim">momota/junos.vim</a> を作ったのでご活用下さい。</p>

<p>対象は、Juniper EX シリーズとSRX シリーズです。</p>

<p>色を付けることによって、junos configuration の解釈を手助けしたり、
configuration 作成時のミスに気づきやすくしたりする効果が期待できます。
(誤ったタームを入力すると色が付かないので)</p>

<p>以下のようにカラーリングします。 (colorscheme は molokai)</p>

<h2>before</h2>

<p><img src="http://momota.github.io/images/20160622_junos-confg_before.png" alt="display_before" /></p>

<h2>after</h2>

<p><img src="http://momota.github.io/images/20160622_junos-confg_after.png" alt="display_after" /></p>

<h2>before: <code>display set</code> モード</h2>

<p><img src="http://momota.github.io/images/20160622_junos-confg-set_before.png" alt="display-set_before" /></p>

<h2>after: <code>display set</code> モード</h2>

<p><img src="http://momota.github.io/images/20160622_junos-confg-set_after.png" alt="display-set_after" /></p>

<p>cisco 版はこちら <a href="http://momota.github.io/blog/2016/06/24/cisco-dot-vim/">ネットワークエンジニアのための cisco.vim</a></p>

<!-- more -->


<h2>インストール</h2>

<p>NeoBundle で vim プラグインを管理している人は以下の行を<code>.vimrc</code> に追加して</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'>NeoBundle <span class="s1">&#39;momota/junos.vim&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>:NeoBundleInstall</code> でインストールする。</p>

<p>その他は、<a href="https://github.com/momota/junos.vim#installation">README/Installation</a> を参照。</p>

<h2>使い方</h2>

<p>juniper config ファイルを <code>.junos</code> という拡張子で保存して vim で開くか、
juniper config ファイルの先頭に以下行を追加して保存し vim で開くと色付けしてくれる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># vim: set ft=junos:</span>
</span></code></pre></td></tr></table></div></figure>


<p>もしくは、juniper config ファイルを vim 開いている時に <code>:set ft=junos</code> を実行する。</p>

<h1>関連</h1>

<ul>
<li><a href="http://momota.github.io/blog/2016/06/24/cisco-dot-vim/">ネットワークエンジニアのための cisco.vim</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RuboCop でコーディングスタイルを矯正する]]></title>
    <link href="http://momota.github.io/blog/2016/06/17/rubocop/"/>
    <updated>2016-06-17T17:30:00+09:00</updated>
    <id>http://momota.github.io/blog/2016/06/17/rubocop</id>
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/bbatsov/rubocop/master/logo/rubo-logo-horizontal.png" alt="RuboCop Logo" /></p>

<p><a href="http://note103.hateblo.jp/entry/2016/06/13/074744">textlintで日本語テキストの文字校正を試してみた</a> とかで、lint 系の記事を目にしたので
そろそろ導入してみるか、と思い立った。</p>

<p>RuboCop はRuby の静的コードアナライザ。
<a href="https://github.com/bbatsov/rubocop">bbatsov/rubocop</a></p>

<p><a href="https://github.com/bbatsov/ruby-style-guide">The Ruby Style Guide</a> に沿ったコーディングスタイルに矯正(注意)してくれる。
無駄なスペースが入力されている、とか、無駄な改行が入っている、とか、
この変数1度も使われてないよ?とかクラスの中の行数が多すぎる、とか、
1行の文字数が長すぎる、とか。</p>

<p>大人数で開発していると細かなコーディングスタイルを合わせるだけでも面倒なので
こういうツールによって人間が矯正されると AI 時代に思いを馳せることができて良い感じですね。</p>

<!-- more -->


<h2>RuboCop インストール</h2>

<p>gem でインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>gem install rubocop
</span><span class='line'><span class="nv">$ </span>rubocop -v
</span><span class='line'>0.40.0
</span></code></pre></td></tr></table></div></figure>


<p>実行は<code>rubocop</code> コマンドにチェックしたいスクリプトを渡す。
例えば、以下のような Ruby スクリプトを</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># conding: utf-8</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;date&quot;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">SampleRubocop</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span> <span class="n">key</span> <span class="p">)</span>
</span><span class='line'>    <span class="vi">@key</span> <span class="o">=</span> <span class="n">key</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">hey</span>
</span><span class='line'>    <span class="vi">@key</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="bp">__FILE__</span> <span class="o">==</span> <span class="vg">$0</span>
</span><span class='line'>  <span class="n">hoge</span> <span class="o">=</span> <span class="no">SampleRubocop</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;hoge&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">p</span> <span class="n">hoge</span><span class="o">.</span><span class="n">hey</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>RuboCop でチェックすると以下のような感じで注意を受ける。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">rubocop</span> <span class="n">sample_rubocop</span><span class="o">.</span><span class="n">rb</span>
</span><span class='line'><span class="no">Inspecting</span> <span class="mi">1</span> <span class="n">file</span>
</span><span class='line'><span class="n">C</span>
</span><span class='line'>
</span><span class='line'><span class="ss">Offenses</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'><span class="n">sample_rubocop</span><span class="o">.</span><span class="n">rb</span><span class="p">:</span><span class="mi">2</span><span class="p">:</span><span class="mi">9</span><span class="p">:</span> <span class="ss">C</span><span class="p">:</span> <span class="no">Prefer</span> <span class="n">single</span><span class="o">-</span><span class="n">quoted</span> <span class="n">strings</span> <span class="k">when</span> <span class="n">you</span> <span class="n">don</span><span class="s1">&#39;t need string interpolation or special symbols.</span>
</span><span class='line'><span class="s1">require &quot;date&quot;</span>
</span><span class='line'><span class="s1">        ^^^^^^</span>
</span><span class='line'><span class="s1">sample_rubocop.rb:4:1: C: Extra blank line detected.</span>
</span><span class='line'><span class="s1">sample_rubocop.rb:5:1: C: Missing top-level class documentation comment.</span>
</span><span class='line'><span class="s1">class SampleRubocop</span>
</span><span class='line'><span class="s1">^^^^^</span>
</span><span class='line'><span class="s1">sample_rubocop.rb:6:18: C: Space inside parentheses detected.</span>
</span><span class='line'><span class="s1">  def initialize( key )</span>
</span><span class='line'><span class="s1">                 ^</span>
</span><span class='line'><span class="s1">sample_rubocop.rb:6:22: C: Space inside parentheses detected.</span>
</span><span class='line'><span class="s1">  def initialize( key )</span>
</span><span class='line'><span class="s1">                     ^</span>
</span><span class='line'><span class="s1">sample_rubocop.rb:15:1: C: Extra blank line detected.</span>
</span><span class='line'><span class="s1">sample_rubocop.rb:16:16: C: Prefer $PROGRAM_NAME over $0.</span>
</span><span class='line'><span class="s1">if __FILE__ == $0</span>
</span><span class='line'><span class="s1">               ^^</span>
</span><span class='line'><span class="s1">sample_rubocop.rb:17:28: C: Prefer single-quoted strings when you don&#39;</span><span class="n">t</span> <span class="n">need</span> <span class="n">string</span> <span class="n">interpolation</span> <span class="ow">or</span> <span class="n">special</span> <span class="n">symbols</span><span class="o">.</span>
</span><span class='line'>  <span class="n">hoge</span> <span class="o">=</span> <span class="no">SampleRubocop</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;hoge&quot;</span><span class="p">)</span>
</span><span class='line'>                           <span class="o">^^^^^^</span>
</span><span class='line'><span class="n">sample_rubocop</span><span class="o">.</span><span class="n">rb</span><span class="p">:</span><span class="mi">20</span><span class="p">:</span><span class="mi">1</span><span class="p">:</span> <span class="ss">C</span><span class="p">:</span> <span class="mi">1</span> <span class="n">trailing</span> <span class="n">blank</span> <span class="n">lines</span> <span class="n">detected</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>無駄な改行とかスペースを注意されていますね。修正しましょう。</p>

<p><a href="https://github.com/bbatsov/ruby-style-guide">The Ruby Style Guide</a> が自分(たち) の
コーディングスタイルに合わない場合は、カスタマイズが可能。
<code>.rubocop.yml</code> を編集する。</p>

<p>いったん、今書いているものを正しいコーディングスタイルとみなした <code>.rubocop.yml</code> を生成するには
<code>--auto-gen-config</code> オプションをつけて rubocop を実行する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /path/to/project
</span><span class='line'><span class="nv">$ </span>rubocop --auto-gen-config
</span><span class='line'><span class="c"># =&gt; /path/to/project/.rubocp_todo.yml が出力される</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記コマンドにより、プロジェクトディレクトリ(/path/to/project)配下のコードが解析されて、cop と
呼ばれるルール群が <code>.rubocp_todo.yml</code> というファイルで出力される。
<code>.rubocp_todo.yml</code> の中身は、以下のように cop 単位にそのプロジェクトに沿った設定が入ったものが
出力されている。</p>

<p>以下は、出力された <code>.rubocp_todo.yml</code> の一部を抜粋。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1"># -- snip --</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1"># Offense count: 113</span>
</span><span class='line'><span class="c1"># Configuration parameters: AllowHeredoc, AllowURI, URISchemes.</span>
</span><span class='line'><span class="c1"># URISchemes: http, https</span>
</span><span class='line'><span class="l-Scalar-Plain">Metrics/LineLength</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">Max</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">137</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1"># -- snip --</span>
</span><span class='line'><span class="c1">#</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記は、以下を示している。</p>

<ul>
<li>デフォルト 1 行 80 文字までがコーディング規約となっているが最大 137 文字の行がある

<ul>
<li>1 行あたり最大 137 文字まで許容する、という設定</li>
</ul>
</li>
<li>1 行 80 文字以上 (違反: offense) に該当する箇所が 113 件</li>
</ul>


<p><code>.rubocp_todo.yml</code> の修正不可能・修正困難部分のみを残したりチューニングして、<code>.rubocop.yml</code> に
リネームしたら自分たちのコーディングスタイルに沿った現実的なルールを適用できる。</p>

<p>標準のコーディング規約に沿ってコードを修正していく場合は、<code>.rubocop.yml</code> に以下の行を追加するか</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">inherit_from</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">.rubocop-todo.yml</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>rubocop --config .rubocop_todo.yml</code> を実行して、違反をつぶしていく。</p>

<p>コードの自動修正機能もある。
<code>.rubocop_todo.yml</code> に <code># Cop supports --auto-correct.</code> と記述されている cop については、以下の
コマンドにより自動修正が可能。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rubocop -a
</span><span class='line'><span class="c"># $ rubocop --auto-correct でもOK</span>
</span></code></pre></td></tr></table></div></figure>


<h2>vim と RuboCop を連携する</h2>

<p>コーディングしながら RuboCop に注意されたいので、vim と連携する。</p>

<p>vim プラグインの <a href="https://github.com/scrooloose/syntastic">scrooloose/syntastic</a> を入れる。</p>

<p>NeoBundle を使っているので、手持ちの <code>vimrc</code> を以下のように修正し、<code>:NeoBundleInstall</code> してインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gi">+ NeoBundle &#39;scrooloose/syntastic&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="gi">+ &quot; ----------------------------------------------------------------------</span>
</span><span class='line'><span class="gi">+ &quot; syntastic</span>
</span><span class='line'><span class="gi">+ let g:syntastic_mode_map = { &#39;mode&#39;: &#39;active&#39; }</span>
</span><span class='line'><span class="gi">+ let g:syntastic_ruby_checkers = [&#39;rubocop&#39;]</span>
</span></code></pre></td></tr></table></div></figure>


<p>そうすると、<code>:SyntaxCheck</code> を実行するか、保存<code>:w</code> のタイミングで RuboCop が動いてくれる。
以下のように指摘してくれる。</p>

<p><img src="http://momota.github.io/images/syntastic_ss.png" alt="syntastic_ss" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[seleniumノウハウ]]></title>
    <link href="http://momota.github.io/blog/2016/05/28/selenium-know-how/"/>
    <updated>2016-05-28T16:57:00+09:00</updated>
    <id>http://momota.github.io/blog/2016/05/28/selenium-know-how</id>
    <content type="html"><![CDATA[<p><img src="http://momota.github.io/images/selenium.png" alt="selenium" /></p>

<p><a href="http://momota.github.io/blog/2016/02/26/selenium/">ブラウザ操作の自動化: Selenium と Ruby</a> でも書いたが、
selenium が便利すぎて、最近よくスクリプトを書くようになった。</p>

<p>以下のようなノウハウが溜まってきたので、ここらで放出する。</p>

<ul>
<li>ウィンドウサイズのリサイズ</li>
<li>ウィンドウ位置の移動</li>
<li>スクリーンショットの取得</li>
<li>要素セレクタメソッドの使い分け</li>
<li>ドロップダウンリストの選択</li>
<li>マウスオーバ (hover)</li>
<li>フレーム移動</li>
<li>ポップアップダイアログの扱い</li>
<li>コード量を減らすためのモンキーパッチ</li>
<li>よく採るプログラム構造</li>
</ul>


<p>インストール方法などは <a href="http://momota.github.io/blog/2016/02/26/selenium/">ブラウザ操作の自動化: Selenium と Ruby</a>
を参照。</p>

<p>selenium用スクリプト開発のノウハウというべきかコツといういべきかアレな感じだが、結局、
スクレイピングと同様にHTML構造を理解することが必要なのでブラウザ付属の開発ツールが
手離せない。</p>

<ul>
<li><a href="https://developer.mozilla.org/ja/docs/Tools">Firefox 開発ツール</a></li>
<li><a href="https://developer.chrome.com/devtools">chrome devtools</a></li>
</ul>


<!-- more -->


<p>これ以降のサンプルコードは以下を定義しているものとする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s2">&quot;selenium-webdriver&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">driver</span> <span class="o">=</span> <span class="ss">Selenium</span><span class="p">:</span><span class="ss">:WebDriver</span><span class="o">.</span><span class="n">for</span> <span class="ss">:firefox</span>
</span></code></pre></td></tr></table></div></figure>


<h2>ウィンドウサイズのリサイズ</h2>

<p><code>driver.manage.window.resize_to</code>の引数にリサイズするサイズ情報(width, height)を渡す。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">width</span>  <span class="o">=</span> <span class="mi">100</span>
</span><span class='line'><span class="n">height</span> <span class="o">=</span> <span class="mi">100</span>
</span><span class='line'><span class="n">driver</span><span class="o">.</span><span class="n">manage</span><span class="o">.</span><span class="n">window</span><span class="o">.</span><span class="n">resize_to</span><span class="p">(</span><span class="n">width</span><span class="p">,</span> <span class="n">height</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>現在のサイズを取得して、相対的にリサイズしたい場合は以下のようにする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">size</span> <span class="o">=</span> <span class="n">driver</span><span class="o">.</span><span class="n">manage</span><span class="o">.</span><span class="n">window</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'><span class="n">size</span><span class="o">.</span><span class="n">width</span>  <span class="o">+=</span> <span class="mi">100</span>
</span><span class='line'><span class="n">size</span><span class="o">.</span><span class="n">height</span> <span class="o">+=</span> <span class="mi">100</span>
</span><span class='line'><span class="n">driver</span><span class="o">.</span><span class="n">manage</span><span class="o">.</span><span class="n">window</span><span class="o">.</span><span class="n">size</span> <span class="o">=</span> <span class="n">size</span>
</span></code></pre></td></tr></table></div></figure>


<h2>ウィンドウ位置の移動</h2>

<p><code>driver.manage.window.move_to</code>の引数に移動したい場所の座標情報(x, y)を渡す。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">x</span> <span class="o">=</span> <span class="mi">100</span>
</span><span class='line'><span class="n">y</span> <span class="o">=</span> <span class="mi">100</span>
</span><span class='line'><span class="n">driver</span><span class="o">.</span><span class="n">manage</span><span class="o">.</span><span class="n">window</span><span class="o">.</span><span class="n">move_to</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>現在のウィンドウ位置を取得して、相対的にリサイズしたい場合は以下のようにする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">pos</span> <span class="o">=</span> <span class="n">driver</span><span class="o">.</span><span class="n">manage</span><span class="o">.</span><span class="n">window</span><span class="o">.</span><span class="n">position</span>
</span><span class='line'><span class="n">pos</span><span class="o">.</span><span class="n">x</span> <span class="o">+=</span> <span class="mi">100</span>
</span><span class='line'><span class="n">pos</span><span class="o">.</span><span class="n">y</span> <span class="o">+=</span> <span class="mi">100</span>
</span><span class='line'><span class="n">driver</span><span class="o">.</span><span class="n">manage</span><span class="o">.</span><span class="n">window</span><span class="o">.</span><span class="n">position</span> <span class="o">=</span> <span class="n">pos</span>
</span></code></pre></td></tr></table></div></figure>


<h2>スクリーンショットの取得</h2>

<p>開いているページのスクリーンショットを撮りたい場合は、<code>driver.save_screenshot</code> に保存先のファイル名を指定するだけ。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">driver</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">&quot;https://www.google.co.jp/&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">driver</span><span class="o">.</span><span class="n">save_screenshot</span><span class="p">(</span><span class="s2">&quot;/path/to/save/screenshot.png&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>ページ全体を撮りたいのに、frame 構造が邪魔をして、スクロールしなければ全体が撮れない場合がある。
ちょっと、調べたところ <code>driver.execute_script("some script")</code> で javascript を利用してスクロールをしている人がいたり、
<code>Selenium::WebDriver::Element.location_once_scrolled_into_view</code> を使ってスクロールしている人がいたり。
どちらにしても、コンテンツ表示上の高さを取得して、1スクロール分の長さをデクリメントしていっているような処理。</p>

<p>自分の場合は、めんどくさかったので、上述したリサイズ方法を使ってスクロールがいらないくらいウィンドウサイズを大きくして、
スクリーンショットを撮るという荒業を繰り広げている。</p>

<h2>要素セレクタメソッドの使い分け</h2>

<p>要素セレクタメソッドは <code>find_element</code> と <code>find_elements</code> の2種類。
そのメソッド名の単数形・複数形の通りなのだが、以下のような違いがある</p>

<ul>
<li><code>find_element</code>

<ul>
<li>指定した引数にマッチする最初の要素 (<code>WebDriver::Element</code>) を <strong>1つ</strong> 返す。</li>
<li>マッチする要素がなければ例外 (<code>NoSuchElementError</code>) を投げる。</li>
</ul>
</li>
<li><code>find_elements</code>

<ul>
<li>指定した引数にマッチする要素を詰めた配列 (<code>Array&lt;WebDriver::Element&gt;</code>) を返す。</li>
<li>マッチする要素がなければ、空の配列 (<code>Array</code>) を返す。</li>
</ul>
</li>
</ul>


<p>テーブルの <code>&lt;tr&gt;</code> 要素やリストの <code>&lt;li&gt;</code> 要素に対してイテレーション処理するときには <code>find_elements</code> が便利。
以下は、例。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># リストのリンクをクリックしていくイテレーションの例</span>
</span><span class='line'><span class="n">elements</span> <span class="o">=</span> <span class="n">driver</span><span class="o">.</span><span class="n">find_elements</span><span class="p">(</span><span class="ss">:css</span><span class="p">,</span> <span class="s2">&quot;#some-list &gt; li&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">elements</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span>
</span><span class='line'>  <span class="n">link</span> <span class="o">=</span> <span class="n">e</span><span class="o">.</span><span class="n">find_element</span><span class="p">(</span><span class="ss">:tag_name</span><span class="p">,</span> <span class="s2">&quot;a&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">link</span><span class="o">.</span><span class="n">click</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>要素セレクタメソッドの引数には、<code>find_element(:how, "what")</code> のように symbol と文字列を渡す。
渡す引数は、<code>find_elements</code> も同じ。</p>

<p>指定できるsymbolの種類は以下。</p>

<table>
<thead>
<tr>
<th>symbol             </th>
<th> 対象</th>
</tr>
</thead>
<tbody>
<tr>
<td>:class             </td>
<td> クラス名 (属性名 class)</td>
</tr>
<tr>
<td>:class_name        </td>
<td> 上記 :class と同じ</td>
</tr>
<tr>
<td>:id                </td>
<td> ID (属性名 id)</td>
</tr>
<tr>
<td>:link_text         </td>
<td> <code>&lt;a&gt;</code> タグのテキスト</td>
</tr>
<tr>
<td>:link              </td>
<td> 上記 :link_text と同じ</td>
</tr>
<tr>
<td>:partial_link_text </td>
<td> <code>&lt;a&gt;</code> タグのテキストの部分文字列</td>
</tr>
<tr>
<td>:name              </td>
<td> name (属性名 name)</td>
</tr>
<tr>
<td>:tag_name          </td>
<td> タグ名</td>
</tr>
<tr>
<td>:xpath             </td>
<td> xpath で指定</td>
</tr>
<tr>
<td>:css               </td>
<td> css セレクタ で指定</td>
</tr>
</tbody>
</table>


<p><a href="http://www.rubydoc.info/gems/selenium-webdriver/0.0.28/Selenium/WebDriver/Find">参考 Module: Selenium::WebDriver::Find</a></p>

<h2>ドロップダウンリストの選択</h2>

<p>Selenium IDEでRubyコードの出力をしようとすると、ドロップダウンリストの選択をする処理部分がERRORに
なってコメントアウトされることがある。(今のSelenium IDEバージョンでは大丈夫そう)</p>

<p>ドロップダウンリストの選択は以下のように書けばOK。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="ss">Selenium</span><span class="p">:</span><span class="ss">:WebDriver</span><span class="o">::</span><span class="ss">Support</span><span class="p">:</span><span class="ss">:Select</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">driver</span><span class="o">.</span><span class="n">find_element</span><span class="p">(</span><span class="ss">:tag_name</span><span class="p">,</span> <span class="s2">&quot;select&quot;</span><span class="p">))</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">select_by</span><span class="p">(</span><span class="ss">:text</span><span class="p">,</span> <span class="s2">&quot;ほげほげ&quot;</span><span class="p">)</span>  <span class="c1"># 表示テキストで選択</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">select_by</span><span class="p">(</span><span class="ss">:value</span><span class="p">,</span> <span class="s2">&quot;value1&quot;</span><span class="p">)</span>   <span class="c1"># valueの値で選択</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">select_by</span><span class="p">(</span><span class="ss">:index</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>          <span class="c1"># index(0, 1, 2, ...)で選択</span>
</span></code></pre></td></tr></table></div></figure>


<h2>マウスオーバ (hover)</h2>

<p>例えば、ナビゲーションメニューなどが、通常時には折りたたまれていて、メニュー上にマウスオーバした場合に、
子メニューが展開されるようなページがある。
折りたたまれているときに、子メニューHTMLをロードできていないようなページのときは、ユーザ操作と同じように
マウスオーバしてあげる必要がある。</p>

<p>以下のようにマウスオーバしたい要素を指定して、<code>driver.mouse.move_to</code> を呼べば良い。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">e</span> <span class="o">=</span> <span class="n">driver</span><span class="o">.</span><span class="n">find_element</span><span class="p">(</span><span class="ss">:id</span><span class="p">,</span> <span class="s2">&quot;menu&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">driver</span><span class="o">.</span><span class="n">mouse</span><span class="o">.</span><span class="n">move_to</span><span class="p">(</span><span class="n">e</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>フレーム移動</h2>

<p>frame や iframe 要素を使っているサイトで、そのフレーム内の要素に対して操作したい場合、当該フレームへ切り替える操作が必要となる。</p>

<p>以下のようにスイッチしたいフレーム要素を指定して、<code>driver.switch_to.frame</code> を呼べば良い。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">frame</span> <span class="o">=</span> <span class="n">driver</span><span class="o">.</span><span class="n">find_element</span><span class="p">(</span><span class="ss">:id</span><span class="p">,</span> <span class="s2">&quot;frame&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">driver</span><span class="o">.</span><span class="n">switch_to</span><span class="o">.</span><span class="n">frame</span><span class="p">(</span><span class="n">frame</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>フレームを移動してから、いったん最上位のフレームにに戻りたい場合は、以下。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">driver</span><span class="o">.</span><span class="n">switch_to</span><span class="o">.</span><span class="n">window</span><span class="p">(</span><span class="n">driver</span><span class="o">.</span><span class="n">window_handle</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">frame</span> <span class="o">=</span> <span class="n">driver</span><span class="o">.</span><span class="n">find_element</span><span class="p">(</span><span class="ss">:id</span><span class="p">,</span> <span class="s2">&quot;top-frame&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">driver</span><span class="o">.</span><span class="n">switch_to</span><span class="o">.</span><span class="n">frame</span><span class="p">(</span><span class="n">frame</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>ポップアップダイアログの扱い</h2>

<p>「マジでこのページから移動する?」的なjavascriptによるポップアップダイアログを表示するページがある。
このポップアップダイアログを強制的に閉じるには以下のようにする。</p>

<p><code>.accept</code> ではい、<code>.dismiss</code>でいいえを押して閉じる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">begin</span>
</span><span class='line'>  <span class="n">alert_box</span> <span class="o">=</span> <span class="n">driver</span><span class="o">.</span><span class="n">switch_to</span><span class="o">.</span><span class="n">alert</span>
</span><span class='line'>  <span class="n">alert_box</span><span class="o">.</span><span class="n">accept</span>     <span class="c1"># 「はい」「OK」ボタンクリック</span>
</span><span class='line'>  <span class="c1"># alert_box.dismiss  # 「いいえ」「cancel」ボタンクリック</span>
</span><span class='line'><span class="k">rescue</span> <span class="ss">Selenium</span><span class="p">:</span><span class="ss">:WebDriver</span><span class="o">::</span><span class="ss">Error</span><span class="p">:</span><span class="ss">:NoSuchAlertError</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>  <span class="c1"># ダイアログがポップアップしない場合、例外を投げるので、何もせずにスルー</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>コード量を減らすためのモンキーパッチ</h2>

<p>たとえば、ログインなどの処理の際、フォームへ文字列を送る <code>send_keys</code> 前にいつも <code>.clear</code> しているので
もう <code>send_keys</code> の中に <code>.clear</code> 処理を入れ込んでしまえと思った。</p>

<p>また、<code>input</code> タグの値を取得するときは、<code>.attribute("value")</code> と長ったらしく書く必要があるので <code>.value</code>メソッドを
定義してしまおうと思った。checkbox のチェック有無も同じく。</p>

<p>そこで、<code>Selenium::WebDriver::Element</code> を拡張するため、以下のようなモンキーパッチを書く。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">ElementExtension</span>
</span><span class='line'>  <span class="n">refine</span> <span class="ss">Selenium</span><span class="p">:</span><span class="ss">:WebDriver</span><span class="o">::</span><span class="no">Element</span> <span class="k">do</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">send_keys</span><span class="p">(</span><span class="n">str</span><span class="p">)</span>
</span><span class='line'>      <span class="n">clear</span>
</span><span class='line'>      <span class="k">super</span><span class="p">(</span><span class="n">str</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">value</span>
</span><span class='line'>      <span class="n">attribute</span><span class="p">(</span><span class="s2">&quot;value&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">checked?</span>
</span><span class='line'>      <span class="n">attribute</span><span class="p">(</span><span class="s2">&quot;checked&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">nil?</span> <span class="p">?</span> <span class="kp">false</span> <span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">url</span>
</span><span class='line'>      <span class="n">attribute</span><span class="p">(</span><span class="s2">&quot;href&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">using</span> <span class="no">ElementExtension</span>
</span></code></pre></td></tr></table></div></figure>


<p>そうすると以下のようにコード量を減らせる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'># たとえば、ログイン処理
</span><span class='line'>user     = &quot;USER&quot;
</span><span class='line'>password = &quot;PASSWORD&quot;
</span><span class='line'>
</span><span class='line'><span class="gd">- driver.find_element(:id, &quot;loginuser&quot;).clear</span>
</span><span class='line'>driver.find_element(:id, &quot;loginuser&quot;).send_keys(user)
</span><span class='line'><span class="gd">- driver.find_element(:id, &quot;loginpass&quot;).clear</span>
</span><span class='line'>driver.find_element(:id, &quot;loginpass&quot;).send_keys(password)
</span><span class='line'>driver.find_element(:id, &quot;submit&quot;).click
</span><span class='line'>
</span><span class='line'>
</span><span class='line'># &lt;input&gt;の値を取得する処理
</span><span class='line'><span class="gd">- hostname = driver.find_element(:id, &quot;hostname&quot;).attribute(&quot;value&quot;)</span>
</span><span class='line'><span class="gi">+ hostname = driver.find_element(:id, &quot;hostname&quot;).value</span>
</span><span class='line'>
</span><span class='line'># チェックボックスがチェックされているかどうか
</span><span class='line'>checkbox = driver.find_element(:id, &quot;some-checkbox&quot;)
</span><span class='line'><span class="gd">- do_something if checkbox.attribute(&quot;checked&quot;).nil?</span>
</span><span class='line'><span class="gi">+ do_something if checkbox.checked?</span>
</span><span class='line'>
</span><span class='line'># URLの取得
</span><span class='line'><span class="gd">- url = driver.find_element(:tag_namem &quot;a&quot;).attribute(&quot;href&quot;)</span>
</span><span class='line'><span class="gi">+ url = driver.find_element(:tag_namem &quot;a&quot;).url</span>
</span></code></pre></td></tr></table></div></figure>


<p>モンキーパッチの書き方は以下を参考にした。</p>

<ul>
<li><a href="http://melborne.github.io/2013/08/30/monkey-patching-for-prudent-rubyists/">分別のあるRubyモンキーパッチャーになるために</a></li>
</ul>


<h2>よく採るプログラム構造</h2>

<p>よく採るプログラム構造は以下。</p>

<ul>
<li>操作ターゲットとなるサイト単位にクラスを作る</li>
<li>処理の内容にしたがって、メソッドを作る。以下の様な粒度。

<ul>
<li>サインイン</li>
<li>リスト表示</li>
<li>自動入力と申請</li>
</ul>
</li>
<li>アカウント情報や入力データはYAMLファイルなどに書き出しておく</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># conding: utf-8</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;selenium-webdriver&quot;</span>
</span><span class='line'><span class="c1"># その他必要に応じてrequire</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1"># Selenium::WebDriver::Element の拡張</span>
</span><span class='line'><span class="k">module</span> <span class="nn">Elementextension</span>
</span><span class='line'>  <span class="c1"># 上記モンキーパッチの章を参照</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">using</span> <span class="no">Elementextension</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1"># 本体</span>
</span><span class='line'><span class="k">class</span> <span class="nc">SomeSite</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span>
</span><span class='line'>    <span class="c1"># 初期化処理</span>
</span><span class='line'>    <span class="c1"># 定数をセットしたり、webdriverを生成してアクセスしたり。</span>
</span><span class='line'>    <span class="vi">@ss_dir</span>  <span class="o">=</span> <span class="s2">&quot;./screenshot/&quot;</span>
</span><span class='line'>    <span class="no">FileUtils</span><span class="o">.</span><span class="n">mkdir_p</span><span class="p">(</span><span class="vi">@ss_dir</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="vi">@driver</span>  <span class="o">=</span> <span class="ss">Selenium</span><span class="p">:</span><span class="ss">:WebDriver</span><span class="o">.</span><span class="n">for</span> <span class="ss">:firefox</span>
</span><span class='line'>    <span class="n">base_url</span> <span class="o">=</span> <span class="s2">&quot;http://somesite.com&quot;</span>
</span><span class='line'>    <span class="vi">@driver</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">base_url</span> <span class="o">+</span> <span class="s2">&quot;/index.html&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">sign_in</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">password</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># サインイン処理</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">do_something</span>
</span><span class='line'>    <span class="c1"># やりたいことを書く</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">close</span>
</span><span class='line'>    <span class="c1"># 終了時に実行する処理を書く</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>  <span class="c1"># privat method を定義する</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">get_screenshot</span><span class="p">(</span><span class="n">str</span><span class="p">)</span>
</span><span class='line'>    <span class="n">now</span> <span class="o">=</span> <span class="no">DateTime</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s2">&quot;%Y%m%d%H%M%S&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@driver</span><span class="o">.</span><span class="n">save_screenshot</span><span class="p">(</span><span class="vi">@ss_dir</span> <span class="o">+</span> <span class="s2">&quot;_&quot;</span> <span class="o">+</span> <span class="n">str</span> <span class="o">+</span> <span class="s2">&quot;_&quot;</span> <span class="o">+</span> <span class="n">now</span> <span class="o">+</span> <span class="s2">&quot;.png&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1"># ----------------------------------------------------------------------</span>
</span><span class='line'><span class="c1"># main</span>
</span><span class='line'><span class="c1"># ----------------------------------------------------------------------</span>
</span><span class='line'><span class="k">if</span> <span class="bp">__FILE__</span> <span class="o">==</span> <span class="vg">$0</span>
</span><span class='line'>  <span class="c1"># サインインに必要なアカウント情報はYAMLなどに書いておいて、それを読む</span>
</span><span class='line'>  <span class="n">y</span>        <span class="o">=</span> <span class="no">YAML</span><span class="o">.</span><span class="n">load_file</span><span class="p">(</span><span class="s2">&quot;/path/to/yaml.yml&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">user</span>     <span class="o">=</span>  <span class="n">y</span><span class="o">[</span><span class="s2">&quot;account&quot;</span><span class="o">][</span><span class="s2">&quot;user&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="n">password</span> <span class="o">=</span>  <span class="n">y</span><span class="o">[</span><span class="s2">&quot;account&quot;</span><span class="o">][</span><span class="s2">&quot;password&quot;</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">hoge</span> <span class="o">=</span> <span class="no">SomeSite</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>  <span class="n">hoge</span><span class="o">.</span><span class="n">sign_in</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">password</span><span class="p">)</span>
</span><span class='line'>  <span class="n">hoge</span><span class="o">.</span><span class="n">do_something</span>
</span><span class='line'>  <span class="n">hoge</span><span class="o">.</span><span class="n">close</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>関連</h2>

<ul>
<li><a href="http://momota.github.io/blog/2016/02/26/selenium/">ブラウザ操作の自動化: Selenium と Ruby</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ブラウザ操作の自動化: selenium と ruby]]></title>
    <link href="http://momota.github.io/blog/2016/02/26/selenium/"/>
    <updated>2016-02-26T10:41:00+09:00</updated>
    <id>http://momota.github.io/blog/2016/02/26/selenium</id>
    <content type="html"><![CDATA[<p>selenium と ruby を使ってブラウザ GUI 操作を自動化する。</p>

<p><a href="http://www.seleniumhq.org/">selenium</a> は、Web アプリケーションの自動テストのためのツール。
レグレッションテストによく使われているようだ。</p>

<p>selenium は、ブラウザ操作シナリオを事前に設定して、シナリオ通りに実行してくれる。
シナリオ設定といっても、Firefoxプラグインの Selenium IDE などを使うと操作を
記録してくれる機能があるのでそこまで大変ではない。
詳細は、<a href="http://www.ruby.or.jp/ja/tech/development_tool/reg_test/">Ruby アソシエーション &ndash; selenium</a> の &ldquo;1.2 テストの作成&rdquo;
あたりを参照してほしい</p>

<p>selenium は、クロスブラウザのツールで、IE を使って IE限定みたいなサイトでも使える。
IE や Chrome で使うには各 Selenium WebDriver が必要となる。</p>

<p>テスト用と言いつつ、使い道はいろいろとある。</p>

<ul>
<li>社内のもろもろの web 申請は、入力項目が多いのに、毎回ほぼ同じ内容を入力させるので
フォーム入力の省力化として利用している。</li>
<li>hp さんの iLO や日立さんストレージ、F5 さんのBIG-IP みたいな web 画面から設定変更するような機器の
自動構築なんかもできそう。

<ul>
<li>スクリーンショットも撮れるので、エビデンスもついでに取得可能。</li>
<li>vCenter とかも操作できないかという思惑はある。</li>
<li>AWS とかも操作できるけど、そもそも API が豊富に備わっているから不要か。</li>
</ul>
</li>
<li>あえて selenium を使わなくてもいいけど、クローリングやスクレイピングとかもできる</li>
</ul>


<p>この selenium は、Java や Python, Ruby などのプログラミング言語からシナリオ操作が可能で
ループ処理などするにはめちゃくちゃ便利。</p>

<p>いままでは Firefox プラグインだけで利用していたが、Ruby と絡めると便利すぎて感謝しかなかった。
ここでは、サンプルとして、はてなブックマークのホットエントリトップ5を一括で開くことを
やってみたい。</p>

<p>ちなみに似たツールに iMacro がある。</p>

<p>関連記事: <a href="http://momota.github.io/blog/2016/05/28/selenium-know-how/">seleniumノウハウ</a></p>

<!-- more -->


<p>環境は、以下。</p>

<table>
<thead>
<tr>
<th>モノ         </th>
<th> バージョン</th>
</tr>
</thead>
<tbody>
<tr>
<td>OS           </td>
<td> Windows 8.1 Pro</td>
</tr>
<tr>
<td>ブラウザ     </td>
<td> Firefox ESR 38.6.1</td>
</tr>
<tr>
<td>Selenium IDE </td>
<td> 2.9.0</td>
</tr>
<tr>
<td>Ruby         </td>
<td> 2.2.4p230 (2015-12-16 revision 53155) [x64-mingw32]</td>
</tr>
<tr>
<td>gem          </td>
<td> selenium-webdriver (2.52.0)</td>
</tr>
</tbody>
</table>


<h1>準備</h1>

<p>Windows に Rubyをインストールする。</p>

<p><a href="http://rubyinstaller.org/downloads/">RubyInstaller</a> の RubyInstallers からインストーラをダウンロードし、実行する。
インストール時、 PATH を通すチェックボックスにチェックを入れる。</p>

<p>続いてDevelopment Kitをインストールする。<a href="http://www.rubylife.jp/railsinstall/rails/index4.html">この辺を参考に。</a>
これも RubyInstaller の Development Kit からダウンロードして、解凍する。
解答したファイルに <code>dk.rb</code> があるのでコマンドプロンプトから以下のように実行する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>&gt; <span class="nb">cd</span> <span class="o">{</span>DEVELOPMENT KIT の解凍ディレクトリ<span class="o">}</span>
</span><span class='line'>&gt; ruby dk.rb init
</span><span class='line'>&gt; ruby dk.rb install
</span></code></pre></td></tr></table></div></figure>


<p>次に、<code>selenium-webdriver</code> をインストールする。
Ruby をインストールしたことで、一緒に gem も使えるようになっているはずなので、
コマンドプロンプトから以下を打鍵。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>&gt; gem install selenium-webdriver
</span></code></pre></td></tr></table></div></figure>


<p>インストールの確認。irb (もしくは pry) とかで require できることを確認する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>&gt;irb
</span><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:001:0&gt; require <span class="s2">&quot;selenium-webdriver&quot;</span>
</span><span class='line'><span class="o">=</span>&gt; <span class="nb">true</span>
</span></code></pre></td></tr></table></div></figure>


<h1>はてなホットエントリのトップ5エントリーを開く</h1>

<p>ここではサンプルとして、はてなブックマークのホットエントリからトップ5 をブラウザで
次々に開くよう <code>hatena.rb</code> を書く。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s2">&quot;selenium-webdriver&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Hatena</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span>
</span><span class='line'>    <span class="c1"># ブラウザの起動</span>
</span><span class='line'>    <span class="vi">@driver</span> <span class="o">=</span> <span class="ss">Selenium</span><span class="p">:</span><span class="ss">:WebDriver</span><span class="o">.</span><span class="n">for</span> <span class="ss">:firefox</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># ベース URL</span>
</span><span class='line'>    <span class="vi">@base_url</span> <span class="o">=</span> <span class="s2">&quot;http://b.hatena.ne.jp&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">open_top5</span>
</span><span class='line'>    <span class="c1"># ベースURL を開く</span>
</span><span class='line'>    <span class="vi">@driver</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="vi">@base_url</span> <span class="o">+</span> <span class="s2">&quot;/hotentry&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># CSS セレクタで要素を特定してクリックする</span>
</span><span class='line'>    <span class="mi">5</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>      <span class="vi">@driver</span><span class="o">.</span><span class="n">find_element</span><span class="p">(</span><span class="ss">:css</span><span class="p">,</span> <span class="s2">&quot;a[data-entryrank=&#39;</span><span class="si">#{</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="si">}</span><span class="s2">&#39;]&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">click</span>
</span><span class='line'>      <span class="nb">sleep</span> <span class="mi">1</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="bp">__FILE__</span> <span class="o">==</span> <span class="vg">$0</span>
</span><span class='line'>  <span class="n">hatena</span> <span class="o">=</span> <span class="no">Hatena</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>  <span class="n">hatena</span><span class="o">.</span><span class="n">open_top5</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>コマンドプロンプトからこのスクリプトを実行すると次々とブラウザが起動してくる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>&gt; ruby hatena.rb
</span></code></pre></td></tr></table></div></figure>


<p>こんな感じ。</p>

<p><img src="http://momota.github.io/images/20160226_selenium.gif" alt="hatena_screenshot" /></p>

<p><code>find_element</code> メソッドは、CSSセレクタやxpath、タグ名、タグのID、class名などを指定できる。</p>

<p>フォームになにか値を突っ込みたいときは、<code>@driver.find_element(~~~~~).send_keys "VALUE"</code> みたいな感じで
要素を特定したあと、<code>send_keys</code> で文字列を渡してあげればよい。
POST は、ボタンを find_element してあげて<code>.click</code> (<code>.submit</code> でも良さ気) でOK。</p>

<p>スクリーンショットを撮るときは、<code>@driver.save_screenshot "./screenshot.png"</code> みたいな感じ。</p>

<h1>参考</h1>

<ul>
<li><a href="http://www.ruby.or.jp/ja/tech/development_tool/reg_test/">Ruby アソシエーション &ndash; selenium</a></li>
<li><a href="http://qiita.com/kkakizaki/items/5a0e6f753193f2a1514f">Selenium 入門 &ndash; Qiita</a></li>
<li>関連記事: <a href="http://momota.github.io/blog/2016/05/28/selenium-know-how/">seleniumノウハウ</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ansible でノートPCをセットアップ]]></title>
    <link href="http://momota.github.io/blog/2016/02/08/ansible/"/>
    <updated>2016-02-08T09:42:00+09:00</updated>
    <id>http://momota.github.io/blog/2016/02/08/ansible</id>
    <content type="html"><![CDATA[<p><a href="http://momota.github.io/blog/2015/11/15/centos-install/">CentOS 7 を USB メモリからインストール</a> で書いたが、まっさらなCentOSが手元にあったので
<a href="http://www.ansible.com/">ansible</a> を使っていろいろインストールしてみた。</p>

<p>ちょっと前に、<a href="http://www.ansible.com/blog/ansible-2.0-launch">Ansible 2.0 Has Arrived</a> という記事も話題になってたし。</p>

<p>ansible は Chef のような構成管理ツール。
システムの設定や、ソフトウェアのデプロイ、オーケストレーションなどが可能なIT自動化ツール。
管理対象ノードが多いほどメリットが大きい。</p>

<p>Chef と比較すると、エージェントレスのアーキテクチャで、Chefのように特定言語(Ruby)を学ぶ必要はなく、YAMLで構成を表現する。
これは、Playbookと呼ばれる。Chef でいうレシピ。</p>

<p>マネージャ側は最近は大抵プリインストールされている python とansible さえインストールすればよい。
クライアント側は、マネージャから SSH アクセスさえできればよい。</p>

<p>これを1回やってファイル群をリポジトリで管理しておけば、環境の複製が楽になるし、Infrastructure as a Code ですね。</p>

<!-- more -->


<p>まず、環境の説明。</p>

<p><img src="http://momota.github.io/images/ansible.png" alt="ansible_diag" /></p>

<p>本稿では、ansible実行サーバをコントローラ (Control Machine)、ansibleによる
管理対象ノードを管理ノード (Managed Node) と呼ぶことにする。</p>

<table>
<thead>
<tr>
<th>役割                           </th>
<th> ホスト名     </th>
<th> 物理マシン     </th>
<th> IPアドレス</th>
</tr>
</thead>
<tbody>
<tr>
<td>コントローラ (Control Machine) </td>
<td> controller   </td>
<td> mac mini       </td>
<td> 192.168.11.9/24</td>
</tr>
<tr>
<td>管理ノード   (Managed Node)    </td>
<td> managed_node </td>
<td> TOSHIBA laptop </td>
<td> 192.168.11.14/24</td>
</tr>
</tbody>
</table>


<p>ansible のバージョンは <code>2.0.0.2</code>。</p>

<h1>0. 準備</h1>

<h2>0-1. コントローラ</h2>

<ol>
<li>ansible をインストールする</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>controller<span class="nv">$ </span>brew install ansible
</span></code></pre></td></tr></table></div></figure>


<h2>0-2. 管理ノード</h2>

<p>コントローラ～管理ノード間は、ネットワークを介して管理される。
コントローラから管理ノードへSSHアクセスできる必要があるので、以下の設定を事前に行っておく。</p>

<ol>
<li>管理ノードのネットワーク設定</li>
<li>コントローラのSSH公開鍵の登録</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># コントローラ側no-pass SSH key を生成</span>
</span><span class='line'>controller<span class="nv">$ </span>ssh-keygen -t rsa
</span><span class='line'><span class="c"># mac には ssh-copy-id がないので、scpで公開鍵をコピー</span>
</span><span class='line'>controller<span class="nv">$ </span>scp ~/.ssh/id_dsa.pub 192.168.11.14:/home/momota
</span><span class='line'>
</span><span class='line'><span class="c"># 管理ノード側でauthorized_keysの登録</span>
</span><span class='line'>managed_node<span class="nv">$ </span>mkdir ~/.ssh
</span><span class='line'>managed_node<span class="nv">$ </span>chmod 700 ~/.ssh
</span><span class='line'>managed_node<span class="nv">$ </span>cat id_dsa.pub &gt;&gt; ~/.ssh/authorized_keys
</span><span class='line'>managed_node<span class="nv">$ </span>chmod 600 ~/.ssh/authorized_keys
</span><span class='line'>
</span><span class='line'><span class="c"># SSH アクセス確認</span>
</span><span class='line'>controller<span class="nv">$ </span>ssh 192.168.11.14
</span></code></pre></td></tr></table></div></figure>


<h1>1. ansible 設定</h1>

<p>まずは、管理ノードへOSアカウント (guestユーザ) を追加作成してみる。</p>

<p>ディレクトリ構成は、<a href="http://qiita.com/yteraoka/items/5ed2bddefff32e1b9faf">Ansible オレオレベストプラクティス</a> を参考にして以下のように作成。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>controller<span class="nv">$ </span>tree laptop_build
</span><span class='line'>laptop_build
</span><span class='line'>|-- centos
</span><span class='line'>|   |-- hosts
</span><span class='line'>|   <span class="sb">`</span>-- site.yml
</span><span class='line'>|-- common
</span><span class='line'>|   |-- guest_account
</span><span class='line'>|   |   <span class="sb">`</span>-- tasks
</span><span class='line'>|   |       <span class="sb">`</span>-- main.yml
</span><span class='line'>|-- private_vars
</span><span class='line'>|   <span class="sb">`</span>-- common.yml
</span><span class='line'><span class="sb">`</span>-- vars
</span><span class='line'>    <span class="sb">`</span>-- common.yml
</span></code></pre></td></tr></table></div></figure>


<p>それぞれのディレクトリの位置づけは、<a href="http://yteraoka.github.io/ansible-tutorial/">Ansibleチュートリアル</a>とかを参照するとわかりやすい。</p>

<p>まずは、<code>centos/hosts</code> へ管理ノードのIPアドレスを登録する。
クライアントが複数ある場合は、このエントリーで複数のアドレスを列挙すればよい。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="p-Indicator">[</span><span class="nv">laptops</span><span class="p-Indicator">]</span>
</span><span class='line'><span class="l-Scalar-Plain">192.168.11.14</span>
</span></code></pre></td></tr></table></div></figure>


<p>次に、メイン処理を <code>centos/site.yml</code> に記述する。
外部ファイルをインクルードして、roleの実行順序を指定するだけ。
<code>hosts</code> のところで、対象を絞れるが、今回は all。うまく使えば、production用とdevelopment用を使い分けたりグループ単位で実行できる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">hosts</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">all</span>
</span><span class='line'>  <span class="l-Scalar-Plain">vars_files</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">../vars/common.yml</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">../private_vars/common.yml</span>
</span><span class='line'>  <span class="l-Scalar-Plain">roles</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">../common/guest_account</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>vars/common.yml</code> には Playbook 共通で使いたい変数を設定している。</p>

<p><code>private_vars/common.yml</code> には公開したくない変数を設定している。ここでは、guestユーザのパスワードを以下のように指定している。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="nn">---</span>
</span><span class='line'><span class="l-Scalar-Plain">guest_password</span><span class="p-Indicator">:</span> <span class="s">&quot;hogehoge&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>こういうパスワードみたいな情報をgithubに上げたくないので、.gitignoreには
private_vars/ を追加しておく。</p>

<p><code>roles</code> には、実際のアカウント追加処理を指定している role ディレクトリ<code>common/guest_account</code>を指定する。</p>

<p><code>common/guest_account/tasks/main.yml</code> には、userモジュールを使って、以下のようにタスクを記述する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="nn">---</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">add the user &quot;guest&quot;</span>
</span><span class='line'>  <span class="l-Scalar-Plain">user</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">name=guest shell=/bin/bash password=</span>
</span><span class='line'>  <span class="l-Scalar-Plain">become</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">yes</span>
</span><span class='line'>  <span class="l-Scalar-Plain">become_method</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">sudo</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>name</code> は任意。タスク内容をコメントとして記述する。</p>

<p><code>user</code> がモジュール名、それに続いて各モジュールのオプション。</p>

<p><code>become</code>, <code>become_method</code> で管理ノードで sudo を使って実行することを許可している。</p>

<h1>2. ansible 実行</h1>

<p>クライアント側で事前にユーザの確認。
guest ユーザは存在しない。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>managed_node<span class="nv">$ </span>grep guest /etc/passwd
</span></code></pre></td></tr></table></div></figure>


<p>まずは、<code>--check</code> オプションを付けてテスト実行(dry run)。実際の構成変更はせず、
Playbook のシンタックスチェックなどを実施する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>controller<span class="nv">$ </span>ansible-playbook -i centos/hosts centos/site.yml -K --check
</span><span class='line'>SUDO password:
</span><span class='line'>
</span><span class='line'>PLAY ***************************************************************************
</span><span class='line'>
</span><span class='line'>TASK <span class="o">[</span>setup<span class="o">]</span> *******************************************************************
</span><span class='line'>ok: <span class="o">[</span>192.168.11.14<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>TASK <span class="o">[</span>../common/guest_account : add the user <span class="s2">&quot;guest&quot;</span><span class="o">]</span> **************************
</span><span class='line'>changed: <span class="o">[</span>192.168.11.14<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>PLAY RECAP *********************************************************************
</span><span class='line'>192.168.11.14              : <span class="nv">ok</span><span class="o">=</span>1    <span class="nv">changed</span><span class="o">=</span>1    <span class="nv">unreachable</span><span class="o">=</span>0    <span class="nv">failed</span><span class="o">=</span>0
</span></code></pre></td></tr></table></div></figure>


<p>問題ないようなので実行してみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>controller<span class="nv">$ </span>ansible-playbook -i centos/hosts centos/site.yml -K
</span><span class='line'>SUDO password:
</span><span class='line'>
</span><span class='line'>PLAY ***************************************************************************
</span><span class='line'>
</span><span class='line'>TASK <span class="o">[</span>setup<span class="o">]</span> *******************************************************************
</span><span class='line'>ok: <span class="o">[</span>192.168.11.14<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>TASK <span class="o">[</span>../common/guest_account : add the user <span class="s2">&quot;guest&quot;</span><span class="o">]</span> **************************
</span><span class='line'>changed: <span class="o">[</span>192.168.11.14<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>PLAY RECAP *********************************************************************
</span><span class='line'>192.168.11.14              : <span class="nv">ok</span><span class="o">=</span>2    <span class="nv">changed</span><span class="o">=</span>2    <span class="nv">unreachable</span><span class="o">=</span>0    <span class="nv">failed</span><span class="o">=</span>0
</span></code></pre></td></tr></table></div></figure>


<p>クライアント側で事後確認してみると、ユーザができている。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>managed_node<span class="nv">$ </span>grep guest /etc/passwd
</span><span class='line'>guest:x:1001:1001::/home/guest:/bin/bash
</span></code></pre></td></tr></table></div></figure>


<h1>3. 他にもいろいろとインストールする</h1>

<p>ruby や zsh などもインストールする。
インストール対象のプロダクト毎に role を作っている。</p>

<p>role の粒度がいまいちどれくらいにしたらよいのかが分からない。</p>

<p>たとえば、ruby role には ruby のインストールだけにとどめておくべきか、
rbenv のような関連ツールまで 1 セットで記述するのが良いか。</p>

<p>まあ、使いながらやりやすい粒度を模索する、でも良いと思う。</p>

<p>また、OS 毎の差異を吸収するため、<code>common/role/HOGE/tasks/</code> 以下に <code>main.yml</code>を置いて、
それぞれのOS毎のymlをインクルードした。
ただ、<code>centos/</code>的な大本からディレクトリを分けて、<code>main.yml</code>でOS判定と
条件分岐しないような配置でも良かったかもなとも思っている。</p>

<p>以下のようなディレクトリ構成となった。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>controller<span class="nv">$ </span>tree laptop_build
</span><span class='line'>laptop_build
</span><span class='line'>|-- centos
</span><span class='line'>|   |-- hosts
</span><span class='line'>|   <span class="sb">`</span>-- site.yml
</span><span class='line'>|-- common
</span><span class='line'>|   |-- dotfiles
</span><span class='line'>|   |   |-- meta
</span><span class='line'>|   |   |   <span class="sb">`</span>-- main.yml
</span><span class='line'>|   |   <span class="sb">`</span>-- tasks
</span><span class='line'>|   |       <span class="sb">`</span>-- main.yml
</span><span class='line'>|   |-- guest_account
</span><span class='line'>|   |   <span class="sb">`</span>-- tasks
</span><span class='line'>|   |       <span class="sb">`</span>-- main.yml
</span><span class='line'>|   |-- ruby
</span><span class='line'>|   |   |-- meta
</span><span class='line'>|   |   |   <span class="sb">`</span>-- main.yml
</span><span class='line'>|   |   <span class="sb">`</span>-- tasks
</span><span class='line'>|   |       <span class="sb">`</span>-- main.yml
</span><span class='line'>|   |-- tmux
</span><span class='line'>|   |   <span class="sb">`</span>-- tasks
</span><span class='line'>|   |       |-- centos.yml
</span><span class='line'>|   |       |-- main.yml
</span><span class='line'>|   |       <span class="sb">`</span>-- ubuntu.yml
</span><span class='line'>|   |-- vim
</span><span class='line'>|   |   <span class="sb">`</span>-- tasks
</span><span class='line'>|   |       <span class="sb">`</span>-- main.yml
</span><span class='line'>|   <span class="sb">`</span>-- zsh
</span><span class='line'>|       <span class="sb">`</span>-- tasks
</span><span class='line'>|           |-- centos.yml
</span><span class='line'>|           |-- main.yml
</span><span class='line'>|           <span class="sb">`</span>-- ubuntu.yml
</span><span class='line'>|-- private_vars
</span><span class='line'>|   <span class="sb">`</span>-- common.yml
</span><span class='line'><span class="sb">`</span>-- vars
</span><span class='line'>    <span class="sb">`</span>-- common.yml
</span></code></pre></td></tr></table></div></figure>


<p>公式ドキュメントを見つつ、yum や git モジュールを利用した。</p>

<p>中身の説明は、体力が切れたので割愛。
詳細は、<a href="https://github.com/momota/laptop-build">momota/laptop-build</a> を参照。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[複数の環境で octopress を使ってブログを書く]]></title>
    <link href="http://momota.github.io/blog/2016/01/29/octopress/"/>
    <updated>2016-01-29T19:03:00+09:00</updated>
    <id>http://momota.github.io/blog/2016/01/29/octopress</id>
    <content type="html"><![CDATA[<p>最近、自宅の Mac Mini が重くなってきたので、別環境でブログを書くべく環境を整備した。
5年目選手くらいなので、そろそろ買い換えたいな…</p>

<p>結論としては、以下を参考にやればOK。deploy のとこでちょいハマりしたのでメモ。</p>

<ul>
<li><a href="http://blog.zerosharp.com/clone-your-octopress-to-blog-from-two-places/">Clone your Octopess to blog From Two Places</a></li>
</ul>


<!-- more -->


<h2>1. 新しいマシンで git cloneする</h2>

<p>octopress のレポジトリは、<code>source</code> と <code>master</code> の 2 つのブランチがある。</p>

<p><code>source</code> はその名の通り、編集する markdown ファイルや scss ファイルなどを管
理するブランチ。</p>

<p><code>master</code> は、公開用のHTMLファイルなどを管理するブランチ。<code>rake generate</code> で
生成されるファイル群を管理するブランチ。</p>

<p>まずは、任意の場所で <code>source</code> ブランチをクローンする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git clone -b <span class="nb">source </span>https://github.com/YOU/YOU.github.io.git blog
</span></code></pre></td></tr></table></div></figure>


<p>次に、<code>master</code> ブランチを <code>_deploy</code> というディレクトリ名でクローンする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>blog
</span><span class='line'><span class="nv">$ </span>git clone https://github.com/YOU/YOU.github.io.git _deploy
</span></code></pre></td></tr></table></div></figure>


<h2>2. インストールする</h2>

<p>octopress をビルドするため、bundler をインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>gem install bundler
</span></code></pre></td></tr></table></div></figure>


<p>別の環境とシェアするので、 rbenv で ruby バージョンを合わせておく。
シェアしなければ octopress が動くバージョンで <code>.ruby-version</code> を上書けばよいと思う。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rbenv install X.X.X-pXXX
</span><span class='line'><span class="nv">$ </span>rbenv <span class="nb">local </span>X.X.X-pXXX
</span><span class='line'><span class="nv">$ </span>rbenv rehash
</span></code></pre></td></tr></table></div></figure>


<p>ビルドする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle install
</span><span class='line'><span class="nv">$ </span>rake setup_github_pages
</span><span class='line'>Enter the <span class="nb">read</span>/write url <span class="k">for </span>your repository
</span><span class='line'><span class="o">(</span>For example, <span class="err">&#39;</span>git@github.com:your_username/your_username.github.com<span class="o">)</span>:
</span></code></pre></td></tr></table></div></figure>


<p>自分の github pages のやつを入力すればOK。</p>

<h2>3. お試しポストしてみる</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rake new_post<span class="se">\[</span><span class="s1">&#39;test&#39;</span><span class="se">\]</span>
</span><span class='line'><span class="c">#=&gt; source/_post/YYYY-MM-DD-test.markdown が生成される</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span><span class="nb">source</span>/_post/YYYY-MM-DD-test.markdown
</span><span class='line'><span class="c">#=&gt; 記事を編集する</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>rake generate
</span><span class='line'><span class="nv">$ </span>rake preview
</span><span class='line'><span class="c">#=&gt; http://localhost:4000/にアクセスして記事が生成できていることを確認する</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>rake deploy
</span></code></pre></td></tr></table></div></figure>


<p>自分の場合、<code>rake deploy</code> でコケた。
<code>git push</code> するところでコケたようだ。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'> ! <span class="o">[</span>rejected<span class="o">]</span>        master -&gt; master <span class="o">(</span>non-fast-forward<span class="o">)</span>
</span><span class='line'> error: failed to push some refs to <span class="s1">&#39;*******************&#39;</span>
</span><span class='line'> hint: Updates were rejected because the tip of your current branch is behind
</span><span class='line'> hint: its remote counterpart. Merge the remote changes <span class="o">(</span>e.g. <span class="s1">&#39;git pull&#39;</span><span class="o">)</span>
</span><span class='line'> hint: before pushing again.
</span><span class='line'> hint: See the <span class="s1">&#39;Note about fast-forwards&#39;</span> in <span class="s1">&#39;git push --help&#39;</span> <span class="k">for </span>details.
</span></code></pre></td></tr></table></div></figure>


<p>認証プロキシを通してる環境だったので、そのせいかなーと疑ったけどちがった。
単純に <code>master</code> ブランチが conflict してるだけだった。</p>

<p><code>git pull</code> して解決した。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>_deploy
</span><span class='line'><span class="nv">$ </span>git pull origin master
</span><span class='line'><span class="c">#=&gt; master ブランチを pull</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> ../
</span><span class='line'><span class="nv">$ </span>rake deploy
</span></code></pre></td></tr></table></div></figure>


<p>あとは、<code>source</code> のほうもcommitしておく。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git add .
</span><span class='line'><span class="nv">$ </span>git commit -m <span class="s2">&quot;posted&quot;</span>
</span><span class='line'><span class="nv">$ </span>git push origin sorce
</span><span class='line'><span class="c">#=&gt; source ブランチも更新する</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CentOS 7 を USB メモリからインストール]]></title>
    <link href="http://momota.github.io/blog/2015/11/15/centos-install/"/>
    <updated>2015-11-15T21:15:00+09:00</updated>
    <id>http://momota.github.io/blog/2015/11/15/centos-install</id>
    <content type="html"><![CDATA[<p>新しい PC が来たので、もともと使ってた東芝 Dynabook R731/B (windows 7)に CentOS7 をインストールした。
今までは DVD-R に ISO を焼いていたけど、自前の PC の DVD ドライブが壊れていたので
USB メモリを使ってインストールしてみた。</p>

<!-- more -->


<h2>1. USB メモリをフォーマットする</h2>

<p>MAC で USB メモリをフォーマット (初期化) しておく。</p>

<ol>
<li>ディスクユーティリティを起動する (アプリケーション > ディスクユーティリティ)</li>
<li>左側のペインからフォーマットしたいデバイスを選択し、<code>消去</code> タブをクリックする</li>
<li>容量や、ドライブ名などから判断</li>
<li>フォーマット形式は MS-DOS (FAT) を選択し、消去をクリックする</li>
</ol>


<h2>2. インストールイメージをダウンロードする</h2>

<p><a href="https://www.centos.org/download/">CentOS7 の DVD ISO をダウンロードする。</a></p>

<p><a href="http://ftp.jaist.ac.jp/pub/Linux/CentOS/7/isos/x86_64/md5sum.txt">md5 ハッシュもチェックしておく。</a></p>

<p>ダウンロードされた ISO イメージが正しくダウンロードされていることを確認する。(linux だと <code>md5sum</code> コマンド)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ md5 CentOS-7-x86_64-DVD-1503-01.iso | grep 99e450fb1b22d2e528757653fcbf5fdc</span></code></pre></td></tr></table></div></figure>


<h2>3. USB メモリにインストールイメージを書き込む</h2>

<p>USB メモリにインストールイメージを書き込む
ターミナルから<code>.iso</code> を <code>.img</code> へ変換する。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ hdiutil convert -format UDRW -o centos7.img DOWNLOADED_ISO.iso
</span><span class='line'>#=&gt; centos7.img.dmg が出力される
</span><span class='line'>$ mv centos7.img.dmg centos7.img</span></code></pre></td></tr></table></div></figure>


<p>USB メモリをアンマウントする。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># USB メモリがどう認識されているかを確認する (/dev/diskXX)
</span><span class='line'>$ diskutil list
</span><span class='line'># USB メモリをアンマウントする (/dev/disk1の場合)
</span><span class='line'>$ diskutil unMountDisk /dev/disk1
</span><span class='line'>$ diskutil list</span></code></pre></td></tr></table></div></figure>


<p>dd で USB メモリにインストールイメージを書き込む。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo dd if=centos.img of=/dev/disk1 bs=1m
</span><span class='line'>$ echo $?
</span><span class='line'>#=&gt;0</span></code></pre></td></tr></table></div></figure>


<p>書き込みは結構時間がかかる。
完了後、「この Mac では読めない形式だ」的なダイアログが出るが無視。</p>

<p>USB メモリをイジェクトして取り外す。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo diskutil eject /dev/disk1</span></code></pre></td></tr></table></div></figure>


<h2>4. ノート PC にインストールする</h2>

<p>※ USB メモリをノートPC側で使える前提。USBメモリのドライバがインストールされた状態からスタート。</p>

<p>BIOS設定画面から起動デバイスの優先順位を変更する。
USB デバイスを最優先にしておく。</p>

<p>インストールイメージを焼いた USB メモリを刺したままノート PC を起動してみて「CentOSをインストール？それともお試しインストール？」みたいな画面が出てくる。
お試しインストールしてみて、キーボードやタッチパッドが使えることを確認する。
確認ができたら再起動し、インストールする。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[lita で Slack Bot (on heroku) をつくる]]></title>
    <link href="http://momota.github.io/blog/2015/01/11/lita/"/>
    <updated>2015-01-11T21:36:00+09:00</updated>
    <id>http://momota.github.io/blog/2015/01/11/lita</id>
    <content type="html"><![CDATA[<p><img src="https://www.lita.io/assets/lita-94f070fbb79e8ec62cc7a21ca39f8448.png" alt="lita" /></p>

<p>チャットツール <a href="https://slack.com/">slack</a> に常駐する bot をつくったので、そのときの導入メモ。
bot 開発には <a href="https://www.lita.io/">lita</a> を利用した。lita は Ruby で書かれた chat bot フレームワーク。hubot にインスパイアされて開発されたようだ。
js (coffee script) よりも ruby のほうがとっつきやすかったので採用した。</p>

<p>環境は、ubuntu 14.04, ruby 2.1.5, lita 4.0.4.</p>

<p>ゆくゆくは、<a href="http://www.amazon.co.jp/gp/product/B00H91KK26/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B00H91KK26&amp;linkCode=as2&amp;tag=mmtmkt-22">iRKit</a> とか使って家電と連携したりしたい。</p>

<!-- more  -->


<p><img src="http://momota.github.io/images/20150111_lita/lita.png" alt="network" /></p>

<p>今回の構成図を上記に示す。</p>

<h2>1. 事前準備: もろもろインストールする</h2>

<h3>1.1 lita をインストール</h3>

<p>lita は gem でインストールできる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>gem install lita
</span></code></pre></td></tr></table></div></figure>


<h3>1.2 redis をインストール</h3>

<p>lita はデータ永続化ストレージとして redis を使うことが前提となっている。
つまり、ローカル環境で lita を実行するには(開発するには)、redis が必要なため、redis をインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo apt-get update
</span><span class='line'><span class="nv">$ </span>sudo apt-get install redis-server
</span></code></pre></td></tr></table></div></figure>


<p>redis を起動する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo service redis-server start
</span><span class='line'><span class="nv">$ </span>sudo service redis-server status
</span><span class='line'><span class="c">#=&gt; redis の起動状態確認</span>
</span><span class='line'><span class="c">#=&gt; ps aux | grep redis とかで確認してもいい</span>
</span></code></pre></td></tr></table></div></figure>


<h2>2. lita プロジェクト作成、起動</h2>

<p>lita プロジェクト&#8221;sample&#8221;を作成する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>lita new sample
</span><span class='line'><span class="c">#=&gt; sample ディレクトリが生成される</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>sample
</span></code></pre></td></tr></table></div></figure>


<p>ruby のバージョンを rbenv で指定しておく。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rbenv <span class="nb">local </span>2.1.5
</span><span class='line'><span class="nv">$ </span>rbenv rehash
</span><span class='line'><span class="nv">$ </span>ruby -v
</span></code></pre></td></tr></table></div></figure>


<p>bundler でインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle install --path vendor/bundle
</span></code></pre></td></tr></table></div></figure>


<p><code>lita start</code> で lita をローカル環境で起動してみる。
<code>lita help</code> で返ってくればOK。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>lita start
</span><span class='line'>Type <span class="s2">&quot;exit&quot;</span> or <span class="s2">&quot;quit&quot;</span> to end the session.
</span><span class='line'>Lita &gt; lita info
</span><span class='line'>Lita 4.0.4 - https://www.lita.io/
</span><span class='line'>Redis 2.8.4 - Memory used: 414.04K
</span><span class='line'>Lita &gt; lita <span class="nb">help</span>
</span><span class='line'>Lita: <span class="nb">help</span> - Lists <span class="nb">help </span>information <span class="k">for </span>terms and <span class="nb">command </span>the robot will respond to.
</span><span class='line'>Lita: <span class="nb">help </span>COMMAND - Lists <span class="nb">help </span>information <span class="k">for </span>terms or commands that begin with COMMAND.
</span><span class='line'>Lita: info - Replies with the current version of Lita.
</span><span class='line'>Lita &gt; <span class="nb">exit</span>
</span><span class='line'><span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://www.lita.io/plugins">lita プラグイン</a> もたくさんあるので、適当に <code>Gemfile</code> に追加して <code>bundle install</code> するとよい。</p>

<h2>3. herokuへデプロイして Slack と連携する</h2>

<p>lita bot を heroku へデプロイする。
また、アダプタ <a href="https://github.com/kenjij/lita-slack">lita-slack</a> を利用して Slack と連携する。</p>

<h3>3.1 事前準備</h3>

<p>heroku へのデプロイは、git push して行うので、git でバージョン管理を開始する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git init
</span><span class='line'><span class="nv">$ </span>git add .
</span><span class='line'><span class="nv">$ </span>git commit -m <span class="s2">&quot;first commit&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>heroku で ruby バージョンを指定するには、<code>Gemfile</code>で<code>ruby "VERSION"</code>と記述する。
また、Slack と連携するため、<code>lita-slack</code> アダプタもインストールする。
この時点で、<code>Gemfile</code>は以下の通り。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">source</span> <span class="s2">&quot;https://rubygems.org&quot;</span>
</span><span class='line'><span class="n">ruby</span> <span class="s2">&quot;2.1.5&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">gem</span> <span class="s2">&quot;lita&quot;</span>
</span><span class='line'><span class="n">gem</span> <span class="s2">&quot;lita-slack&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>bundler でインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle install --path vendor/bundle
</span></code></pre></td></tr></table></div></figure>


<p>slack とつなげたり、Redis To Go を利用するために、<code>lita_config.rb</code> を以下のように修正する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Lita</span><span class="o">.</span><span class="n">configure</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">robot</span><span class="o">.</span><span class="n">name</span>      <span class="o">=</span> <span class="s2">&quot;lita&quot;</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">robot</span><span class="o">.</span><span class="n">log_level</span> <span class="o">=</span> <span class="ss">:info</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># アダプタの指定。Slack とつなげるので、:slack と修正する</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">robot</span><span class="o">.</span><span class="n">adapter</span>   <span class="o">=</span> <span class="ss">:slack</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># Slack のAPIキーを指定する</span>
</span><span class='line'>  <span class="c1"># 後述する heoku コマンドで heroku の環境変数を設定する</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">adapters</span><span class="o">.</span><span class="n">slack</span><span class="o">.</span><span class="n">token</span> <span class="o">=</span> <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;SLACK_API_KEY&quot;</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># heroku の redis アドオン Redis To Go 関連の設定</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">redis</span><span class="o">[</span><span class="ss">:url</span><span class="o">]</span> <span class="o">=</span> <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;REDISTOGO_URL&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">http</span><span class="o">.</span><span class="n">port</span>   <span class="o">=</span> <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;PORT&quot;</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>heroku でのアプリケーション起動には foreman でのアプリケーション起動が必要となる。
以下の <code>Procfile</code> を作成する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">web</span><span class="p">:</span> <span class="n">bundle</span> <span class="nb">exec</span> <span class="n">lita</span>
</span></code></pre></td></tr></table></div></figure>


<h3>3.2 heroku の設定</h3>

<p>新規に heroku アプリケーションを作成する。
ここでは、<code>lita-sample</code> という名前にした。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>heroku apps:create lita-sample
</span></code></pre></td></tr></table></div></figure>


<p>heroku の redis アドオン Redis To Go をアプリケーションへ追加する。
事前に heroku へクレジットカードの登録が必要。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>heroku addons:add redistogo --app lita-sample
</span></code></pre></td></tr></table></div></figure>


<p>heroku の環境変数を設定する。
設定するのは、Slack APIキーのみでOK。
Slack API キーは、<a href="https://YOUR-DOMAIN.slack.com/services/new/lita">https://YOUR-DOMAIN.slack.com/services/new/lita</a> から Integration の設定をしたら入手可能。</p>

<p><code>REDISTOGO_URL</code> などは、アドオン追加時に自動で設定されている。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>heroku config:set <span class="nv">SLACK_API_KEY</span><span class="o">=</span><span class="s2">&quot;your-slack-api-key&quot;</span>
</span><span class='line'><span class="nv">$ </span>heroku config
</span><span class='line'><span class="c">#=&gt; heroku 上で設定されている環境変数が出力されるので正しく設定されているか確認する</span>
</span></code></pre></td></tr></table></div></figure>


<h3>3.3 heroku へデプロイする</h3>

<p>git commit して git push してあげる。
そうすると heoku アプリケーションが起動する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git commit -m <span class="s2">&quot;make it better&quot;</span>
</span><span class='line'><span class="nv">$ </span>git push heroku master
</span></code></pre></td></tr></table></div></figure>


<p>Slack に lita さんが見えるはずなので 適当なチャンネルに招待して <code>@lita help</code> とか声をかけると答えてくれる。</p>

<h3>3.4 heroku アプリケーションをたたき起こす</h3>

<p>heroku を無料で使う 1 web dyno (webサーバインスタンス) のときは、1時間アクセスがないとアプリケーションがスリープする。つまり、せっかくデプロイした bot も眠ってしまうため、定期的にhttpアクセスさせてたたき起こしておく。
なお、<code>lita-cron</code> で bot に定期的に投稿させてもだめだったので、heroku アプリケーションへの http アクセスが必要なもよう。</p>

<p>定期的な http アクセスには <a href="http://uptimerobot.com/">Uptime Robot</a> を利用した。</p>

<h2>4. handler 作成</h2>

<p>以下のように handler のひな形を生成する。
<code>lita-</code> というプレフィックスが自動で付与される。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>mkdir handlers
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>handlers
</span><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>lita hello_handler
</span><span class='line'><span class="c">#=&gt; lita-hello_handler ディレクトリが生成される</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>handlers/lita-hello_handler/lib/lita/handlers/hello_hundler.rb</code> を修正する。
<code>route</code> で正規表現にマッチした場合の処理へルーティングする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Lita</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">Handlers</span>
</span><span class='line'>    <span class="k">class</span> <span class="nc">HelloHandler</span> <span class="o">&lt;</span> <span class="no">Handler</span>
</span><span class='line'>      <span class="n">route</span> <span class="sr">/^java\s+(.+)/</span><span class="p">,</span> <span class="ss">:with_java</span><span class="p">,</span> <span class="ss">help</span><span class="p">:</span> <span class="p">{</span> <span class="s2">&quot;java TEXT&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;reply back with java.&quot;</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">def</span> <span class="nf">with_java</span><span class="p">(</span> <span class="n">response</span> <span class="p">)</span>
</span><span class='line'>        <span class="n">word</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="n">matches</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'>        <span class="n">response</span><span class="o">.</span><span class="n">reply</span><span class="p">(</span><span class="s2">&quot;!!! </span><span class="si">#{</span><span class="n">word</span><span class="si">}</span><span class="s2"> とジャバ !!!&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="no">Lita</span><span class="o">.</span><span class="n">register_handler</span><span class="p">(</span><span class="no">HelloHandler</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>Gemfile</code> に以下を追記し、 <code>bundle install</code> する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s2">&quot;lita-hello_handler&quot;</span><span class="p">,</span> <span class="ss">path</span><span class="p">:</span> <span class="s2">&quot;handlers/lita-hello_handler&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>commit して再度 heroku へ push してデプロイする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git commit -a -m <span class="s2">&quot;make it better&quot;</span>
</span><span class='line'><span class="nv">$ </span>git push heroku master
</span></code></pre></td></tr></table></div></figure>


<p>slack 上で <code>@lita java あなた</code> とかつぶやくとサイコーにジャバな気分になる。</p>

<p><img src="http://momota.github.io/images/20150111_lita/slack_lita.png" alt="lita java" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[初めてのteraterm macro]]></title>
    <link href="http://momota.github.io/blog/2014/05/20/teraterm-macro/"/>
    <updated>2014-05-20T01:17:00+09:00</updated>
    <id>http://momota.github.io/blog/2014/05/20/teraterm-macro</id>
    <content type="html"><![CDATA[<p>先週末の5/17、teraterm マクロを初めて書いたので記念パピコ。</p>

<p>通信断時間の計測のため、わけあって急遽Cisco ルータ (892J) から継続pingを実行する必要があった。
892J のpingは、リピート回数に上限があるので、上限回数を超えた時に再度pingコマンドを叩く必要があった。
人間がpingの終わりを観察して終わったことを確認して再度実行するのは「ないわーーー」なので初めてのテラタームマクロを書いた。</p>

<!-- more -->


<p>pingが終わったら、打ち直す的な単純な処理だったら、意外と簡単に書けるので好き嫌いせず書いてみるのも悪くないと思った。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'>; <span class="p">----------------------------------------------------------------------</span>
</span><span class='line'>; Cisco ルータのpingリピート回数に上限があるので、上限回数を超えた時に
</span><span class='line'>; 再度pingを実行するマクロ
</span><span class='line'>; 拡張pingを実行するため、enableモードで本マクロを読み込むこと
</span><span class='line'>; <span class="p">----------------------------------------------------------------------</span>
</span><span class='line'>LOOP_LIMIT <span class="p">=</span> <span class="m">1000</span>
</span><span class='line'>
</span><span class='line'>sendln
</span><span class='line'><span class="k">for</span> <span class="k">i</span> <span class="m">1</span> LOOP_LIMIT
</span><span class='line'>  <span class="k">call</span> ping
</span><span class='line'>next
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="p">:</span>ping
</span><span class='line'>  wait <span class="s1">&#39;YOUR-ROUTER#&#39;</span>
</span><span class='line'>  sendln <span class="s1">&#39;ping vrf VR-NAME TARGET-IP repeat 10000 timeout 1&#39;</span>
</span><span class='line'><span class="k">return</span>
</span></code></pre></td></tr></table></div></figure>


<p>linux/unix環境だとshell scriptでやったほうが手っ取り早いけど、ネットワーク機器みたいな特殊な環境だとteraterm macroみたいなのが便利なんだなといまさらながら思った。</p>

<p>意外に楽しくなってきたので、もっと書きたくなってきた。</p>

<p>Juniperの情報取得については、改行区切りの複数のコマンドをコピペで流し込むと出力結果の途中に入力コマンドが入り込んでしまう。プロンプトが返ってくるのを待ってから1行ずつコマンドを実行すれば本事象は回避できるので、そのようなteraterm macroを利用しているが、その中身が自分好みではなかったので書き換えてみた。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'>; <span class="p">----------------------------------------------------------------------</span>
</span><span class='line'>; commandlist.txt から<span class="m">1</span>行ずつコマンドを読み込み、実行する
</span><span class='line'>; <span class="p">----------------------------------------------------------------------</span>
</span><span class='line'>sendln
</span><span class='line'>
</span><span class='line'>commandlist <span class="p">=</span> <span class="s1">&#39;./commandlist.txt&#39;</span>
</span><span class='line'>fileopen filehandle commandlist <span class="m">0</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="m">1</span>
</span><span class='line'>  filereadln filehandle command
</span><span class='line'>  <span class="k">if</span> result <span class="p">=</span> <span class="m">1</span> <span class="k">break</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">call</span> wait_prompt
</span><span class='line'>  sendln command
</span><span class='line'><span class="k">endwhile</span>
</span><span class='line'>
</span><span class='line'>fileclose filehandle
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'>; <span class="p">----------------------------------------------------------------------</span>
</span><span class='line'>; Juniper のプロンプトを待つサブルーチン
</span><span class='line'><span class="p">:</span>wait_prompt
</span><span class='line'>  wait <span class="s1">&#39;@YOUR-HOSTNAME&gt;&#39;</span>
</span><span class='line'><span class="k">return</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記、<code>.ttl</code> ファイルと同じところに <code>commandlist.txt</code> を置く。
<code>commandlist.txt</code> には実行したいコマンドを改行区切りで列挙する以下はEXシリーズのコマンド例。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'>show system uptime <span class="p">|</span> no<span class="p">-</span><span class="nb">more</span>
</span><span class='line'>show <span class="k">version</span> <span class="p">|</span> no<span class="p">-</span><span class="nb">more</span>
</span><span class='line'>show configuration <span class="p">|</span> <span class="nb">display</span> <span class="k">set</span> <span class="p">|</span> no<span class="p">-</span><span class="nb">more</span>
</span><span class='line'>show chassis environment <span class="p">|</span> no<span class="p">-</span><span class="nb">more</span>
</span><span class='line'>show chassis routing<span class="p">-</span>engine <span class="p">|</span> no<span class="p">-</span><span class="nb">more</span>
</span><span class='line'>show virtual<span class="p">-</span>chassis <span class="p">|</span> no<span class="p">-</span><span class="nb">more</span>
</span><span class='line'>show virtual<span class="p">-</span>chassis vc<span class="p">-</span>port <span class="p">|</span> no<span class="p">-</span><span class="nb">more</span>
</span><span class='line'>show ethernet<span class="p">-</span>switching table brief <span class="p">|</span> no<span class="p">-</span><span class="nb">more</span>
</span><span class='line'>show arp <span class="p">|</span> no<span class="p">-</span><span class="nb">more</span>
</span><span class='line'>show lacp interfaces <span class="p">|</span> no<span class="p">-</span><span class="nb">more</span>
</span><span class='line'>show route <span class="p">|</span> no<span class="p">-</span><span class="nb">more</span>
</span><span class='line'>show vlans detail <span class="p">|</span> no<span class="p">-</span><span class="nb">more</span>
</span><span class='line'>show interfaces <span class="nb">terse</span> <span class="p">|</span> no<span class="p">-</span><span class="nb">more</span>
</span><span class='line'>show firewall <span class="p">|</span> no<span class="p">-</span><span class="nb">more</span>
</span><span class='line'>show log <span class="k">messages</span> <span class="p">|</span> no<span class="p">-</span><span class="nb">more</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails じゃなくても ActiveRecord を使う]]></title>
    <link href="http://momota.github.io/blog/2014/05/10/activerecord/"/>
    <updated>2014-05-10T14:54:00+09:00</updated>
    <id>http://momota.github.io/blog/2014/05/10/activerecord</id>
    <content type="html"><![CDATA[<p>rails には挫折したおれが、rails アプリケーション以外で ActiveRecord を使うようになった件について。</p>

<p>ActiveRecord は O/Rマッパーで RDB のテーブルエントリをオブジェクトとして扱えるようにするやつ。1インスタンスが、テーブルの1レコードに相当する。
Ruby on Rails 標準で、モデル層で使われる。</p>

<p>環境は以下。</p>

<ul>
<li>Mac OSX</li>
<li>ruby 2.1.1p76</li>
<li>MySQL mysqld5.6.17</li>
</ul>


<p>最終的なディレクトリ構成は以下のようになる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>.
</span><span class='line'>├── Gemfile
</span><span class='line'>├── Gemfile.lock
</span><span class='line'>├── README.md
</span><span class='line'>├── Rakefile
</span><span class='line'>├── app
</span><span class='line'>│   └── models
</span><span class='line'>│       └── hoges.rb
</span><span class='line'>├── app.rb
</span><span class='line'>├── config
</span><span class='line'>│   └── database.yml
</span><span class='line'>├── db
</span><span class='line'>│   └── migrate
</span><span class='line'>│       └── 20140510_create_hoges.rb
</span><span class='line'>├── log
</span><span class='line'>│   ├── database.log
</span><span class='line'>│   └── trace.log
</span><span class='line'>└── vendor
</span><span class='line'>    └── bundle
</span><span class='line'>            └── <span class="o">(</span>略<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://github.com/momota/activerecord_sample">https://github.com/momota/activerecord_sample</a></li>
</ul>


<!-- more -->


<h2>前準備</h2>

<h3>ruby</h3>

<p>rbenv で ruby 2.1.1 をインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rbenv install 2.1.1
</span><span class='line'><span class="nv">$ </span>rbenv <span class="nb">local </span>2.1.1
</span><span class='line'><span class="nv">$ </span>rbenv rehash
</span><span class='line'><span class="nv">$ </span>ruby -v
</span><span class='line'>ruby 2.1.1p76 <span class="o">(</span>2014-02-24 revision 45161<span class="o">)</span> <span class="o">[</span>x86_64-darwin13.0<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<h3>gem</h3>

<p>bundler で gem をインストールする。
まず、bundler をインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>gem install bundle
</span><span class='line'><span class="nv">$ </span>bundle -v
</span><span class='line'>Bundler version 1.6.2
</span></code></pre></td></tr></table></div></figure>


<p>以下の <code>Gemfile</code> をつくって<code>bundle install --path vendor/bundle</code> して gem をインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">source</span> <span class="s2">&quot;https://rubygems.org&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">gem</span> <span class="s2">&quot;activerecord&quot;</span>
</span><span class='line'><span class="n">gem</span> <span class="s2">&quot;rake&quot;</span>
</span><span class='line'><span class="n">gem</span> <span class="s2">&quot;mysql2&quot;</span>
</span><span class='line'><span class="n">gem</span> <span class="s2">&quot;pry&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>mysql2</code> はDBアダプタ。MySQLと接続するために必要。</p>

<p><code>pry</code> はなくてもよい。<code>irb</code> の便利バージョン。</p>

<h3>mysql</h3>

<p>homebrew でインストールした。</p>

<p><code>my.cnf</code>はよしなに。</p>

<p><code>create database</code> とか <code>grant</code> でユーザやデータベースなどはあらかじめ作っておく。</p>

<h2>create table: rake タスクを使ってテーブルを作成する</h2>

<p><code>rake</code> (makeみたいなもん) でテーブルを作成する。(マイグレーション)</p>

<p>マイグレーションは、SQLを使わずにデータベースのテーブルやカラムなどの構造を変更できる仕組みで、移行と解釈するとややこしい。データベース移行をしやすくする仕組み、くらいに捉えておくとよい。</p>

<h3>マイグレーション用ファイルを作成する</h3>

<p><code>db/migrate</code> ディレクトリを作ってマイグレーション用ファイルを作る。</p>

<p>ここでは hoges テーブルを作ることにする。
マイグレーション用ファイルには、テーブル定義を書く。ここでは <code>db/migrate/20140510_create_hoges.rb</code> を作成する。</p>

<p>このファイル名が大事で <code>20140510</code> の部分がバージョンとして管理される。<code>schema_migrations</code> テーブルが自動生成され、そこで管理される。また、マイグレーション用ファイル中に class 名を<code>CreateHoges</code> のようにキャメルケースで定義した場合は、ファイル名は <code>VERSION_create_hoge.rb</code> のようにスネークケースとして命名する必要がある。ファイル名がこの命名規約に反するとマイグレーションがこける。</p>

<p>rails文化の「設定より規約」(CoC: Convention over Configuration)ってやつですね。</p>

<p><code>ActiveRecord::Migration</code> を継承したクラス <code>Createhoges</code> を定義する。
シンボル <code>:hoges</code> がテーブル名。カラム定義は見ての通りだと思う。
主キーは自動的に <code>id</code> というカラム名で生成されるので書かない。(書くとエラーになる)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">CreateHoges</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Migration</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">up</span>
</span><span class='line'>    <span class="n">create_table</span> <span class="ss">:hoges</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">string</span>  <span class="ss">:name</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">string</span>  <span class="ss">:url</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">timestamps</span>  <span class="c1"># =&gt; これでcreated_atとupdated_atカラムが定義される</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">down</span>
</span><span class='line'>    <span class="n">drop_table</span> <span class="ss">:hoges</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>書き方の詳細は、<a href="http://guides.rubyonrails.org/migrations.html">Active Record Migrations</a> を見れば良いと思う。</p>

<h3>データベース接続情報を yaml に書き出す</h3>

<p>MySQL への接続情報(DBユーザ名とかパスワードとか使うDB名とか)を yaml ファイルに書き出しておく。めんどくさい、かつ、使い捨てのコードならハードコーディングしといてもOK。</p>

<p>ここでは、以下の内容で <code>config/database.yml</code> を作成した。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">db:</span>
</span><span class='line'><span class="x">  production:</span>
</span><span class='line'><span class="x">    adapter:  mysql2</span>
</span><span class='line'><span class="x">    host:     localhost</span>
</span><span class='line'><span class="x">    username: </span><span class="cp">&lt;%=</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;DATABASE_USERNAME&#39;</span><span class="o">]</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">    password: </span><span class="cp">&lt;%=</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;DATABASE_PASSWORD&#39;</span><span class="o">]</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">    database: </span><span class="cp">&lt;%=</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;DATABASE_NAME&#39;</span><span class="o">]</span><span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'>
</span><span class='line'><span class="x">  development:</span>
</span><span class='line'><span class="x">    adapter:  mysql2</span>
</span><span class='line'><span class="x">    host:     localhost</span>
</span><span class='line'><span class="x">    username: </span><span class="cp">&lt;%=</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;DEV_DATABASE_USERNAME&#39;</span><span class="o">]</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">    password: </span><span class="cp">&lt;%=</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;DEV_DATABASE_PASSWORD&#39;</span><span class="o">]</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">    database: </span><span class="cp">&lt;%=</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;DEV_DATABASE_NAME&#39;</span><span class="o">]</span><span class="cp">%&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>パスワードなどの秘匿情報は環境変数から読み込むようにする。(ここではERB形式で書いた)
パスワードをべた書きしといて、間違えて github とかで公開しちゃうと大変なので。</p>

<p><code>~/.zshrc</code> とか <code>~/.bashrc</code> にあらかじめ作っておいたデータベース名とかユーザ名を以下のように足して <code>source ~/.zshrc</code> で読み込めばいいと思う。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">export </span><span class="nv">DEV_DATABASE_NAME</span><span class="o">=</span><span class="s2">&quot;hoge_db&quot;</span>
</span><span class='line'><span class="nb">export </span><span class="nv">DEV_DATABASE_USERNAME</span><span class="o">=</span><span class="s2">&quot;hoge_user&quot;</span>
</span><span class='line'><span class="nb">export </span><span class="nv">DEV_DATABASE_PASSWORD</span><span class="o">=</span><span class="s2">&quot;hoge_password&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Rakefile をつくって rakeタスクを実行する</h3>

<p>以下の内容で <code>Rakefile</code> を作る。
DB接続用の設定や環境指定(development/production) やバージョン指定の設定を書いてます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s2">&quot;active_record&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;yaml&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;erb&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;logger&quot;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">task</span> <span class="ss">:default</span> <span class="o">=&gt;</span> <span class="ss">:migrate</span>
</span><span class='line'>
</span><span class='line'><span class="n">desc</span> <span class="s2">&quot;Migrate database&quot;</span>
</span><span class='line'><span class="n">task</span> <span class="ss">:migrate</span> <span class="o">=&gt;</span> <span class="ss">:environment</span> <span class="k">do</span>
</span><span class='line'>  <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Migrator</span><span class="o">.</span><span class="n">migrate</span><span class="p">(</span><span class="s1">&#39;db/migrate&#39;</span><span class="p">,</span> <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;VERSION&quot;</span><span class="o">]</span> <span class="p">?</span> <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;VERSION&quot;</span><span class="o">].</span><span class="n">to_i</span> <span class="p">:</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">task</span> <span class="ss">:environment</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">db_conf</span> <span class="o">=</span> <span class="no">YAML</span><span class="o">.</span><span class="n">load</span><span class="p">(</span> <span class="no">ERB</span><span class="o">.</span><span class="n">new</span><span class="p">(</span> <span class="no">File</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="s2">&quot;./config/database.yml&quot;</span><span class="p">)</span> <span class="p">)</span><span class="o">.</span><span class="n">result</span> <span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># `rake ENV=development`/`rake ENV=production`で切り替え可能</span>
</span><span class='line'>  <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span><span class="o">.</span><span class="n">establish_connection</span><span class="p">(</span> <span class="n">db_conf</span><span class="o">[</span><span class="s2">&quot;db&quot;</span><span class="o">][</span><span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;ENV&quot;</span><span class="o">]]</span> <span class="p">)</span>
</span><span class='line'>  <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span><span class="o">.</span><span class="n">logger</span> <span class="o">=</span> <span class="no">Logger</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;log/database.log&quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>以下を参考。</p>

<ul>
<li><a href="http://qiita.com/foloinfo/items/6ecfe3c5fd1b56f1dceb">非Rails AppでActiveRecord::Migrationを使う + Rakeでバージョン管理する</a></li>
</ul>


<h3>rake タスクを実行する</h3>

<p>まずは rake タスクの確認。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake -T
</span><span class='line'>rake migrate  <span class="c"># Migrate database</span>
</span></code></pre></td></tr></table></div></figure>


<p>開発環境設定で実行する。(ENV=development)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># debug 用に--traceオプションをつけ、標準エラーをlog/trace.txtへリダイレクト。</span>
</span><span class='line'><span class="c"># bundle exec rake ENV=development でもOK</span>
</span><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake <span class="nv">ENV</span><span class="o">=</span>development --trace 2&gt; log/trace.txt
</span><span class='line'><span class="o">==</span> 20140510 CreateHoges: <span class="nv">migrating</span> <span class="o">============================================</span>
</span><span class='line'>-- create_table<span class="o">(</span>:hoges<span class="o">)</span>
</span><span class='line'>   -&gt; 0.1159s
</span><span class='line'><span class="o">==</span> 20140510 CreateHoges: migrated <span class="o">(</span>0.1160s<span class="o">)</span> <span class="o">===================================</span>
</span></code></pre></td></tr></table></div></figure>


<p>問題なければテーブルが作成されているはず。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>mysql&gt; show tables;
</span><span class='line'>+--------------------------+
</span><span class='line'>| Tables_in_dev_********** |
</span><span class='line'>+--------------------------+
</span><span class='line'>| hoges                    |
</span><span class='line'>| schema_migrations        |
</span><span class='line'>+--------------------------+
</span><span class='line'>2 rows in <span class="nb">set</span> <span class="o">(</span>0.00 sec<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>mysql&gt; desc schema_migrations;
</span><span class='line'>+---------+--------------+------+-----+---------+-------+
</span><span class='line'>| Field   | Type         | Null | Key | Default | Extra |
</span><span class='line'>+---------+--------------+------+-----+---------+-------+
</span><span class='line'>| version | varchar<span class="o">(</span>255<span class="o">)</span> | NO   | PRI | NULL    |       |
</span><span class='line'>+---------+--------------+------+-----+---------+-------+
</span><span class='line'>1 row in <span class="nb">set</span> <span class="o">(</span>0.00 sec<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>mysql&gt; <span class="k">select</span> * from schema_migrations;
</span><span class='line'>+----------+
</span><span class='line'>| version  |
</span><span class='line'>+----------+
</span><span class='line'>| 20140510 |
</span><span class='line'>+----------+
</span><span class='line'>1 row in <span class="nb">set</span> <span class="o">(</span>0.00 sec<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>mysql&gt; desc hoges;
</span><span class='line'>+------------+--------------+------+-----+---------+----------------+
</span><span class='line'>| Field      | Type         | Null | Key | Default | Extra          |
</span><span class='line'>+------------+--------------+------+-----+---------+----------------+
</span><span class='line'>| id         | int<span class="o">(</span>11<span class="o">)</span>      | NO   | PRI | NULL    | auto_increment |
</span><span class='line'>| name       | varchar<span class="o">(</span>255<span class="o">)</span> | YES  |     | NULL    |                |
</span><span class='line'>| url        | varchar<span class="o">(</span>255<span class="o">)</span> | YES  |     | NULL    |                |
</span><span class='line'>| created_at | datetime     | YES  |     | NULL    |                |
</span><span class='line'>| updated_at | datetime     | YES  |     | NULL    |                |
</span><span class='line'>+------------+--------------+------+-----+---------+----------------+
</span><span class='line'>5 rows in <span class="nb">set</span> <span class="o">(</span>0.01 sec<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>mysql&gt; <span class="k">select</span> * from hoges;
</span><span class='line'>Empty <span class="nb">set</span> <span class="o">(</span>0.00 sec<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>CRUD 操作について</h2>

<p>ActiveRecordを使って CRUD 操作する。(insert/select/update/delete)</p>

<p>ActiveRecord では、<code>ActiveRecord::Base</code> を継承したクラスがDBの1テーブルに対応し、そのクラスの属性がテーブルの各カラムに対応する。
このクラスのことを一般的に「モデル」と呼ぶ。
Rails では、Rails アプリを生成した段階で MVC 別にディレクトリが生成されるので、<code>app/models</code> 以下にこの <code>ActiveRecord::Base</code> 継承クラスを作る。
今回は Rails ではないのでそれに従う必要はない。が、モデルが増えた場合を考慮すると <code>app/models</code> 以下に整理できておいたほうがコードの可読性とかメンテナンスはしやすそうなので、<code>app/models/hoges.rb</code> ファイルを作ることにする。
Rails って理にかなっているんだな。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Hoges</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>この <code>Hoges</code> は対応するテーブル名にあわせる。これもCoC。
レコードを単数形で扱うため、テーブル名を複数形にすることが多いみたい。</p>

<h3>Create: テーブルへ insert する</h3>

<p>CRUD の C。</p>

<p><code>app.rb</code> をつくる。</p>

<p>モデルを <code>new</code> して属性値をセットしてあげればOK。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s2">&quot;active_record&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;yaml&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;erb&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;./app/models/hoges&quot;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">db_conf</span> <span class="o">=</span> <span class="no">YAML</span><span class="o">.</span><span class="n">load</span><span class="p">(</span> <span class="no">ERB</span><span class="o">.</span><span class="n">new</span><span class="p">(</span> <span class="no">File</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="s2">&quot;./config/database.yml&quot;</span><span class="p">)</span> <span class="p">)</span><span class="o">.</span><span class="n">result</span> <span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 開発用DB接続パラメータ読み込み, 接続する</span>
</span><span class='line'><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span><span class="o">.</span><span class="n">establish_connection</span><span class="p">(</span><span class="n">db_conf</span><span class="o">[</span><span class="s2">&quot;db&quot;</span><span class="o">][</span><span class="s2">&quot;development&quot;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">test_name</span> <span class="o">=</span> <span class="s2">&quot;momota.txt&quot;</span>
</span><span class='line'><span class="n">test_url</span>  <span class="o">=</span> <span class="s2">&quot;http://momota.github.io/&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">hoge</span> <span class="o">=</span> <span class="no">Hoges</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="o">|</span><span class="n">h</span><span class="o">|</span>
</span><span class='line'>  <span class="n">h</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">test_name</span>
</span><span class='line'>  <span class="n">h</span><span class="o">.</span><span class="n">url</span>  <span class="o">=</span> <span class="n">test_url</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nb">p</span> <span class="n">hoge</span>
</span><span class='line'><span class="n">hoge</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'><span class="nb">p</span> <span class="n">hoge</span>
</span></code></pre></td></tr></table></div></figure>


<p>なお、<code>save</code> しないと insert されない。</p>

<p>こんな感じで生成時にハッシュを渡してもOK。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">hoge</span> <span class="o">=</span> <span class="no">Hoges</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:name</span> <span class="o">=&gt;</span> <span class="n">test_name</span><span class="p">,</span> <span class="ss">:url</span> <span class="o">=&gt;</span> <span class="n">test_url</span><span class="p">)</span>
</span><span class='line'><span class="n">hoge</span><span class="o">.</span><span class="n">save</span>
</span></code></pre></td></tr></table></div></figure>


<p>それでは実行してみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>ruby app.rb
</span><span class='line'><span class="c">#&lt;Hoges id: nil, name: &quot;momota.txt&quot;, url: &quot;http://momota.github.io/&quot;, created_at: nil, updated_at: nil&gt;</span>
</span><span class='line'><span class="c">#&lt;Hoges id: 1, name: &quot;momota.txt&quot;, url: &quot;http://momota.github.io/&quot;, created_at: &quot;2014-05-10 23:50:46&quot;, updated_at: &quot;2014-05-10 23:50:46&quot;&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記から、saveしないと <code>id</code> や <code>created_at</code> などの値が空なので insert されていないことが分かる。</p>

<p>実際にテーブルの内容を見てみよう。ちゃんと insert されている。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>mysql&gt; <span class="k">select</span> * from hoges;
</span><span class='line'>+----+------------+--------------------------+---------------------+---------------------+
</span><span class='line'>| id | name       | url                      | created_at          | updated_at          |
</span><span class='line'>+----+------------+--------------------------+---------------------+---------------------+
</span><span class='line'>|  1 | momota.txt | http://momota.github.io/ | 2014-05-10 23:50:46 | 2014-05-10 23:50:46 |
</span><span class='line'>+----+------------+--------------------------+---------------------+---------------------+
</span><span class='line'>1 row in <span class="nb">set</span> <span class="o">(</span>0.00 sec<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Read: レコードを select する</h3>

<p>CRUD の R。</p>

<p>主キーで select する場合は、<code>find</code> メソッドを使う。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">hoges</span> <span class="o">=</span> <span class="no">Hoges</span><span class="o">.</span><span class="n">find</span><span class="p">(</span> <span class="mi">1</span> <span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>これは以下の SQL と同じ。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">hoges</span> <span class="k">where</span> <span class="n">hoges</span><span class="p">.</span><span class="n">id</span> <span class="o">=</span> <span class="mi">1</span> <span class="k">LIMIT</span> <span class="mi">1</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>主キー以外だと、<code>find_by</code> メソッドを使う。</p>

<p>該当するレコードがなければ <code>nil</code> が返ってくる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">hoges</span> <span class="o">=</span> <span class="no">Hoges</span><span class="o">.</span><span class="n">find_by</span> <span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;momota.txt&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>これは以下のような書き方もできる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">hoges</span> <span class="o">=</span> <span class="no">Hoges</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;momota.txt&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">take</span>
</span></code></pre></td></tr></table></div></figure>


<p>これらは以下の SQL と同じ。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">hoges</span> <span class="k">where</span> <span class="n">hoges</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="ss">&quot;momota.txt&quot;</span> <span class="k">LIMIT</span> <span class="mi">1</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>find_by</code> メソッドを使ってレコードが存在しないときにだけ insert するように <code>app.rb</code> を書き変えてみよう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gd">-hoge = Hoges.new { |h|</span>
</span><span class='line'><span class="gd">-  h.name = test_name</span>
</span><span class='line'><span class="gd">-  h.url  = test_url</span>
</span><span class='line'><span class="gd">-}</span>
</span><span class='line'><span class="gd">-p hoge</span>
</span><span class='line'><span class="gd">-hoge.save</span>
</span><span class='line'><span class="gd">-p hoge</span>
</span><span class='line'><span class="gi">+rec = Hoges.find_by url: test_url</span>
</span><span class='line'><span class="gi">+unless rec</span>
</span><span class='line'><span class="gi">+  hoge = Hoges.new { |h|</span>
</span><span class='line'><span class="gi">+    h.name = test_name</span>
</span><span class='line'><span class="gi">+    h.url  = test_url</span>
</span><span class='line'><span class="gi">+  }</span>
</span><span class='line'><span class="gi">+  hoge.save</span>
</span><span class='line'><span class="gi">+  puts &quot;すでにデータは insert 済みなのでここには入らない&quot;</span>
</span><span class='line'><span class="gi">+end</span>
</span><span class='line'>
</span><span class='line'><span class="gi">+p rec</span>
</span></code></pre></td></tr></table></div></figure>


<p>実行すると最終行の <code>p rec</code> が呼ばれていることが分かる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>ruby app.rb
</span><span class='line'>&lt;Hoges id: 1, name: <span class="s2">&quot;momota.txt&quot;</span>, url: <span class="s2">&quot;http://momota.github.io/&quot;</span>, created_at: <span class="s2">&quot;2014-05-10 23:50:46&quot;</span>, updated_at: <span class="s2">&quot;2014-05-10 23:50:46&quot;</span>&gt;
</span></code></pre></td></tr></table></div></figure>


<p><code>find_or_create_by</code> メソッドによりさらにスマートな書き方ができる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gd">-rec = Hoges.find_by url: test_url</span>
</span><span class='line'><span class="gd">-unless rec</span>
</span><span class='line'><span class="gd">-  hoge = Hoges.new { |h|</span>
</span><span class='line'><span class="gd">-    h.name = test_name</span>
</span><span class='line'><span class="gd">-    h.url  = test_url</span>
</span><span class='line'><span class="gd">-  }</span>
</span><span class='line'><span class="gd">-  hoge.save</span>
</span><span class='line'><span class="gi">+rec = Hoges.find_or_create_by( url: test_url ) do |h|</span>
</span><span class='line'><span class="gi">+  h.name = test_name</span>
</span><span class='line'>  puts &quot;すでにデータは insert 済みなのでここには入らない&quot;
</span><span class='line'>end
</span></code></pre></td></tr></table></div></figure>


<p>その他いろいろと以下のページが参考になる。</p>

<ul>
<li><a href="http://edgeguides.rubyonrails.org/active_record_querying.html">Active Record Query Interface</a></li>
</ul>


<h3>Update: レコードを update する</h3>

<p>CRUD の U。</p>

<p>これはオブジェクトの属性を更新して <code>save</code> するだけ。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">changed_name</span> <span class="o">=</span> <span class="s2">&quot;momota.log&quot;</span>
</span><span class='line'><span class="n">hoges</span> <span class="o">=</span> <span class="no">Hoges</span><span class="o">.</span><span class="n">find_by</span> <span class="ss">url</span><span class="p">:</span> <span class="n">test_url</span>
</span><span class='line'><span class="n">hoges</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">changed_name</span>
</span><span class='line'><span class="n">hoges</span><span class="o">.</span><span class="n">save</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Delete: レコードを delete する</h3>

<p>CRUD の D。</p>

<p>これも簡単でモデルオブジェクトから <code>destroy</code> or <code>delete</code> メソッドを呼ぶだけ。<code>save</code> は不要。</p>

<p><code>delete</code> はレコードの削除のみなので高速。<code>destroy</code> はレコードとオブジェクトも削除してくれるが、<code>delete</code> に比べて低速。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">hoges</span> <span class="o">=</span> <span class="no">Hoges</span><span class="o">.</span><span class="n">find</span><span class="p">(</span> <span class="mi">1</span> <span class="p">)</span>
</span><span class='line'><span class="n">hoges</span><span class="o">.</span><span class="n">destroy</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>where</code> で複数のレコードをひっかけて全部削除したい場合は、<code>destroy_all</code> or <code>delete_all</code> メソッドを呼ぶ。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">hoges</span> <span class="o">=</span> <span class="no">Hoges</span><span class="o">.</span><span class="n">destroy_all</span><span class="p">(</span><span class="ss">url</span><span class="p">:</span> <span class="n">test_url</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>find_by</code> してからでもOK。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">hoges</span> <span class="o">=</span> <span class="no">Hoges</span><span class="o">.</span><span class="n">find_by</span> <span class="ss">url</span><span class="p">:</span> <span class="n">test_url</span>
</span><span class='line'><span class="n">hoges</span><span class="o">.</span><span class="n">destroy_all</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>app.rb</code> を書き換えてみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">-</span><span class="n">rec</span> <span class="o">=</span> <span class="no">Hoges</span><span class="o">.</span><span class="n">find_or_create_by</span><span class="p">(</span> <span class="ss">url</span><span class="p">:</span> <span class="n">test_url</span> <span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">h</span><span class="o">|</span>
</span><span class='line'><span class="o">+</span><span class="n">hoges</span> <span class="o">=</span> <span class="no">Hoges</span><span class="o">.</span><span class="n">find_or_create_by</span><span class="p">(</span> <span class="ss">url</span><span class="p">:</span> <span class="n">test_url</span> <span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">h</span><span class="o">|</span>
</span><span class='line'>   <span class="n">h</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">test_name</span>
</span><span class='line'><span class="o">-</span>  <span class="nb">puts</span> <span class="s2">&quot;すでにデータは insert 済みなのでここには入らない&quot;</span>
</span><span class='line'> <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span><span class="nb">p</span> <span class="n">rec</span>
</span><span class='line'><span class="o">+</span><span class="nb">puts</span> <span class="s2">&quot;[before delete]record count: </span><span class="si">#{</span><span class="no">Hoges</span><span class="o">.</span><span class="n">count</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="o">+</span><span class="no">Hoges</span><span class="o">.</span><span class="n">delete_all</span><span class="p">(</span><span class="ss">url</span><span class="p">:</span> <span class="n">test_url</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>実行すると、確かにレコードが削除されている。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>ruby app.rb
</span><span class='line'><span class="o">[</span>before delete<span class="o">]</span>record count: 1
</span><span class='line'><span class="o">[</span>after delete<span class="o">]</span> record count: 0
</span></code></pre></td></tr></table></div></figure>


<p>sqlでも確認できる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>mysql&gt; <span class="k">select</span> * from hoges;
</span><span class='line'>Empty <span class="nb">set</span> <span class="o">(</span>0.00 sec<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[これだけは入れとけ! 個人的に仕事でよく使う windows ソフト]]></title>
    <link href="http://momota.github.io/blog/2014/02/02/windows/"/>
    <updated>2014-02-02T17:53:00+09:00</updated>
    <id>http://momota.github.io/blog/2014/02/02/windows</id>
    <content type="html"><![CDATA[<p>自分の windows マシンへのインストール記録として。ちなみに windows 7。
何かよいソフトがあれば追記していくつもり。
MS Office も毎日触っているけど割愛。</p>

<p>後半疲れて雑になっている感じはある。</p>

<!-- more -->


<h2>テキストエディタ</h2>

<h3>vim</h3>

<p>会社標準は秀丸だが、<a href="http://www.kaoriya.net/software/vim/">kaoriya-vim</a> を使っている。</p>

<p>別エントリにするつもりだが、機能が豊富かつ軽量なのが選定理由。</p>

<ul>
<li>syntax highlight</li>
<li>正規表現での文字列検索・置換</li>
<li>ファイル横断の文字列検索</li>
<li>補完機能</li>
<li>レジスタ</li>
<li>ウィンドウ分割</li>
<li>豊富なプラグイン</li>
</ul>


<h2>IME</h2>

<h3>Google 日本語入力</h3>

<p><a href="http://www.google.co.jp/ime/">Google 日本語入力</a> を使っている。学生の頃、学校に講演に来てくれた工藤拓さんが開発者。なので、なんか親しみ深くリリースされてからずっと使っている。</p>

<p>&ldquo;XX(会社名) YY(名前)です。&rdquo; とか &ldquo;お疲れ様です。&rdquo; 的な定型文をいちいち登録しないでも学習してくれ、2, 3文字入力後 tab キーで補完してくれるので文章書くときに非常に楽。</p>

<h2>font</h2>

<p>font はソフトか? という疑問はあるが。
windows で文字を書くことが仕事の大部分を占めるのでフォントにはこだわりたい。
アンチエイリアスがかかって、等幅で、文字の識別がしやすい(例えば、&#8221;l&#8221; と &ldquo;1&#8221;、 &#8220;O&rdquo; と &ldquo;0&#8221;、&rdquo;,&ldquo; と &rdquo;.&ldquo;)ものを使っている。</p>

<h3>Osaka</h3>

<p><img src="http://osaka.is.land.to/images/example_1_osaka.gif" alt="osaka" /></p>

<p>Mac OS 標準の <a href="http://osaka.is.land.to/">Osaka</a> の等幅フォントを使っている。</p>

<h3>MigMix 2M</h3>

<p><a href="http://mix-mplus-ipa.sourceforge.jp/images/migmix2m.png">MigMix 2M</a></p>

<p>最近は <a href="http://mix-mplus-ipa.sourceforge.jp/migmix/">MigMix 2M</a> を中心に使っている。</p>

<h3>MacType</h3>

<p><a href="https://code.google.com/p/mactype/">Mactype</a> はMSゴシックなどのデフォルトフォントでもアンチエイリアスをかけてくれるレンダリングソフト。</p>

<p>デスクトップアプリケーション全般のフォントがきれいになる。
また、word, excel などの MS Office を使った資料で人からもらうものや配布するものに上述した標準でないフォントは使えないので、そのような資料もきれいなフォントで見られる。</p>

<ul>
<li>before</li>
</ul>


<p><img src="http://momota.github.io/images/20140202_windows_app/mactype_before.png" alt="mactype_before" /></p>

<ul>
<li>after</li>
</ul>


<p><img src="http://momota.github.io/images/20140202_windows_app/mactype_after.png" alt="mactype_after" /></p>

<h2>ランチャ</h2>

<h3>fenrir</h3>

<p><a href="http://www.forest.impress.co.jp/lib/dktp/desktop/launcher/fenrir.html">fenrir &ndash; 窓の杜ライブラリ</a></p>

<p>キーワードマッチング型のランチャ。mac の spotlight みたいなアプリケーション。
デスクトップがすっきりする。アプリケーションの起動だけでなく、ショートカットもいける。
fenrir 起動は、任意のキーがアサイン可能で、個人的に使い道がない capslock をキーアサインしている。</p>

<h2>付箋</h2>

<h3>stickypaper</h3>

<p><img src="http://www.pentacom.jp/pentacom/bin/paperhelp/img/head_sc121.jpg" alt="stickypaper" /></p>

<p><a href="http://www.pentacom.jp/pentacom/bin/paperhelp/index.html">stickypaper</a></p>

<p>なんとなくカラフルで見た目がきれいだし、付箋タイトル部分をダブルクリックで折りたためるし便利。
よくやりとりする人の連絡先だったり、ちょっとしたメモだったり、カレンダーとかも。</p>

<p>ウィンドウを最前に持ってこれるショートカットキー(stickypaper ではホットキーと呼んでいる)が設定できる。
これまた通常使わない、かつ、めったに押さない &ldquo;shift + 0&rdquo; をアサインしている。</p>

<h2>デスクトップアイコンのリスト化</h2>

<h3>desktopListview</h3>

<p><img src="http://desktoplistview.googlecode.com/files/screenshot.jpg" alt="desktoplistview" /></p>

<p><a href="http://code.google.com/p/desktoplistview/">desktoplistview &ndash; list view for your desktop</a></p>

<p>他人の散らかっているデスクトップアイコンを見ると残念な気分になる。
自分も散らからないように、多少散らかってててもすっきり見せたい、という思いでデスクトップアイコンをリスト表示している。</p>

<p>windows xp 時代は”ぴたすちお”を使っていたけど、widows 7だとうまく動かない(というか機能が競合してめんどくさかった)のでこちらを使っている。</p>

<h2>ファイラ</h2>

<h3>QTTabBar</h3>

<p><img src="http://qttabbar-ja.wdfiles.com/local--files/repository/qttabbar_top.png" alt="QTTabBar" /></p>

<p><a href="http://qttabbar-ja.wikidot.com/">QTTabBar &ndash; QuizoApps</a></p>

<p>エクスプローラをタブ化したいと思ってインストール。
その他、ファイルプレビュー機能とか空白部分のダブルクリックで1つ上の階層に移動できたりとかする機能とかが便利。</p>

<h2>コミュニケーション</h2>

<h3>メーラ thunderbird</h3>

<p>プラグインが多くて学生時代から使っている。本当は mutt を使おうとしてみたがうまくメール受信できなくて断念した。
あとはチャットクライアントとして時々使っている。
以下のようなプラグインを使っている。</p>

<table>
<thead>
<tr>
<th></th>
<th align="left">プラグイン名</th>
<th align="left">機能</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td align="left"><a href="http://globs.org/articles.php?pg=2&amp;lng=en">external editor</a></td>
<td align="left">好きなエディタでメールを作成できる。vim でメール編集するために利用。 </td>
</tr>
<tr>
<td></td>
<td align="left"><a href="https://addons.mozilla.org/ja/thunderbird/addon/nostalgy/">nostalgy</a></td>
<td align="left">キーボードショートカットでフォルダの移動やメールの移動などができる。 </td>
</tr>
<tr>
<td></td>
<td align="left"><a href="https://addons.mozilla.org/ja/thunderbird/addon/color-folders/">color folders</a></td>
<td align="left">フォルダの色付けができる。長年仕事しているとすごいフォルダ階層がすごいことになるので色付けして分かりやすくする </td>
</tr>
<tr>
<td></td>
<td align="left"><a href="https://addons.mozilla.org/ja/thunderbird/addon/extra-folder-columns/">extra folder columns</a></td>
<td align="left">フォルダペインにフォルダに含まれるメール数やサイズなどの表示項目を追加できる </td>
</tr>
<tr>
<td></td>
<td align="left"><a href="https://addons.mozilla.org/ja/thunderbird/addon/xnotepp/">xnote++</a></td>
<td align="left">メール単位に付箋が貼れる</td>
</tr>
<tr>
<td></td>
<td align="left"><a href="https://addons.mozilla.org/ja/thunderbird/addon/gmail-conversation-view/">thunderbird conversations</a></td>
<td align="left">スレッドビューを追加できる </td>
</tr>
<tr>
<td></td>
<td align="left"><a href="https://addons.mozilla.org/ja/thunderbird/addon/keyword-highlight/">keyword highlight</a></td>
<td align="left">登録しておいたキーワードをサイズとか色とか変更してくれる。自分の名前とかを登録。 </td>
</tr>
<tr>
<td></td>
<td align="left"><a href="https://addons.mozilla.org/ja/thunderbird/addon/chat-notifier-for-thunderbid/">chat notifier for thunderbird</a></td>
<td align="left">チャットメッセージを受信したらお知らせしてくれる </td>
</tr>
</tbody>
</table>


<h3>Psi</h3>

<p>XMPP クライアント。<a href="http://psi-im.org/">http://psi-im.org/</a></p>

<h3>IP Messanger</h3>

<p>最近はあまり使ってない。 <a href="http://ipmsg.org/">http://ipmsg.org/</a></p>

<h3>limechat</h3>

<p>IRC クライアント。</p>

<h2>ブラウザ</h2>

<h3>google chrome</h3>

<p>軽量なブラウザ。
プラグインも充実してきたため、3年前くらいから徐々に firefox から切り替え。</p>

<p>ctrl + shift + I で起動する developer tools も便利。Firefox で使っていた Live HTTP Headers 的な機能も付いているし。</p>

<table>
<thead>
<tr>
<th></th>
<th align="left">プラグイン名</th>
<th align="left">機能</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td align="left"><a href="https://chrome.google.com/webstore/detail/autopagerize/igiofjhpmpihnifddepnpngfjhkfenbp?hl=ja">autoPagerize</a></td>
<td align="left">例えば複数ページで構成される検索結果ページなどで、自動で次のページをロードしてくれる</td>
</tr>
<tr>
<td></td>
<td align="left"><a href="https://chrome.google.com/webstore/detail/awesome-screenshot-captur/alelhddbbhepgpmgidjdcjakblofbmce?hl=ja">awesome screenshot</a></td>
<td align="left">web 画面のキャプチャ用</td>
</tr>
<tr>
<td></td>
<td align="left"><a href="https://chrome.google.com/webstore/detail/gestures-for-google-chrom/jpkfjicglakibpenojifdiepckckakgk?hl=ja">gestures for google chrome</a></td>
<td align="left">マウスジェスチャー用</td>
</tr>
<tr>
<td></td>
<td align="left"><a href="https://chrome.google.com/webstore/detail/frame-two-pages/eldgpcphflnopbjadiaonofideekgdgm">frame two pages</a></td>
<td align="left">フレーム分割して 1 つのタブで複数ページを表示する</td>
</tr>
<tr>
<td></td>
<td align="left"><a href="https://chrome.google.com/webstore/detail/proxy-switchy/caehdcpeofiiigpdhbabniblemipncjj">proxy switchy</a></td>
<td align="left">社内プロキシの切り替え用。</td>
</tr>
<tr>
<td></td>
<td align="left"><a href="https://chrome.google.com/webstore/detail/%E3%81%AF%E3%81%A6%E3%81%AA%E3%83%96%E3%83%83%E3%82%AF%E3%83%9E%E3%83%BC%E3%82%AF-googlechrome-%E6%8B%A1%E5%BC%B5/dnlfpnhinnjdgmjfpccajboogcjocdla?hl=ja">はてなブックマーク google chrome拡張</a></td>
<td align="left">ブックマーク用</td>
</tr>
<tr>
<td></td>
<td align="left"><a href="https://chrome.google.com/webstore/detail/vichrome/gghkfhpblkcmlkmpcpgaajbbiikbhpdi">Vichrome</a></td>
<td align="left">viチックに操作できる。マウスいらず。</td>
</tr>
</tbody>
</table>


<h3>IE</h3>

<p>社内の申請サイトでは IE しか機能しないものもあるためたまに利用。</p>

<h2>開発環境</h2>

<h3>virtual box + vagrant</h3>

<p><img src="http://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Vagrant.png/150px-Vagrant.png" alt="vagrant" />
検証用に自前サーバがほしいときとか。</p>

<p>ずっと VMware Player を使ってたけど、1年前くらいから vagrant に切り替え。
vagrant プラグインの sahara をインストールして OS のスナップショット的なものをとっている。 <code>vagrant sandbox on</code> で on したタイミングに<code>vagrant sandbox rollback</code> でいつでも戻せる。<code>vagrant sandbox on</code> 以降の変更点の反映は <code>vagrant sandbox commit</code> で。</p>

<p>以前は、ruby も windows ローカルにインストールして使っていたが、最近は <code>vagrant up</code> したあと Linux で ruby を使うことにしている。</p>

<h3>ターミナルソフト</h3>

<p>既存資産の teraterm マクロを利用する必要がない限りは学生時代から愛用している putty を使っている。</p>

<h3>ファイル転送</h3>

<p>基本、winscp。たまに ffftp。</p>

<h2>バージョン管理</h2>

<h3>git</h3>

<p>個人的なドキュメントなどのバージョン管理は git で行っている。
クライアントソフトは <a href="http://windows.github.com/">github for windows</a> を利用。
一緒にインストールされる、git bash が結構便利。</p>

<p>仕事上のドキュメントのバージョン管理(やファイル共有)については、某社のプロダクトを使っている。</p>

<h2>diff ツール</h2>

<h3>winmerge</h3>

<p><img src="http://www.geocities.co.jp/SiliconValley-SanJose/8165/winmerge_2_8.png" alt="winmerge" /></p>

<p>行内比較がしやすいのと、ディレクトリ比較もできるので <a href="http://www.geocities.co.jp/SiliconValley-SanJose/8165/winmerge.html">winmerge</a> を使っている。</p>

<h2>network</h2>

<h3>wireshark</h3>

<p><img src="https://www.wireshark.org/docs/wsug_html_chunked/wsug_graphics/ws-main.png" alt="wireshark" /></p>

<p>パケット解析用に <a href="http://sourceforge.jp/projects/wireshark/">wireshark</a> を使っている。
パケットキャプチャは比較的簡単だけど、パケット解析のほうが断然手間なのであまり簡単に「キャプチャしようぜ！」なんて言うな。 > 各位</p>

<h3>exping</h3>

<p><img src="http://www.woodybells.com/image/exp2.gif" alt="exping" /></p>

<p>宛先リストを作っておいて、そこに列挙した宛先に対して、ping や traceroute を実行してくれる。
実行回数や間隔なども調整できる。</p>

<h3>RouteDiff</h3>

<p>cisco 社のルーティングテーブル情報 (show ip route) 用 diff ツール。
最近は Juniper 社機器を使うことが多いのであまり使わなくなった。</p>

<h2>その他</h2>

<h3>CLCL</h3>

<p>クリップボード履歴管理ツール<a href="http://www.nakka.com/soft/clcl/">CLCL</a>を使っている。</p>

<h3>everything search engine</h3>

<p>高速ファイル検索 <a href="http://www.voidtools.com/">Everything search engine</a>。
高速にファイル名で検索したいときに使う。
正規表現も使える。</p>

<h3>relaxtools addin</h3>

<p>Excelの複数のマクロを体系的にまとめた多機能アドイン。</p>

<p><a href="http://software.opensquare.net/relaxtools/about/">http://software.opensquare.net/relaxtools/about/</a></p>

<p>疎通確認用に zenmap とか構成管理用に rancid とか気になっているけどまだ触れていない。</p>

<p>evernote や dropbox は会社で使っちゃだめってことになったので使ってない。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[redmine のガントチャートでチケット単位に担当者名を入れたりとか、幅を広げたりとか]]></title>
    <link href="http://momota.github.io/blog/2013/11/22/redmine/"/>
    <updated>2013-11-22T00:29:00+09:00</updated>
    <id>http://momota.github.io/blog/2013/11/22/redmine</id>
    <content type="html"><![CDATA[<p><img src="http://redmine.jp/images/redmine-header-logo.png" alt="redmine" /></p>

<p>一時期 wiki くらいの用途でしか使わなくなっていた redmine。
最近、問合せドリブンの雑多なタスクが増えてきてそれらのタスク管理と、チーム内への対応状況の
シェアがめんどくさくなってきた。チケットでそのあたりのタスク管理とか、進捗管理、スケジュー
ル管理して、チームメンバーには redmine さえ参照してもらえれば把握してもらえるようするため、
改めて redmine を使うようになってきた。</p>

<p>redmine ではチケットに期限を入れてあげるとガントチャートを自動生成してくれる。このガント
チャートがデフォルトだとすこぶる不評だったのでもろもろいじった。そのメモ。</p>

<p>環境は、CentOS, Redmine 1.3.1.stable (MySQL)。</p>

<p><code>REDMINE-HOME</code> は、<code>/var/lib/redmine/</code>。</p>

<!-- more -->


<h2>redmine ガントチャートのチケット単位に担当者名を表示する</h2>

<p><code>REDMINE-HOME/lib/redmine/helpers/gantt.rb</code> を修正する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gu">@@ -353,6 +353,7 @@</span>
</span><span class='line'>           subject &lt;&lt; view.avatar(issue.assigned_to, :class =&gt; &#39;gravatar icon-gravatar&#39;, :size =&gt; 10, :title =&gt; assigned_string).to_s.html_safe
</span><span class='line'>           end
</span><span class='line'>           subject &lt;&lt; view.link_to_issue(issue).html_safe
</span><span class='line'><span class="gi">+          subject &lt;&lt; &quot; - &lt;strong&gt;#{issue.assigned_to}&lt;/strong&gt;&quot;</span>
</span><span class='line'>           subject &lt;&lt; &#39;&lt;/span&gt;&#39;.html_safe
</span><span class='line'>           html_subject(options, subject, :css =&gt; &quot;issue-subject&quot;, :title =&gt; issue.subject) + &quot;\n&quot;
</span><span class='line'>           when :image
</span></code></pre></td></tr></table></div></figure>


<h2>redmine ガントチャートのチケットリストの幅を広げる</h2>

<p><code>REDMINE-HOME/app/views/gantts/show.html.erb</code> を修正する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gu">@@ -32,7 +32,7 @@</span>
</span><span class='line'> &lt;% zoom = 1
</span><span class='line'> @gantt.zoom.times { zoom = zoom * 2 }
</span><span class='line'>
</span><span class='line'><span class="gd">-subject_width = 330</span>
</span><span class='line'><span class="gi">+subject_width = 550</span>
</span><span class='line'> header_heigth = 18
</span><span class='line'>
</span><span class='line'> headers_height = header_heigth
</span></code></pre></td></tr></table></div></figure>


<p>チケットリストの幅ってのはこれ。</p>

<p><img src="http://momota.github.io/images/20131122_redmine/gant_redmine.png" alt="subject_width" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[trema をインストールする (Ruby 2.0)]]></title>
    <link href="http://momota.github.io/blog/2013/11/13/trema/"/>
    <updated>2013-11-13T00:02:00+09:00</updated>
    <id>http://momota.github.io/blog/2013/11/13/trema</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/trema/trema">trema</a> は、ネットワークをソフトウェアでコントロールするという思想のSDNの中のひとつ、openflowのコントローラを開発するためのフレームワーク。</p>

<p>インストール環境は、 ubuntu12.04.2 LTS on vagrant on windows 7。</p>

<p>インストールする trema バージョンは 0.4.3。</p>

<p>ruby バージョンは 2.0.0p247。</p>

<!-- more -->


<h2>1. trema に必要なパッケージをインストールする</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo apt-get install gcc make ruby-dev libopenssl-ruby libpcap-dev libsqlite3-dev libglib2.0-dev
</span></code></pre></td></tr></table></div></figure>


<h2>2. 作業ディレクトリ dev を作り、移動する</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>mkdir dev
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>dev
</span></code></pre></td></tr></table></div></figure>


<h2>3. github から最新のコードをクローンする</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git clone git@github.com:trema/trema.git
</span><span class='line'>Cloning into <span class="s1">&#39;trema&#39;</span>...
</span><span class='line'>Enter passphrase <span class="k">for </span>key <span class="s1">&#39;/home/momota/.ssh/id_rsa&#39;</span>: *********************
</span><span class='line'>remote: Counting objects: 18921, <span class="k">done</span>.
</span><span class='line'>remote: Compressing objects: 100% <span class="o">(</span>5536/5536<span class="o">)</span>, <span class="k">done</span>.
</span><span class='line'>remote: Total 18921 <span class="o">(</span>delta 14585<span class="o">)</span>, reused 17492 <span class="o">(</span>delta 13303<span class="o">)</span>
</span><span class='line'>Receiving objects: 100% <span class="o">(</span>18921/18921<span class="o">)</span>, 17.31 MiB | 15 KiB/s, <span class="k">done</span>.
</span><span class='line'>Resolving deltas: 100% <span class="o">(</span>14585/14585<span class="o">)</span>, <span class="k">done</span>.
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>trema
</span></code></pre></td></tr></table></div></figure>


<h2>4. trema を動かすための ruby バージョンを rbenv で 2.0 系に指定する</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rbenv <span class="nb">local </span>2.0.0-p247
</span><span class='line'><span class="nv">$ </span>rbenv rehash
</span><span class='line'><span class="nv">$ </span>ruby -v
</span><span class='line'>ruby 2.0.0p247 <span class="o">(</span>2013-06-27 revision 41674<span class="o">)</span> <span class="o">[</span>x86_64-linux<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<h2>5. bundler で関連 gem をインストールする</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>gem install bundle
</span><span class='line'><span class="nv">$ </span>bundle -v
</span><span class='line'>Bundler version 1.3.5
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>bundle install --path vendor/bundle
</span><span class='line'>Fetching gem metadata from https://rubygems.org/.........
</span><span class='line'>Fetching gem metadata from https://rubygems.org/..
</span><span class='line'>Resolving dependencies...
</span><span class='line'>Installing rake <span class="o">(</span>10.1.0<span class="o">)</span>
</span><span class='line'>Installing Platform <span class="o">(</span>0.4.0<span class="o">)</span>
</span><span class='line'>Installing open4 <span class="o">(</span>1.3.0<span class="o">)</span>
</span><span class='line'>Installing POpen4 <span class="o">(</span>0.1.4<span class="o">)</span>
</span><span class='line'>Installing archive-tar-minitar <span class="o">(</span>0.5.2<span class="o">)</span>
</span><span class='line'>Installing ffi <span class="o">(</span>1.9.0<span class="o">)</span>
</span><span class='line'>Installing childprocess <span class="o">(</span>0.3.9<span class="o">)</span>
</span><span class='line'>Installing builder <span class="o">(</span>3.2.2<span class="o">)</span>
</span><span class='line'>Installing diff-lcs <span class="o">(</span>1.2.4<span class="o">)</span>
</span><span class='line'>Installing multi_json <span class="o">(</span>1.8.0<span class="o">)</span>
</span><span class='line'>Installing gherkin <span class="o">(</span>2.12.1<span class="o">)</span>
</span><span class='line'>Installing multi_test <span class="o">(</span>0.0.2<span class="o">)</span>
</span><span class='line'>Installing cucumber <span class="o">(</span>1.3.8<span class="o">)</span>
</span><span class='line'>Installing rspec-expectations <span class="o">(</span>2.14.3<span class="o">)</span>
</span><span class='line'>Installing aruba <span class="o">(</span>0.5.3<span class="o">)</span>
</span><span class='line'>Installing bindata <span class="o">(</span>1.6.0<span class="o">)</span>
</span><span class='line'>Using bundler <span class="o">(</span>1.3.5<span class="o">)</span>
</span><span class='line'>Installing sexp_processor <span class="o">(</span>4.3.0<span class="o">)</span>
</span><span class='line'>Installing ruby_parser <span class="o">(</span>3.2.2<span class="o">)</span>
</span><span class='line'>Installing flay <span class="o">(</span>2.4.0<span class="o">)</span>
</span><span class='line'>Installing flog <span class="o">(</span>4.1.2<span class="o">)</span>
</span><span class='line'>Installing gli <span class="o">(</span>2.8.0<span class="o">)</span>
</span><span class='line'>Installing json <span class="o">(</span>1.8.0<span class="o">)</span>
</span><span class='line'>Installing mime-types <span class="o">(</span>1.25<span class="o">)</span>
</span><span class='line'>Installing paper_house <span class="o">(</span>0.4.0<span class="o">)</span>
</span><span class='line'>Installing pio <span class="o">(</span>0.2.4<span class="o">)</span>
</span><span class='line'>Installing rdoc <span class="o">(</span>4.0.1<span class="o">)</span>
</span><span class='line'>Installing redcarpet <span class="o">(</span>3.0.0<span class="o">)</span>
</span><span class='line'>Installing ruby2ruby <span class="o">(</span>2.0.6<span class="o">)</span>
</span><span class='line'>Installing reek <span class="o">(</span>1.3.3<span class="o">)</span>
</span><span class='line'>Installing rest-client <span class="o">(</span>1.6.7<span class="o">)</span>
</span><span class='line'>Installing relish <span class="o">(</span>0.7<span class="o">)</span>
</span><span class='line'>Installing rspec-core <span class="o">(</span>2.14.5<span class="o">)</span>
</span><span class='line'>Installing rspec-mocks <span class="o">(</span>2.14.3<span class="o">)</span>
</span><span class='line'>Installing rspec <span class="o">(</span>2.14.1<span class="o">)</span>
</span><span class='line'>Using trema <span class="o">(</span>0.4.2<span class="o">)</span> from <span class="nb">source </span>at /home/momota/trema_train/trema
</span><span class='line'>Installing yard <span class="o">(</span>0.8.7.2<span class="o">)</span>
</span><span class='line'>Your bundle is <span class="nb">complete</span>!
</span><span class='line'>It was installed into ./vendor/bundle
</span><span class='line'>Post-install message from rdoc:
</span><span class='line'>Depending on your version of ruby, you may need to install ruby rdoc/ri data:
</span><span class='line'>
</span><span class='line'>&lt;<span class="o">=</span> 1.8.6 : <span class="nv">unsupported</span>
</span><span class='line'> <span class="o">=</span> 1.8.7 : gem install rdoc-data; rdoc-data --install
</span><span class='line'> <span class="o">=</span> 1.9.1 : gem install rdoc-data; rdoc-data --install
</span><span class='line'>&gt;<span class="o">=</span> 1.9.2 : nothing to <span class="k">do</span>! Yay!
</span><span class='line'>Post-install message from reek:
</span><span class='line'>Thank you <span class="k">for </span>downloading Reek. For info see the reek wiki http://wiki.github.com/troessner/reek
</span></code></pre></td></tr></table></div></figure>


<h2>6. trema をビルドする</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake
</span></code></pre></td></tr></table></div></figure>


<h2>7. インストールできたか確認する</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>./trema --version
</span><span class='line'>trema version 0.4.3
</span></code></pre></td></tr></table></div></figure>


<h2>8. サンプルプログラムを動かしてみる</h2>

<p>openflow コントローラの実装 <code>./src/examples/hello_trema/hello-trema.rb</code> のソースは以下。
Controller クラスを継承してメソッドを実装するだけ。
datapath_id は仮想スイッチの IDのようだ。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">HelloTrema</span> <span class="o">&lt;</span> <span class="no">Controller</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">switch_ready</span> <span class="n">datapath_id</span>
</span><span class='line'>    <span class="n">info</span> <span class="s2">&quot;Hello %#x!&quot;</span> <span class="o">%</span> <span class="n">datapath_id</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>仮想スイッチの設定ファイル <code>./src/examples/hello_trema/sample.conf</code> は以下の内容が記載されている。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">vswitch</span> <span class="p">{</span> <span class="n">datapath_id</span> <span class="s2">&quot;0xabc&quot;</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>実行してみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>./trema run ./src/examples/hello_trema/hello-trema.rb -c ./src/examples/hello_trema/sample.conf
</span><span class='line'>Hello 0xabc!
</span><span class='line'>^C
</span><span class='line'>terminated
</span></code></pre></td></tr></table></div></figure>


<p>無事に動いた。
Let&rsquo;s enjoy SDN.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[眠れなくて、高校の頃聴いてた音楽を思い返していたら楽しくなってきた]]></title>
    <link href="http://momota.github.io/blog/2013/10/13/music/"/>
    <updated>2013-10-13T04:38:00+09:00</updated>
    <id>http://momota.github.io/blog/2013/10/13/music</id>
    <content type="html"><![CDATA[<p>眠れなくて、最近同僚に「高校の頃、どんな音楽聴いてたの？」と言われたのを思い出して、そういえば俺どんな音楽聴いてたんだっけ？って思い出してたらなんか楽しくなってきたので記す。
今でも聴いている音楽とかもあるけど、最近なぜかあまり聴かなくなったやつを中心に書く。そういえば、MD プレイヤーとかで登下校中に聴いてたなあ。</p>

<!-- more -->


<h2>邦楽</h2>

<p>まとめてみると、スカっぽいのが好きだったのに気づいた。</p>

<h3>BACK DROP BOMB</h3>

<p>なぜか真っ先に思い出したのが BACK DROP BOMB,</p>

<iframe width="420" height="315" src="http://momota.github.io//www.youtube.com/embed/7Sd7TX0ZAYg" frameborder="0" allowfullscreen></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=FFFFFF&IS2=1&bg1=FFFFFF&fc1=000000&lc1=000000&t=momotamakonob-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00005H02V" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h3>BRAHMAN</h3>

<iframe width="420" height="315" src="http://momota.github.io//www.youtube.com/embed/_N_0YO-fjnM" frameborder="0" allowfullscreen></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=FFFFFF&IS2=1&bg1=FFFFFF&fc1=000000&lc1=000000&t=momotamakonob-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00005F3LI" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h3>SNAIL RAMP</h3>

<iframe width="420" height="315" src="http://momota.github.io//www.youtube.com/embed/4nuzi4WPVQs" frameborder="0" allowfullscreen></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=FFFFFF&IS2=1&bg1=FFFFFF&fc1=000000&lc1=000000&t=momotamakonob-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00003Q47W" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h3>KEMURI</h3>

<iframe width="420" height="315" src="http://momota.github.io//www.youtube.com/embed/KFyezEqPXtU" frameborder="0" allowfullscreen></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=FFFFFF&IS2=1&bg1=FFFFFF&fc1=000000&lc1=000000&t=momotamakonob-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00005GU6E" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h3>THUMB</h3>

<iframe width="420" height="315" src="http://momota.github.io//www.youtube.com/embed/wcr2q9iPp40" frameborder="0" allowfullscreen></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=FFFFFF&IS2=1&bg1=FFFFFF&fc1=000000&lc1=000000&t=momotamakonob-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00004SAQ2" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h3>BLANKY JET CITY</h3>

<iframe width="420" height="315" src="http://momota.github.io//www.youtube.com/embed/OQUhMrD5DuY" frameborder="0" allowfullscreen></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=FFFFFF&IS2=1&bg1=FFFFFF&fc1=000000&lc1=000000&t=momotamakonob-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00005FJVT" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h2>洋楽</h2>

<h3>KORN</h3>

<iframe width="560" height="315" src="http://momota.github.io//www.youtube.com/embed/2s3iGpDqQpQ" frameborder="0" allowfullscreen></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=FFFFFF&IS2=1&bg1=FFFFFF&fc1=000000&lc1=000000&t=momotamakonob-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B0000365OR" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h3>Limp Bizkit</h3>

<iframe width="560" height="315" src="http://momota.github.io//www.youtube.com/embed/Dn8vzTsnPps" frameborder="0" allowfullscreen></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=FFFFFF&IS2=1&bg1=FFFFFF&fc1=000000&lc1=000000&t=momotamakonob-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00000JCB2" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h3>Green day</h3>

<iframe width="420" height="315" src="http://momota.github.io//www.youtube.com/embed/NUTGr5t3MoY" frameborder="0" allowfullscreen></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=FFFFFF&IS2=1&bg1=FFFFFF&fc1=000000&lc1=000000&t=momotamakonob-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B000002MP2" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h3>Rage Against The Machine</h3>

<iframe width="420" height="315" src="http://momota.github.io//www.youtube.com/embed/H0kJLW2EwMg" frameborder="0" allowfullscreen></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=FFFFFF&IS2=1&bg1=FFFFFF&fc1=000000&lc1=000000&t=momotamakonob-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00002MZ2C" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h3>The Offspring</h3>

<iframe width="560" height="315" src="http://momota.github.io//www.youtube.com/embed/nzY2Qcu5i2A" frameborder="0" allowfullscreen></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=FFFFFF&IS2=1&bg1=FFFFFF&fc1=000000&lc1=000000&t=momotamakonob-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B007W4DXHE" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h3>Smaching pumpkins</h3>

<iframe width="420" height="315" src="http://momota.github.io//www.youtube.com/embed/xmUZ6nCFNoU" frameborder="0" allowfullscreen></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=FFFFFF&IS2=1&bg1=FFFFFF&fc1=000000&lc1=000000&t=momotamakonob-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B005MW8CWY" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>



]]></content>
  </entry>
  
</feed>
