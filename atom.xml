<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[momota.txt]]></title>
  <link href="http://momota.github.io/atom.xml" rel="self"/>
  <link href="http://momota.github.io/"/>
  <updated>2018-11-06T20:05:49+09:00</updated>
  <id>http://momota.github.io/</id>
  <author>
    <name><![CDATA[momota]]></name>
    <email><![CDATA[makoto.momota@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[serverless framework による AWS Lambda ローカル開発]]></title>
    <link href="http://momota.github.io/blog/2018/11/05/serverless-framework/"/>
    <updated>2018-11-05T20:11:00+09:00</updated>
    <id>http://momota.github.io/blog/2018/11/05/serverless-framework</id>
    <content type="html"><![CDATA[<p><img src="http://momota.github.io/images/20181105_serverless-framework/serverless-framework-logo.png" alt="serverless framework logo" /></p>

<p><a href="https://serverless.com/">Serverless Framework</a> を使うことにより、FaaS (AWS Lambda, GCP Cloud Functions, Azure functions, など) の開発をローカルで実施できる。
ローカル環境で自分の好きなエディタ・IDEで開発やテストが可能になるし、デプロイも容易になる。</p>

<p>AWS には AWS SAM もあるが、他のクラウドプロバイダでも開発物やノウハウが使い回せることが期待できるので、3rd パーティ製の Serverless Framework を選ぶ。</p>

<p>本稿では、Serverless Framework の導入と、Hello Worldアプリ (AWS Lambda) のデプロイについて書く。</p>

<h2>環境</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>cat /etc/lsb-release
</span><span class='line'><span class="nv">DISTRIB_ID</span><span class="o">=</span>Ubuntu
</span><span class='line'><span class="nv">DISTRIB_RELEASE</span><span class="o">=</span>18.04
</span><span class='line'><span class="nv">DISTRIB_CODENAME</span><span class="o">=</span>bionic
</span><span class='line'><span class="nv">DISTRIB_DESCRIPTION</span><span class="o">=</span><span class="s2">&quot;Ubuntu 18.04.3 LTS&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<h2>Serverless framework のインストール</h2>

<p>まず Node.js (v6.5.0以降) と npm をインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo apt-get update
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>sudo apt-get install nodejs
</span><span class='line'><span class="nv">$ </span>nodejs --version
</span><span class='line'>v8,10,0
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>sudo apt-get install npm
</span><span class='line'><span class="nv">$ </span>npm --version
</span><span class='line'>3.5.2
</span></code></pre></td></tr></table></div></figure>


<p>npm で serverless framework をインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo npm install -g serverless
</span><span class='line'><span class="nv">$ </span>serverless --version
</span><span class='line'>1.32.0
</span></code></pre></td></tr></table></div></figure>


<h2>AWS アクセスキーを設定する</h2>

<ol>
<li>AWSアカウントを作り、マネージドコンソールからIAMページにアクセスする</li>
<li>ペインのユーザをクリックし、「ユーザを追加」をクリックする

<ul>
<li>適切なユーザ名を入力する</li>
<li>アクセスの種類の、「プログラムによるアクセス」にチェックをいれ、次へ</li>
<li>アクセス許可の設定は、「既存のポリシーを直接アタッチ」で、「AdministratorAccess」を選択し、次へ</li>
<li>レビューして、問題なければ作成する</li>
</ul>
</li>
<li>アクセスキーIDとシークレットアクセスキーをコピーする</li>
<li>Serverless framework に設定する</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># パターン1: 環境変数に設定</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">export </span><span class="nv">AWS_ACCESS_KEY_ID</span><span class="o">=</span>&lt;your-key-here&gt;
</span><span class='line'><span class="nv">$ </span><span class="nb">export </span><span class="nv">AWS_SECRET_ACCESS_KEY</span><span class="o">=</span>&lt;your-secret-key-here&gt;
</span><span class='line'>
</span><span class='line'><span class="c"># パターン2: serverless config credentials コマンドで設定</span>
</span><span class='line'><span class="nv">$ </span>serverless config credentials --provider aws --key &lt;your-key-here&gt; --secret &lt;your-secret-key-here&gt;
</span><span class='line'><span class="c"># =&gt; ~/.aws/credentials が生成される</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Serverless framework で Hello World</h2>

<p>まず、作業ディレクトリの作成と、<code>package.json</code> を作成する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>mkdir my-express-application <span class="o">&amp;&amp;</span> <span class="nb">cd </span>my-express-application
</span><span class='line'><span class="nv">$ </span>npm init -f
</span></code></pre></td></tr></table></div></figure>


<p>いくつかのライブラリをインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>npm install --save express serverless-http
</span></code></pre></td></tr></table></div></figure>


<p>アプリケーションを <code>index.js</code> に書く。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kr">const</span> <span class="nx">serverless</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;serverless-http&#39;</span><span class="p">);</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">express</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;express&#39;</span><span class="p">);</span>
</span><span class='line'><span class="kr">const</span> <span class="nx">app</span> <span class="o">=</span> <span class="nx">express</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">res</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">({</span>
</span><span class='line'>    <span class="nx">id</span><span class="o">:</span> <span class="s1">&#39;00001&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">message</span><span class="o">:</span> <span class="s1">&#39;Hello World!&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="p">}));</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="p">.</span><span class="nx">handler</span> <span class="o">=</span> <span class="nx">serverless</span><span class="p">(</span><span class="nx">app</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>これはルートパス <code>/</code> にアクセスがあった場合に、 <code>{ id: '00001', message: 'Hello World!' }</code> を返す単純なアプリ。</p>

<p>これをデプロイするため、以下の <code>serverless.yml</code> を作成する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">service</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">my-express-application</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">provider</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">aws</span>
</span><span class='line'>  <span class="l-Scalar-Plain">runtime</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nodejs8.10</span>
</span><span class='line'>  <span class="l-Scalar-Plain">stage</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">dev</span>
</span><span class='line'>  <span class="l-Scalar-Plain">region</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">ap-northeast-1</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">functions</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">app</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">handler</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">index.handler</span>
</span><span class='line'>    <span class="l-Scalar-Plain">events</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">http</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">ANY /</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">http</span><span class="p-Indicator">:</span> <span class="s">&#39;ANY</span><span class="nv"> </span><span class="s">{proxy+}&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>関数をデプロイする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>serverless deploy
</span><span class='line'>...snip...
</span><span class='line'>Service Information
</span><span class='line'>service: my-express-application
</span><span class='line'>stage: dev
</span><span class='line'>region: ap-northeast-1
</span><span class='line'>stack: my-express-application-dev
</span><span class='line'>api keys:
</span><span class='line'>  None
</span><span class='line'>endpoints:
</span><span class='line'>  ANY - https://xxxxxxxxxx.execute-api.ap-northeast-1.amazonaws.com/dev
</span><span class='line'>  ANY - https://xxxxxxxxxx.execute-api.ap-northeast-1.amazonaws.com/dev/<span class="o">{</span>proxy+<span class="o">}</span>
</span><span class='line'>functions:
</span><span class='line'>  app: my-express-application-dev-app
</span></code></pre></td></tr></table></div></figure>


<p>数分後にデプロイが完了し、<code>endpoints</code> の情報が出力される。
この URL へアクセスし、動作確認する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl -X GET https://xxxxxxxxxx.execute-api.ap-northeast-1.amazonaws.com/dev
</span><span class='line'><span class="o">{</span><span class="s2">&quot;id&quot;</span>:<span class="s2">&quot;00001&quot;</span>,<span class="s2">&quot;message&quot;</span>:<span class="s2">&quot;Hello World!&quot;</span><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>アプリケーションで定義した JSON が返ってくる。</p>

<h2>参考</h2>

<ul>
<li><a href="https://serverless.com/framework/docs/providers/aws/guide/quick-start/">Serverless Framework &ndash; AWS Lambda Guide &ndash; Quick Start</a></li>
<li><a href="https://serverless.com/framework/docs/providers/aws/guide/credentials/">Serverless Framework &ndash; AWS Lambda Guide &ndash; Credentials</a></li>
<li><a href="https://serverless.com/blog/serverless-express-rest-api/">Deploy a REST API using Serverless, Express and Node.js</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[kong でアクセス制御]]></title>
    <link href="http://momota.github.io/blog/2018/10/29/acl-on-kong/"/>
    <updated>2018-10-29T14:02:00+09:00</updated>
    <id>http://momota.github.io/blog/2018/10/29/acl-on-kong</id>
    <content type="html"><![CDATA[<p><img src="http://momota.github.io/images/20181029_acl-on-kong/kong-diag.png" alt="kong diagram" /></p>

<p>Kong を利用して、各 API に対して上記のようなアクセスを制御する。</p>

<ul>
<li>Consumer <code>aaa</code> は API a に対してアクセスできる。しかし、API b にはアクセスできない。</li>
<li>Consumer <code>bbb</code> は API b に対してアクセスできる。しかし、API a にはアクセスできない。</li>
</ul>


<p>Kong のプラグイン <code>key-auth</code> と <code>acl</code> により実装する。</p>

<p>各設定をまとめると以下。</p>

<table>
<thead>
<tr>
<th>ユーザ </th>
<th> service </th>
<th> route (kong path) </th>
<th> api key   </th>
<th> consumer </th>
<th> group</th>
</tr>
</thead>
<tbody>
<tr>
<td>aaa    </td>
<td> aaa-api </td>
<td> /aaa              </td>
<td> aaaaaaaaa </td>
<td> aaa      </td>
<td> aaa-group</td>
</tr>
<tr>
<td>bbb    </td>
<td> bbb-api </td>
<td> /bbb              </td>
<td> bbbbbbbbb </td>
<td> bbb      </td>
<td> bbb-group</td>
</tr>
</tbody>
</table>


<!-- more -->


<h2>Service の設定</h2>

<p>API a の service を定義する。</p>

<p>Service 名は <code>aaa-api</code>, 実体は mockbin.org。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl -i -X POST --url http://localhost:8001/services <span class="se">\</span>
</span><span class='line'>&gt; --data <span class="s2">&quot;name=aaa-api&quot;</span> <span class="se">\</span>
</span><span class='line'>&gt; --data <span class="s2">&quot;url=http://mockbin.org&quot;</span>
</span><span class='line'>HTTP/1.1 201 Created
</span><span class='line'>Date: Fri, 26 Oct 2018 06:47:50 GMT
</span><span class='line'>Content-Type: application/json; <span class="nv">charset</span><span class="o">=</span>utf-8
</span><span class='line'>Connection: keep-alive
</span><span class='line'>Access-Control-Allow-Origin: *
</span><span class='line'>Server: kong/0.14.1
</span><span class='line'>Content-Length: 251
</span><span class='line'>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;host&quot;</span>: <span class="s2">&quot;mockbin.org&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;created_at&quot;</span>: 1540536470,
</span><span class='line'>  <span class="s2">&quot;connect_timeout&quot;</span>: 60000,
</span><span class='line'>  <span class="s2">&quot;id&quot;</span>: <span class="s2">&quot;b371024b-cebf-4065-a1bf-58ed9aad8dce&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;protocol&quot;</span>: <span class="s2">&quot;http&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;aaa-api&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;read_timeout&quot;</span>: 60000,
</span><span class='line'>  <span class="s2">&quot;port&quot;</span>: 80,
</span><span class='line'>  <span class="s2">&quot;path&quot;</span>: null,
</span><span class='line'>  <span class="s2">&quot;updated_at&quot;</span>: 1540536470,
</span><span class='line'>  <span class="s2">&quot;retries&quot;</span>: 5,
</span><span class='line'>  <span class="s2">&quot;write_timeout&quot;</span>: 60000
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>API b の service を定義する。</p>

<p>Service 名は <code>bbb-api</code>, 実体は www.gaitameonline.com。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl -i -X POST http://localhost:8001/services/ <span class="se">\</span>
</span><span class='line'>&gt; --data <span class="s2">&quot;name=bbb-api&quot;</span> <span class="se">\</span>
</span><span class='line'>&gt; --data <span class="s2">&quot;url=https://www.gaitameonline.com/rateaj/getrate&quot;</span>
</span><span class='line'>HTTP/1.1 201 Created
</span><span class='line'>Date: Fri, 26 Oct 2018 07:08:42 GMT
</span><span class='line'>Content-Type: application/json; <span class="nv">charset</span><span class="o">=</span>utf-8
</span><span class='line'>Connection: keep-alive
</span><span class='line'>Access-Control-Allow-Origin: *
</span><span class='line'>Server: kong/0.14.1
</span><span class='line'>Content-Length: 278
</span><span class='line'>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;host&quot;</span>: <span class="s2">&quot;www.gaitameonline.com&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;created_at&quot;</span>: 1540537722,
</span><span class='line'>  <span class="s2">&quot;connect_timeout&quot;</span>: 60000,
</span><span class='line'>  <span class="s2">&quot;id&quot;</span>: <span class="s2">&quot;1d85e93c-8bc7-46f8-afed-a864ea8e0340&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;protocol&quot;</span>: <span class="s2">&quot;https&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;bbb-api&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;read_timeout&quot;</span>: 60000,
</span><span class='line'>  <span class="s2">&quot;port&quot;</span>: 443,
</span><span class='line'>  <span class="s2">&quot;path&quot;</span>: <span class="s2">&quot;/rateaj/getrate&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;updated_at&quot;</span>: 1540537722,
</span><span class='line'>  <span class="s2">&quot;retries&quot;</span>: 5,
</span><span class='line'>  <span class="s2">&quot;write_timeout&quot;</span>: 60000
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Route の定義</h2>

<p>API a に route を設定する。</p>

<p>Consumer <code>aaa</code> には、Kong の <code>/aaa</code> という PATH を公開したいので、<code>paths[]=/aaa</code> を定義する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl -i -X POST http://localhost:8001/services/aaa-api/routes <span class="se">\</span>
</span><span class='line'>&gt; --data <span class="s2">&quot;paths[]=/aaa&quot;</span>
</span><span class='line'>HTTP/1.1 201 Created
</span><span class='line'>Date: Fri, 26 Oct 2018 06:55:40 GMT
</span><span class='line'>Content-Type: application/json; <span class="nv">charset</span><span class="o">=</span>utf-8
</span><span class='line'>Connection: keep-alive
</span><span class='line'>Access-Control-Allow-Origin: *
</span><span class='line'>Server: kong/0.14.1
</span><span class='line'>Content-Length: 284
</span><span class='line'>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;created_at&quot;</span>: 1540536940,
</span><span class='line'>  <span class="s2">&quot;strip_path&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>  <span class="s2">&quot;hosts&quot;</span>: null,
</span><span class='line'>  <span class="s2">&quot;preserve_host&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>  <span class="s2">&quot;regex_priority&quot;</span>: 0,
</span><span class='line'>  <span class="s2">&quot;updated_at&quot;</span>: 1540536940,
</span><span class='line'>  <span class="s2">&quot;paths&quot;</span>: <span class="o">[</span>
</span><span class='line'>    <span class="s2">&quot;/aaa&quot;</span>
</span><span class='line'>  <span class="o">]</span>,
</span><span class='line'>  <span class="s2">&quot;service&quot;</span>: <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;id&quot;</span>: <span class="s2">&quot;b371024b-cebf-4065-a1bf-58ed9aad8dce&quot;</span>
</span><span class='line'>  <span class="o">}</span>,
</span><span class='line'>  <span class="s2">&quot;methods&quot;</span>: null,
</span><span class='line'>  <span class="s2">&quot;protocols&quot;</span>: <span class="o">[</span>
</span><span class='line'>    <span class="s2">&quot;http&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;https&quot;</span>
</span><span class='line'>  <span class="o">]</span>,
</span><span class='line'>  <span class="s2">&quot;id&quot;</span>: <span class="s2">&quot;8ecba70c-41c8-4152-b2c1-5caaca7e42ac&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>API b にも同様に route を設定する。
Consumer <code>bbb</code> に、Kong の <code>/bbb</code> という PATHを公開する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl -i -X POST http://localhost:8001/services/bbb-api/routes <span class="se">\</span>
</span><span class='line'>&gt; --data <span class="s2">&quot;paths[]=/bbb&quot;</span>
</span><span class='line'>HTTP/1.1 201 Created
</span><span class='line'>Date: Fri, 26 Oct 2018 07:12:23 GMT
</span><span class='line'>Content-Type: application/json; <span class="nv">charset</span><span class="o">=</span>utf-8
</span><span class='line'>Connection: keep-alive
</span><span class='line'>Access-Control-Allow-Origin: *
</span><span class='line'>Server: kong/0.14.1
</span><span class='line'>Content-Length: 284
</span><span class='line'>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;created_at&quot;</span>: 1540537943,
</span><span class='line'>  <span class="s2">&quot;strip_path&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>  <span class="s2">&quot;hosts&quot;</span>: null,
</span><span class='line'>  <span class="s2">&quot;preserve_host&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>  <span class="s2">&quot;regex_priority&quot;</span>: 0,
</span><span class='line'>  <span class="s2">&quot;updated_at&quot;</span>: 1540537943,
</span><span class='line'>  <span class="s2">&quot;paths&quot;</span>: <span class="o">[</span>
</span><span class='line'>    <span class="s2">&quot;/bbb&quot;</span>
</span><span class='line'>  <span class="o">]</span>,
</span><span class='line'>  <span class="s2">&quot;service&quot;</span>: <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;id&quot;</span>: <span class="s2">&quot;1d85e93c-8bc7-46f8-afed-a864ea8e0340&quot;</span>
</span><span class='line'>  <span class="o">}</span>,
</span><span class='line'>  <span class="s2">&quot;methods&quot;</span>: null,
</span><span class='line'>  <span class="s2">&quot;protocols&quot;</span>: <span class="o">[</span>
</span><span class='line'>    <span class="s2">&quot;http&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;https&quot;</span>
</span><span class='line'>  <span class="o">]</span>,
</span><span class='line'>  <span class="s2">&quot;id&quot;</span>: <span class="s2">&quot;6bea20ce-39c3-48ad-a912-948b33764453&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>ここまでで、以下のようなプロキシ設定ができた</p>

<table>
<thead>
<tr>
<th>アクセス先                </th>
<th> プロキシ先</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="http://localhost:8000/aaa">http://localhost:8000/aaa</a> </td>
<td> <a href="http://mockbin.org">http://mockbin.org</a></td>
</tr>
<tr>
<td><a href="http://localhost:8000/bbb">http://localhost:8000/bbb</a> </td>
<td> <a href="https://www.gaitameonline.com/rateaj/getrate">https://www.gaitameonline.com/rateaj/getrate</a></td>
</tr>
</tbody>
</table>


<h2>key-auth プラグインによる API キー認証設定</h2>

<p>key-auth プラグインを有効化し、API キーがない場合はアクセス拒否する。</p>

<p>各 service に対して有効化する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl -i -X POST http://localhost:8001/services/aaa-api/plugins --data <span class="s2">&quot;name=key-auth&quot;</span>
</span><span class='line'>HTTP/1.1 201 Created
</span><span class='line'>Date: Fri, 26 Oct 2018 07:15:31 GMT
</span><span class='line'>Content-Type: application/json; <span class="nv">charset</span><span class="o">=</span>utf-8
</span><span class='line'>Connection: keep-alive
</span><span class='line'>Access-Control-Allow-Origin: *
</span><span class='line'>Server: kong/0.14.1
</span><span class='line'>Content-Length: 276
</span><span class='line'>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;created_at&quot;</span>: 1540538131449,
</span><span class='line'>  <span class="s2">&quot;config&quot;</span>: <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;key_in_body&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>    <span class="s2">&quot;run_on_preflight&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>    <span class="s2">&quot;anonymous&quot;</span>: <span class="s2">&quot;&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;hide_credentials&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>    <span class="s2">&quot;key_names&quot;</span>: <span class="o">[</span>
</span><span class='line'>      <span class="s2">&quot;apikey&quot;</span>
</span><span class='line'>    <span class="o">]</span>
</span><span class='line'>  <span class="o">}</span>,
</span><span class='line'>  <span class="s2">&quot;id&quot;</span>: <span class="s2">&quot;d54ca015-295b-4c5a-a8bf-718f05a80d3c&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;service_id&quot;</span>: <span class="s2">&quot;b371024b-cebf-4065-a1bf-58ed9aad8dce&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;key-auth&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;enabled&quot;</span>: <span class="nb">true</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>curl -i -X POST http://localhost:8001/services/bbb-api/plugins --data <span class="s2">&quot;name=key-auth&quot;</span>
</span><span class='line'>HTTP/1.1 201 Created
</span><span class='line'>Date: Fri, 26 Oct 2018 07:16:19 GMT
</span><span class='line'>Content-Type: application/json; <span class="nv">charset</span><span class="o">=</span>utf-8
</span><span class='line'>Connection: keep-alive
</span><span class='line'>Access-Control-Allow-Origin: *
</span><span class='line'>Server: kong/0.14.1
</span><span class='line'>Content-Length: 276
</span><span class='line'>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;created_at&quot;</span>: 1540538179280,
</span><span class='line'>  <span class="s2">&quot;config&quot;</span>: <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;key_in_body&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>    <span class="s2">&quot;run_on_preflight&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>    <span class="s2">&quot;anonymous&quot;</span>: <span class="s2">&quot;&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;hide_credentials&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>    <span class="s2">&quot;key_names&quot;</span>: <span class="o">[</span>
</span><span class='line'>      <span class="s2">&quot;apikey&quot;</span>
</span><span class='line'>    <span class="o">]</span>
</span><span class='line'>  <span class="o">}</span>,
</span><span class='line'>  <span class="s2">&quot;id&quot;</span>: <span class="s2">&quot;dd6fbb6c-29dd-47ad-b4b1-ac5f82065b20&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;service_id&quot;</span>: <span class="s2">&quot;1d85e93c-8bc7-46f8-afed-a864ea8e0340&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;key-auth&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;enabled&quot;</span>: <span class="nb">true</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>API キーがないとアクセスできないことを検証する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl -i -X GET http://localhost:8000/aaa
</span><span class='line'>HTTP/1.1 401 Unauthorized
</span><span class='line'>Date: Fri, 26 Oct 2018 07:16:35 GMT
</span><span class='line'>Content-Type: application/json; <span class="nv">charset</span><span class="o">=</span>utf-8
</span><span class='line'>Connection: keep-alive
</span><span class='line'>WWW-Authenticate: Key <span class="nv">realm</span><span class="o">=</span><span class="s2">&quot;kong&quot;</span>
</span><span class='line'>Server: kong/0.14.1
</span><span class='line'>Content-Length: 41
</span><span class='line'>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;message&quot;</span>: <span class="s2">&quot;No API key found in request&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>curl -i -X GET http://localhost:8000/bbb
</span><span class='line'>HTTP/1.1 401 Unauthorized
</span><span class='line'>Date: Fri, 26 Oct 2018 07:17:05 GMT
</span><span class='line'>Content-Type: application/json; <span class="nv">charset</span><span class="o">=</span>utf-8
</span><span class='line'>Connection: keep-alive
</span><span class='line'>WWW-Authenticate: Key <span class="nv">realm</span><span class="o">=</span><span class="s2">&quot;kong&quot;</span>
</span><span class='line'>Server: kong/0.14.1
</span><span class='line'>Content-Length: 41
</span><span class='line'>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;message&quot;</span>: <span class="s2">&quot;No API key found in request&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Consumer の定義</h2>

<p>Consumer <code>aaa</code> と <code>bbb</code> を作成する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl -i -X POST http://localhost:8001/consumers <span class="se">\</span>
</span><span class='line'>&gt; --data <span class="s2">&quot;username=aaa&quot;</span>
</span><span class='line'>HTTP/1.1 201 Created
</span><span class='line'>Date: Fri, 26 Oct 2018 07:18:35 GMT
</span><span class='line'>Content-Type: application/json; <span class="nv">charset</span><span class="o">=</span>utf-8
</span><span class='line'>Connection: keep-alive
</span><span class='line'>Access-Control-Allow-Origin: *
</span><span class='line'>Server: kong/0.14.1
</span><span class='line'>Content-Length: 104
</span><span class='line'>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;custom_id&quot;</span>: null,
</span><span class='line'>  <span class="s2">&quot;created_at&quot;</span>: 1540432512,
</span><span class='line'>  <span class="s2">&quot;username&quot;</span>: <span class="s2">&quot;aaa&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;id&quot;</span>: <span class="s2">&quot;3cb5f512-ad07-4f27-9aed-4ddff00a020e&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>curl -i -X POST http://localhost:8001/consumers <span class="se">\</span>
</span><span class='line'>&gt; --data <span class="s2">&quot;username=bbb&quot;</span>
</span><span class='line'>HTTP/1.1 201 Created
</span><span class='line'>Date: Fri, 26 Oct 2018 07:18:40 GMT
</span><span class='line'>Content-Type: application/json; <span class="nv">charset</span><span class="o">=</span>utf-8
</span><span class='line'>Connection: keep-alive
</span><span class='line'>Access-Control-Allow-Origin: *
</span><span class='line'>Server: kong/0.14.1
</span><span class='line'>Content-Length: 104
</span><span class='line'>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;custom_id&quot;</span>: null,
</span><span class='line'>  <span class="s2">&quot;created_at&quot;</span>: 1540538320,
</span><span class='line'>  <span class="s2">&quot;username&quot;</span>: <span class="s2">&quot;bbb&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;id&quot;</span>: <span class="s2">&quot;9f8e8674-8d0d-43c9-8c58-59331949e0bd&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>各 Consumer に API キーを発行する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl -i -X POST http://localhost:8001/consumers/aaa/key-auth --data <span class="s2">&quot;key=aaaaaaaaa&quot;</span>
</span><span class='line'>HTTP/1.1 201 Created
</span><span class='line'>Date: Fri, 26 Oct 2018 07:22:12 GMT
</span><span class='line'>Content-Type: application/json; <span class="nv">charset</span><span class="o">=</span>utf-8
</span><span class='line'>Connection: keep-alive
</span><span class='line'>Access-Control-Allow-Origin: *
</span><span class='line'>Server: kong/0.14.1
</span><span class='line'>Content-Length: 144
</span><span class='line'>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;id&quot;</span>: <span class="s2">&quot;c3c822ba-b676-48fe-b0ec-cf2507ec37d6&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;created_at&quot;</span>: 1540538532052,
</span><span class='line'>  <span class="s2">&quot;key&quot;</span>: <span class="s2">&quot;aaaaaaaaa&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;consumer_id&quot;</span>: <span class="s2">&quot;3cb5f512-ad07-4f27-9aed-4ddff00a020e&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>curl -i -X POST http://localhost:8001/consumers/bbb/key-auth --data <span class="s2">&quot;key=bbbbbbbbb&quot;</span>
</span><span class='line'>HTTP/1.1 201 Created
</span><span class='line'>Date: Fri, 26 Oct 2018 07:22:30 GMT
</span><span class='line'>Content-Type: application/json; <span class="nv">charset</span><span class="o">=</span>utf-8
</span><span class='line'>Connection: keep-alive
</span><span class='line'>Access-Control-Allow-Origin: *
</span><span class='line'>Server: kong/0.14.1
</span><span class='line'>Content-Length: 144
</span><span class='line'>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;id&quot;</span>: <span class="s2">&quot;2102cddb-8b79-4c6d-bd77-a942430a0bb4&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;created_at&quot;</span>: 1540538550275,
</span><span class='line'>  <span class="s2">&quot;key&quot;</span>: <span class="s2">&quot;bbbbbbbbb&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;consumer_id&quot;</span>: <span class="s2">&quot;9f8e8674-8d0d-43c9-8c58-59331949e0bd&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>以上の設定で、API キーがあれば API a, API b にはアクセスできるようになった。
しかし、Consumer <code>aaa</code> の API キーで、API a および API b の双方にアクセスできる。
Consumer <code>bbb</code> も双方の API にアクセスできる。</p>

<p>アクセス制御するために、ACL プラグインを利用する。</p>

<h2>acl プラグインの有効化</h2>

<p>acl プラグインを利用することで、service や route 単位のアクセス制御が可能になる。
Consumer をグループに所属させ、グループ単位にアクセス許可する (<code>config.whitelist</code> に許可するグループを定義する) か、アクセス拒否する(<code>config.blacklist</code> に拒否するグループを定義する)。</p>

<p>ここでは、consumer <code>aaa</code> をグループ <code>aaa-group</code> へ、consumer <code>bbb</code> を <code>bbb-group</code> へ所属させ、各サービスへ許可設定をする。</p>

<p>まずは、各サービスに対して、acl プラグインを有効化する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl -i -X POST http://localhost:8001/services/aaa-api/plugins <span class="se">\</span>
</span><span class='line'>&gt; --data <span class="s2">&quot;name=acl&quot;</span> <span class="se">\</span>
</span><span class='line'>&gt; --data <span class="s2">&quot;config.whitelist=aaa-group&quot;</span>
</span><span class='line'>HTTP/1.1 201 Created
</span><span class='line'>Date: Fri, 26 Oct 2018 07:41:16 GMT
</span><span class='line'>Content-Type: application/json; <span class="nv">charset</span><span class="o">=</span>utf-8
</span><span class='line'>Connection: keep-alive
</span><span class='line'>Access-Control-Allow-Origin: *
</span><span class='line'>Server: kong/0.14.1
</span><span class='line'>Content-Length: 217
</span><span class='line'>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;created_at&quot;</span>: 1540539676065,
</span><span class='line'>  <span class="s2">&quot;config&quot;</span>: <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;whitelist&quot;</span>: <span class="o">[</span>
</span><span class='line'>      <span class="s2">&quot;acl-group&quot;</span>
</span><span class='line'>    <span class="o">]</span>,
</span><span class='line'>    <span class="s2">&quot;hide_groups_header&quot;</span>: <span class="nb">false</span>
</span><span class='line'>  <span class="o">}</span>,
</span><span class='line'>  <span class="s2">&quot;id&quot;</span>: <span class="s2">&quot;8625c0cf-ad86-4416-b3f9-08cfb4224fe4&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;service_id&quot;</span>: <span class="s2">&quot;b371024b-cebf-4065-a1bf-58ed9aad8dce&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;acl&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;enabled&quot;</span>: <span class="nb">true</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>curl -i -X POST http://localhost:8001/services/bbb-api/plugins <span class="se">\</span>
</span><span class='line'>&gt; --data <span class="s2">&quot;name=acl&quot;</span> <span class="se">\</span>
</span><span class='line'>&gt; --data <span class="s2">&quot;config.whitelist=bbb-group&quot;</span>
</span><span class='line'>HTTP/1.1 201 Created
</span><span class='line'>Date: Fri, 26 Oct 2018 07:41:52 GMT
</span><span class='line'>Content-Type: application/json; <span class="nv">charset</span><span class="o">=</span>utf-8
</span><span class='line'>Connection: keep-alive
</span><span class='line'>Access-Control-Allow-Origin: *
</span><span class='line'>Server: kong/0.14.1
</span><span class='line'>Content-Length: 217
</span><span class='line'>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;created_at&quot;</span>: 1540539712346,
</span><span class='line'>  <span class="s2">&quot;config&quot;</span>: <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;whitelist&quot;</span>: <span class="o">[</span>
</span><span class='line'>      <span class="s2">&quot;bbb-group&quot;</span>
</span><span class='line'>    <span class="o">]</span>,
</span><span class='line'>    <span class="s2">&quot;hide_groups_header&quot;</span>: <span class="nb">false</span>
</span><span class='line'>  <span class="o">}</span>,
</span><span class='line'>  <span class="s2">&quot;id&quot;</span>: <span class="s2">&quot;d01dfc1e-5a60-4cf5-a8d5-a4d2dd974a4a&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;service_id&quot;</span>: <span class="s2">&quot;1d85e93c-8bc7-46f8-afed-a864ea8e0340&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;acl&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;enabled&quot;</span>: <span class="nb">true</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>各 consumer にグループを設定する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl -i -X POST http://localhost:8001/consumers/aaa/acls --data <span class="s2">&quot;group=aaa-group&quot;</span>
</span><span class='line'>HTTP/1.1 201 Created
</span><span class='line'>Date: Fri, 26 Oct 2018 07:49:50 GMT
</span><span class='line'>Content-Type: application/json; <span class="nv">charset</span><span class="o">=</span>utf-8
</span><span class='line'>Connection: keep-alive
</span><span class='line'>Access-Control-Allow-Origin: *
</span><span class='line'>Server: kong/0.14.1
</span><span class='line'>Content-Length: 146
</span><span class='line'>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;group&quot;</span>: <span class="s2">&quot;aaa-group&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;created_at&quot;</span>: 1540540190325,
</span><span class='line'>  <span class="s2">&quot;id&quot;</span>: <span class="s2">&quot;32928438-8d23-4efe-b457-d735be430f7e&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;consumer_id&quot;</span>: <span class="s2">&quot;3cb5f512-ad07-4f27-9aed-4ddff00a020e&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>curl -i -X POST http://localhost:8001/consumers/bbb/acls --data <span class="s2">&quot;group=bbb-group&quot;</span>
</span><span class='line'>HTTP/1.1 201 Created
</span><span class='line'>Date: Fri, 26 Oct 2018 07:50:09 GMT
</span><span class='line'>Content-Type: application/json; <span class="nv">charset</span><span class="o">=</span>utf-8
</span><span class='line'>Connection: keep-alive
</span><span class='line'>Access-Control-Allow-Origin: *
</span><span class='line'>Server: kong/0.14.1
</span><span class='line'>Content-Length: 146
</span><span class='line'>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;group&quot;</span>: <span class="s2">&quot;bbb-group&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;created_at&quot;</span>: 1540540209260,
</span><span class='line'>  <span class="s2">&quot;id&quot;</span>: <span class="s2">&quot;32db4c2b-2c2e-4f20-b869-d9e784fd8a6b&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;consumer_id&quot;</span>: <span class="s2">&quot;9f8e8674-8d0d-43c9-8c58-59331949e0bd&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Consumer <code>aaa</code> が API a にはアクセスでき、API b にはアクセスできないことを検証する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl -i -X GET http://localhost:8000/aaa --header <span class="s2">&quot;apikey:aaaaaaaaa&quot;</span>
</span><span class='line'>HTTP/1.1 200 OK
</span><span class='line'>Content-Type: text/html; <span class="nv">charset</span><span class="o">=</span>utf-8
</span><span class='line'>Content-Length: 10750
</span><span class='line'>Connection: keep-alive
</span><span class='line'>Server: openresty/1.13.6.2
</span><span class='line'>Date: Fri, 26 Oct 2018 07:52:40 GMT
</span><span class='line'>Etag: W/<span class="s2">&quot;29fe-zRGDbSTAzeA2BElashPm2g&quot;</span>
</span><span class='line'>Vary: Accept-Encoding
</span><span class='line'>Via: kong/0.14.1
</span><span class='line'>X-Kong-Upstream-Status: 200
</span><span class='line'>X-Kong-Upstream-Latency: 288
</span><span class='line'>X-Kong-Proxy-Latency: 587
</span><span class='line'>Kong-Request-ID: b85769d55d4927681238e50b07b6ba8c
</span><span class='line'>
</span><span class='line'>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta <span class="nv">charset</span><span class="o">=</span><span class="s2">&quot;utf-8&quot;</span>&gt;&lt;title&gt;Mockbin by Mashape&lt;/title&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;viewport&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no&quot;</span>&gt;&lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text/css&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.4/css/bootstrap.min.css&quot;</span> <span class="nv">media</span><span class="o">=</span><span class="s2">&quot;all&quot;</span>&gt;&lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text/css&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://fonts.googleapis.com/css?family=Open+Sans:400,600|Source+Code+Pro:200,300,400,500,600,700,900&quot;</span> <span class="nv">media</span><span class="o">=</span><span class="s2">&quot;all&quot;</span>&gt;&lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text/css&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.3.0/css/font-awesome.css&quot;</span> <span class="nv">media</span><span class="o">=</span><span class="s2">&quot;all&quot;</span>&gt;&lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text/css&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.4/styles/github.min.css&quot;</span> <span class="nv">media</span><span class="o">=</span><span class="s2">&quot;all&quot;</span>&gt;&lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text/css&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;/static/main.css&quot;</span> <span class="nv">media</span><span class="o">=</span><span class="s2">&quot;all&quot;</span>&gt;&lt;script <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span> <span class="nv">src</span><span class="o">=</span><span class="s2">&quot;https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js&quot;</span>&gt;&lt;/script&gt;&lt;script <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span> <span class="nv">src</span><span class="o">=</span><span class="s2">&quot;https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.4/js/bootstrap.min.js&quot;</span>&gt;&lt;/script&gt;&lt;script <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span> <span class="nv">src</span><span class="o">=</span><span class="s2">&quot;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.4/highlight.min.js&quot;</span>&gt;&lt;/script&gt;&lt;script <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span> <span class="nv">src</span><span class="o">=</span><span class="s2">&quot;https://cdnjs.cloudflare.com/ajax/libs/zeroclipboard/2.2.0/ZeroClipboard.min.js&quot;</span>&gt;&lt;/script&gt;&lt;meta http-equiv<span class="o">=</span><span class="s2">&quot;X-UA-Compatible&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;IE=edge&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;robots&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;index,follow&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;viewport&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no&quot;</span>&gt;&lt;meta <span class="nv">itemprop</span><span class="o">=</span><span class="s2">&quot;name&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;Mockbin by Mashape&quot;</span>&gt;&lt;meta <span class="nv">property</span><span class="o">=</span><span class="s2">&quot;og:title&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;Mockbin by Mashape&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;twitter:title&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;Mockbin by Mashape&quot;</span>&gt;&lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;author&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://www.mashape.com/&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;author&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;Mashape&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;twitter:creator&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;@Mashape&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;description&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;Mockbin allows you to generate custom endpoints to test, mock, and track HTTP requests &amp;amp; responses between libraries, sockets and APIs. Made with Love by Mashape.&quot;</span>&gt;&lt;meta <span class="nv">itemprop</span><span class="o">=</span><span class="s2">&quot;description&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;Mockbin allows you to generate custom endpoints to test, mock, and track HTTP requests &amp;amp; responses between libraries, sockets and APIs. Made with Love by Mashape.&quot;</span>&gt;&lt;meta <span class="nv">property</span><span class="o">=</span><span class="s2">&quot;og:description&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;Mockbin allows you to generate custom endpoints to test, mock, and track HTTP requests &amp;amp; responses between libraries, sockets and APIs. Made with Love by Mashape.&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;twitter:description&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;Mockbin allows you to generate custom endpoints to test, mock, and track HTTP requests &amp;amp; responses between libraries, sockets and APIs. Made with Love by Mashape.&quot;</span>&gt;&lt;meta <span class="nv">itemprop</span><span class="o">=</span><span class="s2">&quot;image&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;https://mockbin.org/public/share.png&quot;</span>&gt;&lt;meta <span class="nv">property</span><span class="o">=</span><span class="s2">&quot;og:image&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;https://mockbin.org/public/share.png&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;twitter:image:src&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;https://mockbin.org/public/share.png&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;twitter:card&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;summary_large_image&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;twitter:site&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;@mashape&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;twitter:domain&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;mockbin.org&quot;</span>&gt;&lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;canonical&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;http://mockbin.org/&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;twitter:url&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;http://mockbin.org/&quot;</span>&gt;&lt;meta <span class="nv">property</span><span class="o">=</span><span class="s2">&quot;og:url&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;http://mockbin.org/&quot;</span>&gt;&lt;meta <span class="nv">property</span><span class="o">=</span><span class="s2">&quot;og:type&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;website&quot;</span>&gt;&lt;meta <span class="nv">property</span><span class="o">=</span><span class="s2">&quot;og:site_name&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;Mockbin by Mashape&quot;</span>&gt;&lt;meta <span class="nv">property</span><span class="o">=</span><span class="s2">&quot;fb:admins&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;227304446&quot;</span>&gt;&lt;meta <span class="nv">property</span><span class="o">=</span><span class="s2">&quot;fb:admins&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;576641408&quot;</span>&gt;&lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;shortcut icon&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;/public/favicon.ico&quot;</span>&gt;&lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;icon&quot;</span> <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;image/x-icon&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;/public/favicon.ico&quot;</span>&gt;&lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text/css&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,700italic,800italic,400,800,700,600,300|Source+Code+Pro:200,300,400,500,600,700,900&quot;</span> <span class="nv">media</span><span class="o">=</span><span class="s2">&quot;all&quot;</span>&gt;&lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text/css&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;/public/style.css&quot;</span> <span class="nv">media</span><span class="o">=</span><span class="s2">&quot;all&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;google-site-verification&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;OIx3DxcNRJ_Kyd7hAtGRhZnggKpv6DRWutY7Ih9R3Ww&quot;</span>&gt;&lt;/head&gt;&lt;body&gt;&lt;header&gt;&lt;nav <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;navbar navbar-default&quot;</span>&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;container&quot;</span>&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;navbar-header&quot;</span>&gt;&lt;button <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;button&quot;</span> data-toggle<span class="o">=</span><span class="s2">&quot;collapse&quot;</span> data-target<span class="o">=</span><span class="s2">&quot;#navbar&quot;</span> <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;navbar-toggle collapsed&quot;</span>&gt;&lt;span <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;icon-bar&quot;</span>&gt;&lt;/span&gt;&lt;span <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;icon-bar&quot;</span>&gt;&lt;/span&gt;&lt;span <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;icon-bar&quot;</span>&gt;&lt;/span&gt;&lt;/button&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;navbar-brand logo&quot;</span>&gt;&lt;span&gt;&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;/&quot;</span>&gt;&lt;span <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;logo fa fa-terminal&quot;</span>&gt;&lt;/span&gt; mockbin&lt;/a&gt; &lt;span <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;text-muted&quot;</span>&gt;by &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://www.mashape.com&quot;</span>&gt;Mashape&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div <span class="nv">id</span><span class="o">=</span><span class="s2">&quot;navbar&quot;</span> <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;collapse navbar-collapse&quot;</span>&gt;&lt;ul <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;nav navbar-nav navbar-right&quot;</span>&gt;&lt;li&gt;&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;/docs&quot;</span>&gt;Docs&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;/bin/create&quot;</span>&gt;Create Bin&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://github.com/Mashape/mockbin&quot;</span>&gt;Github&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/nav&gt;&lt;/header&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;home&quot;</span>&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;showcase&quot;</span>&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;container&quot;</span>&gt;&lt;h1&gt;Mockbin&lt;/h1&gt;&lt;p <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;col-lg-offset-2 col-lg-8 lead&quot;</span>&gt;Mockbin allows you to generate &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;/bin/create&quot;</span>&gt;custom endpoints&lt;/a&gt; to <span class="nb">test</span>, mock, and track HTTP requests &amp;amp; responses between libraries, sockets and APIs.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;container&quot;</span>&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;btn-toolbar&quot;</span>&gt;&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;/bin/bbe7f656-12d6-4877-9fa8-5cd61f9522a9/view&quot;</span> <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;btn btn-primary&quot;</span>&gt;View Sample Bin&lt;/a&gt;&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;/bin/create&quot;</span> <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;btn btn-success&quot;</span>&gt;Create Bin&lt;/a&gt;&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;#example&quot;</span> <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;btn btn-primary hidden-xs&quot;</span>&gt;Send a Request&lt;/a&gt;&lt;/div&gt;&lt;hr&gt;&lt;h2 <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;text-center&quot;</span>&gt;Feature Highlights&lt;/h2&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;row features&quot;</span>&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;col-md-6&quot;</span>&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;media&quot;</span>&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;media-left&quot;</span>&gt;&lt;img <span class="nv">src</span><span class="o">=</span><span class="s2">&quot;/public/friendly.png&quot;</span> <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;media-object&quot;</span>&gt;&lt;/div&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;media-body&quot;</span>&gt;&lt;h4 <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;media-heading&quot;</span>&gt;Mock Custom Endpoints&lt;/h4&gt;&lt;p&gt;Mock custom endpoints using any &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://ahmadnassri.github.io/har-resources/&quot;</span> <span class="nv">target</span><span class="o">=</span><span class="s2">&quot;_blank&quot;</span>&gt;HTTP Archive <span class="o">(</span>HAR<span class="o">)</span>&lt;/a&gt; response object &lt;em&gt;<span class="o">(</span>can be used as webhooks, api mocks, or anything you want!<span class="o">)</span>&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;/docs&quot;</span>&gt;Learn More &lt;span <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;fa fa-angle-right&quot;</span>&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;media&quot;</span>&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;media-left&quot;</span>&gt;&lt;img <span class="nv">src</span><span class="o">=</span><span class="s2">&quot;/public/formats.png&quot;</span> <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;media-object&quot;</span>&gt;&lt;/div&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;media-body&quot;</span>&gt;&lt;h4 <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;media-heading&quot;</span>&gt;JSON, XML, YAML, HTML&lt;/h4&gt;&lt;p&gt;Don<span class="s1">&#39;t like JSON? No problem! Mockbin supports output in JSON, YAML and XML, as well as an HTML view for in-browser testing&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;/docs#content-negotiation&quot;&gt;Learn More &lt;span class=&quot;fa fa-angle-right&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;media&quot;&gt;&lt;div class=&quot;media-left&quot;&gt;&lt;img src=&quot;/public/history.png&quot; class=&quot;media-object&quot;&gt;&lt;/div&gt;&lt;div class=&quot;media-body&quot;&gt;&lt;h4 class=&quot;media-heading&quot;&gt;Log and Inspect Calls&lt;/h4&gt;&lt;p&gt;Log and inspect incoming calls to your custom endpoints &lt;em&gt;(get detailed view to how clients are calling your api/webhook)&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;/docs&quot;&gt;Learn More &lt;span class=&quot;fa fa-angle-right&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;col-md-6&quot;&gt;&lt;div class=&quot;media&quot;&gt;&lt;div class=&quot;media-left&quot;&gt;&lt;img src=&quot;/public/mock.png&quot; class=&quot;media-object&quot;&gt;&lt;/div&gt;&lt;div class=&quot;media-body&quot;&gt;&lt;h4 class=&quot;media-heading&quot;&gt;Custom HTTP Method&lt;/h4&gt;&lt;p&gt;No longer are you limited to &lt;code&gt;GET&lt;/code&gt; &amp;amp; &lt;code&gt;POST&lt;/code&gt;, Mockbin accepts all standard Methods and allows method overriding&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;/docs#http-methods&quot;&gt;Learn More &lt;span class=&quot;fa fa-angle-right&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;media&quot;&gt;&lt;div class=&quot;media-left&quot;&gt;&lt;img src=&quot;/public/inspect.png&quot; class=&quot;media-object&quot;&gt;&lt;/div&gt;&lt;div class=&quot;media-body&quot;&gt;&lt;h4 class=&quot;media-heading&quot;&gt;CORS Headers&lt;/h4&gt;&lt;p&gt;Debug your front-end JavaScript HTTP calls from any domain, Mockbin will dynamically generate Cross-Origin resource sharing headers&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;/docs&quot;&gt;Learn More &lt;span class=&quot;fa fa-angle-right&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;media&quot;&gt;&lt;div class=&quot;media-left&quot;&gt;&lt;img src=&quot;/public/har.png&quot; class=&quot;media-object&quot;&gt;&lt;/div&gt;&lt;div class=&quot;media-body&quot;&gt;&lt;h4 class=&quot;media-heading&quot;&gt;HTTP Archive (HAR)&lt;/h4&gt;&lt;p&gt;Mockbin relies on the popular &lt;a href=&quot;https://ahmadnassri.github.io/har-resources/&quot; target=&quot;_blank&quot;&gt;HTTP Archive (HAR)&lt;/a&gt; format to create mock endpoints (Bins), import data and describe HTTP call logs.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;/docs&quot;&gt;Learn More &lt;span class=&quot;fa fa-angle-right&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;hr&gt;&lt;h2 class=&quot;text-center&quot;&gt;Test using your preferred language:&lt;/h2&gt;&lt;iframe id=&quot;example&quot; src=&quot;https://api.apiembed.com/?source=http://mockbin.org/public/samples/request.json&amp;amp;targets=all&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; marginheight=&quot;0&quot; marginwidth=&quot;0&quot; width=&quot;100%&quot; height=&quot;500&quot; seamless class=&quot;embed&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;footer class=&quot;hidden-xs&quot;&gt;&lt;nav class=&quot;navbar navbar-default navbar-fixed-bottom&quot;&gt;&lt;div class=&quot;container&quot;&gt;&lt;div class=&quot;navbar-text&quot;&gt;&lt;a href=&quot;https://github.com/Mashape/mockbin&quot; data-icon=&quot;octicon-star&quot; data-count-href=&quot;/Mashape/mockbin/stargazers&quot; data-count-api=&quot;/repos/Mashape/mockbin#stargazers_count&quot; class=&quot;github-button&quot;&gt;Star&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://github.com/Mashape/mockbin&quot; data-icon=&quot;octicon-eye&quot; data-count-href=&quot;/Mashape/mockbin/watchers&quot; data-count-api=&quot;/repos/Mashape/mockbin#subscribers_count&quot; class=&quot;github-button&quot;&gt;Watch&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://github.com/Mashape/mockbin/issues&quot; data-icon=&quot;octicon-issue-opened&quot; data-count-api=&quot;/repos/Mashape/mockbin#open_issues_count&quot; class=&quot;github-button&quot;&gt;Issue&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;nav navbar-right navbar-text hidden-xs&quot;&gt;&lt;a href=&quot;https://twitter.com/share&quot; data-url=&quot;http://mockbin.org&quot; data-via=&quot;Mashape&quot; data-related=&quot;Mashape&quot; data-hashtags=&quot;Mock, Test, Track, HTTP&quot; data-dnt=&quot;true&quot; class=&quot;twitter-share-button&quot;&gt;Tweet&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/nav&gt;&lt;/footer&gt;&lt;script type=&quot;text/javascript&quot; id=&quot;twitter-wjs&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; async defer&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; id=&quot;github-bjs&quot; src=&quot;https://buttons.github.io/buttons.js&quot; async defer&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;//mashape.github.io/notification-bar/embed.js&quot; async defer&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot;&gt;!function(){var analytics=window.analytics=window.analytics||[];if(!analytics.initialize)if(analytics.invoked)window.console&amp;&amp;console.error&amp;&amp;console.error(&quot;Segment snippet included twice.&quot;);else{analytics.invoked=!0;analytics.methods=[&quot;trackSubmit&quot;,&quot;trackClick&quot;,&quot;trackLink&quot;,&quot;trackForm&quot;,&quot;pageview&quot;,&quot;identify&quot;,&quot;group&quot;,&quot;track&quot;,&quot;ready&quot;,&quot;alias&quot;,&quot;page&quot;,&quot;once&quot;,&quot;off&quot;,&quot;on&quot;];analytics.factory=function(t){return function(){var e=Array.prototype.slice.call(arguments);e.unshift(t);analytics.push(e);return analytics}};for(var t=0;t&lt;analytics.methods.length;t++){var e=analytics.methods[t];analytics[e]=analytics.factory(e)}analytics.load=function(t){var e=document.createElement(&quot;script&quot;);e.type=&quot;text/javascript&quot;;e.async=!0;e.src=(&quot;https:&quot;===document.location.protocol?&quot;https://&quot;:&quot;http://&quot;)+&quot;cdn.segment.com/analytics.js/v1/&quot;+t+&quot;/analytics.min.js&quot;;var n=document.getElementsByTagName(&quot;script&quot;)[0];n.parentNode.insertBefore(e,n)};analytics.SNIPPET_VERSION=&quot;3.0.1&quot;;</span>
</span><span class='line'><span class="s1">  analytics.load(&#39;</span>tUiM2iBCz991uF4rDF0a4WSr6NEjiVuU<span class="err">&#39;</span><span class="o">)</span>;
</span><span class='line'>  analytics.page<span class="o">()</span>
</span><span class='line'><span class="o">}}()</span>;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl -i -X GET http://localhost:8000/bbb --header <span class="s2">&quot;apikey: aaaaaaaaa&quot;</span>
</span><span class='line'>HTTP/1.1 403 Forbidden
</span><span class='line'>Date: Fri, 26 Oct 2018 07:53:19 GMT
</span><span class='line'>Content-Type: application/json; <span class="nv">charset</span><span class="o">=</span>utf-8
</span><span class='line'>Connection: keep-alive
</span><span class='line'>Server: kong/0.14.1
</span><span class='line'>Content-Length: 46
</span><span class='line'>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;message&quot;</span>: <span class="s2">&quot;You cannot consume this service&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>アクセス制御が効いていることを確認できた。</p>

<h2>関連</h2>

<ul>
<li><a href="http://momota.github.io/blog/2018/10/26/kong/">API アグリゲーション： Kong &ndash; momota.txt</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[API アグリゲーション: Kong]]></title>
    <link href="http://momota.github.io/blog/2018/10/26/kong/"/>
    <updated>2018-10-26T11:55:00+09:00</updated>
    <id>http://momota.github.io/blog/2018/10/26/kong</id>
    <content type="html"><![CDATA[<p><img src="http://momota.github.io/images/20181026_kong/kong-logo.png" alt="kong-logo" /></p>

<h2>Kong の概要</h2>

<ul>
<li>Kong は、オープンソースの API ゲートウェイソフトウェア</li>
<li>低レイテンシー、スケーラブルなアーキテクチャ</li>
<li>フロントはNginx、バックエンド DB は PostgreSQL or Cassandra で構成される</li>
<li>複数のマイクロサービス (API) をアグリゲーションし、以下のような機能を統合的に提供する

<ul>
<li>認証

<ul>
<li>Basic 認証</li>
<li>API キー</li>
<li>OAuth2</li>
<li>JWT</li>
<li>HMAC</li>
<li>LDAP</li>
</ul>
</li>
<li>セキュリティ

<ul>
<li>ACL</li>
<li>CORS</li>
<li>IP制限</li>
<li>ボット検出</li>
<li>SSL</li>
</ul>
</li>
<li>トラフィック制御

<ul>
<li>レート制限</li>
<li>応答速度制限</li>
<li>リクエストサイズ制限</li>
</ul>
</li>
<li>変換

<ul>
<li>リクエスト変換</li>
<li>レスポンス変換</li>
<li>Correlation ID</li>
</ul>
</li>
<li>ロギング

<ul>
<li>TCP、UDP、HTTP、ファイル、Syslog、StatsD、Loggly</li>
</ul>
</li>
<li>分析

<ul>
<li>Datadog、Galileo、Runscope</li>
</ul>
</li>
<li>ロードバランシング</li>
<li>サーキットブレーカー</li>
</ul>
</li>
</ul>


<p>最近はあまり流行っていないらしく、Web 上の記事が古かったので、使い方に関するメモ。といってもほぼチュートリアル通り。</p>

<p>古いなと感じたのは、たとえば、マイクロサービスの流行りを受けてか、api という概念が service に置き換えられている感じだった。</p>

<ul>
<li>昔: <a href="http://kong-server:8001/apis">http://kong-server:8001/apis</a></li>
<li>今: <a href="http://kong-server:8001/services">http://kong-server:8001/services</a></li>
</ul>


<h2>環境</h2>

<ul>
<li>Azure</li>
<li>Kong: 0.14.1</li>
</ul>


<!-- more -->


<h2>インストール</h2>

<p>Docker や Vagrant など様々な形で提供されているので、略。</p>

<ul>
<li><a href="https://konghq.com/install/">Installations &ndash; KongHQ</a></li>
</ul>


<h2>Service の設定</h2>

<p>kong に API を追加するためには、まず Service を追加する必要がある。
Service は、Kong が管理する上流の API およびマイクロサービスを参照するための名前。</p>

<p>ここでは、<a href="https://mockbin.com/">Mockbin API</a> を利用する。
Mockbin は「echo」タイプの Web サービスで、リクエストをレスポンスとして返すサービス。</p>

<p>Service には、route を追加する必要がある。
Route は、Kongにリクエストが到達したあとに、バックエンドの service 郡に対するリクエスト送信方法を指定する。1つの service に複数の route を含めることができる。</p>

<p>Service と route を設定したら、Kong 経由の API リクエストが可能になる。</p>

<p>これらの設定は、<a href="https://docs.konghq.com/0.14.x/admin-api/">RESTful Admin API</a> を利用する。
(デフォルトでは、TCP ポート <code>:8001</code> で公開されている)</p>

<h3>Admin APIを使った service 追加</h3>

<p><a href="https://mockbin.com/">Mockbin API</a> を指す、service <code>example-service</code> を追加する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl -i -X POST --url http://localhost:8001/services/ --data <span class="s2">&quot;name=example-service&quot;</span> --data <span class="s2">&quot;url=http://mockbin.org&quot;</span>
</span><span class='line'>HTTP/1.1 201 Created
</span><span class='line'>Date: Tue, 23 Oct 2018 10:00:25 GMT
</span><span class='line'>Content-Type: application/json; <span class="nv">charset</span><span class="o">=</span>utf-8
</span><span class='line'>Connection: keep-alive
</span><span class='line'>Access-Control-Allow-Origin: *
</span><span class='line'>Server: kong/0.14.1
</span><span class='line'>Content-Length: 259
</span><span class='line'>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;host&quot;</span>: <span class="s2">&quot;mockbin.org&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;created_at&quot;</span>: 1540288825,
</span><span class='line'>  <span class="s2">&quot;connect_timeout&quot;</span>: 60000,
</span><span class='line'>  <span class="s2">&quot;id&quot;</span>: <span class="s2">&quot;85a5f745-2e9f-4f6e-b093-fce81476d374&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;protocol&quot;</span>: <span class="s2">&quot;http&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;example-service&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;read_timeout&quot;</span>: 60000,
</span><span class='line'>  <span class="s2">&quot;port&quot;</span>: 80,
</span><span class='line'>  <span class="s2">&quot;path&quot;</span>: null,
</span><span class='line'>  <span class="s2">&quot;updated_at&quot;</span>: 1540288825,
</span><span class='line'>  <span class="s2">&quot;retries&quot;</span>: 5,
</span><span class='line'>  <span class="s2">&quot;write_timeout&quot;</span>: 60000
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Route の追加</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl -i -X POST --url http://localhost:8001/services/example-service/routes --data <span class="s2">&quot;hosts[]=example.com&quot;</span>
</span><span class='line'>HTTP/1.1 201 Created
</span><span class='line'>Date: Tue, 23 Oct 2018 10:02:16 GMT
</span><span class='line'>Content-Type: application/json; <span class="nv">charset</span><span class="o">=</span>utf-8
</span><span class='line'>Connection: keep-alive
</span><span class='line'>Access-Control-Allow-Origin: *
</span><span class='line'>Server: kong/0.14.1
</span><span class='line'>Content-Length: 290
</span><span class='line'>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;created_at&quot;</span>: 1540288936,
</span><span class='line'>  <span class="s2">&quot;strip_path&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>  <span class="s2">&quot;hosts&quot;</span>: <span class="o">[</span>
</span><span class='line'>    <span class="s2">&quot;example.com&quot;</span>
</span><span class='line'>  <span class="o">]</span>,
</span><span class='line'>  <span class="s2">&quot;preserve_host&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>  <span class="s2">&quot;regex_priority&quot;</span>: 0,
</span><span class='line'>  <span class="s2">&quot;updated_at&quot;</span>: 1540288936,
</span><span class='line'>  <span class="s2">&quot;paths&quot;</span>: null,
</span><span class='line'>  <span class="s2">&quot;service&quot;</span>: <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;id&quot;</span>: <span class="s2">&quot;85a5f745-2e9f-4f6e-b093-fce81476d374&quot;</span>
</span><span class='line'>  <span class="o">}</span>,
</span><span class='line'>  <span class="s2">&quot;methods&quot;</span>: null,
</span><span class='line'>  <span class="s2">&quot;protocols&quot;</span>: <span class="o">[</span>
</span><span class='line'>    <span class="s2">&quot;http&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;https&quot;</span>
</span><span class='line'>  <span class="o">]</span>,
</span><span class='line'>  <span class="s2">&quot;id&quot;</span>: <span class="s2">&quot;e984a73b-6d17-4e1a-85bf-3ace25905a33&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>これにより、Kong は service を認識し、リクエストをプロキシできる準備が整った。</p>

<h3>Kong を経由してリクエスト転送</h3>

<p>Kong はデフォルトで、TCP ポート <code>:8000</code> で API 利用者のリクエストを受け付ける。
HTTP レスポンス <code>200 OK</code> が返ってきており、Kong 経由で Mockbin のレスポンスが返っている。
Kong は、HTTP ヘッダ <code>Host: &lt;given host&gt;</code> でどうフォワーディングするかを認識する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl -i -X GET --url http://localhost:8000/ --header <span class="s1">&#39;Host: example.com&#39;</span>
</span><span class='line'>HTTP/1.1 200 OK
</span><span class='line'>Content-Type: text/html; <span class="nv">charset</span><span class="o">=</span>utf-8
</span><span class='line'>Content-Length: 10750
</span><span class='line'>Connection: keep-alive
</span><span class='line'>Server: openresty/1.13.6.2
</span><span class='line'>Date: Tue, 23 Oct 2018 10:03:23 GMT
</span><span class='line'>Etag: W/<span class="s2">&quot;29fe-zRGDbSTAzeA2BElashPm2g&quot;</span>
</span><span class='line'>Vary: Accept-Encoding
</span><span class='line'>Via: kong/0.14.1
</span><span class='line'>X-Kong-Upstream-Status: 200
</span><span class='line'>X-Kong-Upstream-Latency: 290
</span><span class='line'>X-Kong-Proxy-Latency: 992
</span><span class='line'>Kong-Request-ID: 9e23d34d93d3b9afb7ac4c23b954a528
</span><span class='line'>
</span><span class='line'>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta <span class="nv">charset</span><span class="o">=</span><span class="s2">&quot;utf-8&quot;</span>&gt;&lt;title&gt;Mockbin by Mashape&lt;/title&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;viewport&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no&quot;</span>&gt;&lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text/css&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.4/css/bootstrap.min.css&quot;</span> <span class="nv">media</span><span class="o">=</span><span class="s2">&quot;all&quot;</span>&gt;&lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text/css&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://fonts.googleapis.com/css?family=Open+Sans:400,600|Source+Code+Pro:200,300,400,500,600,700,900&quot;</span> <span class="nv">media</span><span class="o">=</span><span class="s2">&quot;all&quot;</span>&gt;&lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text/css&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.3.0/css/font-awesome.css&quot;</span> <span class="nv">media</span><span class="o">=</span><span class="s2">&quot;all&quot;</span>&gt;&lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text/css&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.4/styles/github.min.css&quot;</span> <span class="nv">media</span><span class="o">=</span><span class="s2">&quot;all&quot;</span>&gt;&lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text/css&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;/static/main.css&quot;</span> <span class="nv">media</span><span class="o">=</span><span class="s2">&quot;all&quot;</span>&gt;&lt;script <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span> <span class="nv">src</span><span class="o">=</span><span class="s2">&quot;https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js&quot;</span>&gt;&lt;/script&gt;&lt;script <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span> <span class="nv">src</span><span class="o">=</span><span class="s2">&quot;https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.4/js/bootstrap.min.js&quot;</span>&gt;&lt;/script&gt;&lt;script <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span> <span class="nv">src</span><span class="o">=</span><span class="s2">&quot;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.4/highlight.min.js&quot;</span>&gt;&lt;/script&gt;&lt;script <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span> <span class="nv">src</span><span class="o">=</span><span class="s2">&quot;https://cdnjs.cloudflare.com/ajax/libs/zeroclipboard/2.2.0/ZeroClipboard.min.js&quot;</span>&gt;&lt;/script&gt;&lt;meta http-equiv<span class="o">=</span><span class="s2">&quot;X-UA-Compatible&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;IE=edge&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;robots&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;index,follow&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;viewport&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no&quot;</span>&gt;&lt;meta <span class="nv">itemprop</span><span class="o">=</span><span class="s2">&quot;name&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;Mockbin by Mashape&quot;</span>&gt;&lt;meta <span class="nv">property</span><span class="o">=</span><span class="s2">&quot;og:title&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;Mockbin by Mashape&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;twitter:title&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;Mockbin by Mashape&quot;</span>&gt;&lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;author&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://www.mashape.com/&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;author&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;Mashape&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;twitter:creator&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;@Mashape&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;description&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;Mockbin allows you to generate custom endpoints to test, mock, and track HTTP requests &amp;amp; responses between libraries, sockets and APIs. Made with Love by Mashape.&quot;</span>&gt;&lt;meta <span class="nv">itemprop</span><span class="o">=</span><span class="s2">&quot;description&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;Mockbin allows you to generate custom endpoints to test, mock, and track HTTP requests &amp;amp; responses between libraries, sockets and APIs. Made with Love by Mashape.&quot;</span>&gt;&lt;meta <span class="nv">property</span><span class="o">=</span><span class="s2">&quot;og:description&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;Mockbin allows you to generate custom endpoints to test, mock, and track HTTP requests &amp;amp; responses between libraries, sockets and APIs. Made with Love by Mashape.&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;twitter:description&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;Mockbin allows you to generate custom endpoints to test, mock, and track HTTP requests &amp;amp; responses between libraries, sockets and APIs. Made with Love by Mashape.&quot;</span>&gt;&lt;meta <span class="nv">itemprop</span><span class="o">=</span><span class="s2">&quot;image&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;https://mockbin.org/public/share.png&quot;</span>&gt;&lt;meta <span class="nv">property</span><span class="o">=</span><span class="s2">&quot;og:image&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;https://mockbin.org/public/share.png&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;twitter:image:src&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;https://mockbin.org/public/share.png&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;twitter:card&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;summary_large_image&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;twitter:site&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;@mashape&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;twitter:domain&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;mockbin.org&quot;</span>&gt;&lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;canonical&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;http://mockbin.org/&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;twitter:url&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;http://mockbin.org/&quot;</span>&gt;&lt;meta <span class="nv">property</span><span class="o">=</span><span class="s2">&quot;og:url&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;http://mockbin.org/&quot;</span>&gt;&lt;meta <span class="nv">property</span><span class="o">=</span><span class="s2">&quot;og:type&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;website&quot;</span>&gt;&lt;meta <span class="nv">property</span><span class="o">=</span><span class="s2">&quot;og:site_name&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;Mockbin by Mashape&quot;</span>&gt;&lt;meta <span class="nv">property</span><span class="o">=</span><span class="s2">&quot;fb:admins&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;227304446&quot;</span>&gt;&lt;meta <span class="nv">property</span><span class="o">=</span><span class="s2">&quot;fb:admins&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;576641408&quot;</span>&gt;&lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;shortcut icon&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;/public/favicon.ico&quot;</span>&gt;&lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;icon&quot;</span> <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;image/x-icon&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;/public/favicon.ico&quot;</span>&gt;&lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text/css&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,700italic,800italic,400,800,700,600,300|Source+Code+Pro:200,300,400,500,600,700,900&quot;</span> <span class="nv">media</span><span class="o">=</span><span class="s2">&quot;all&quot;</span>&gt;&lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text/css&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;/public/style.css&quot;</span> <span class="nv">media</span><span class="o">=</span><span class="s2">&quot;all&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;google-site-verification&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;OIx3DxcNRJ_Kyd7hAtGRhZnggKpv6DRWutY7Ih9R3Ww&quot;</span>&gt;&lt;/head&gt;&lt;body&gt;&lt;header&gt;&lt;nav <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;navbar navbar-default&quot;</span>&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;container&quot;</span>&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;navbar-header&quot;</span>&gt;&lt;button <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;button&quot;</span> data-toggle<span class="o">=</span><span class="s2">&quot;collapse&quot;</span> data-target<span class="o">=</span><span class="s2">&quot;#navbar&quot;</span> <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;navbar-toggle collapsed&quot;</span>&gt;&lt;span <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;icon-bar&quot;</span>&gt;&lt;/span&gt;&lt;span <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;icon-bar&quot;</span>&gt;&lt;/span&gt;&lt;span <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;icon-bar&quot;</span>&gt;&lt;/span&gt;&lt;/button&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;navbar-brand logo&quot;</span>&gt;&lt;span&gt;&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;/&quot;</span>&gt;&lt;span <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;logo fa fa-terminal&quot;</span>&gt;&lt;/span&gt; mockbin&lt;/a&gt; &lt;span <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;text-muted&quot;</span>&gt;by &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://www.mashape.com&quot;</span>&gt;Mashape&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div <span class="nv">id</span><span class="o">=</span><span class="s2">&quot;navbar&quot;</span> <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;collapse navbar-collapse&quot;</span>&gt;&lt;ul <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;nav navbar-nav navbar-right&quot;</span>&gt;&lt;li&gt;&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;/docs&quot;</span>&gt;Docs&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;/bin/create&quot;</span>&gt;Create Bin&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://github.com/Mashape/mockbin&quot;</span>&gt;Github&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/nav&gt;&lt;/header&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;home&quot;</span>&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;showcase&quot;</span>&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;container&quot;</span>&gt;&lt;h1&gt;Mockbin&lt;/h1&gt;&lt;p <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;col-lg-offset-2 col-lg-8 lead&quot;</span>&gt;Mockbin allows you to generate &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;/bin/create&quot;</span>&gt;custom endpoints&lt;/a&gt; to <span class="nb">test</span>, mock, and track HTTP requests &amp;amp; responses between libraries, sockets and APIs.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;container&quot;</span>&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;btn-toolbar&quot;</span>&gt;&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;/bin/bbe7f656-12d6-4877-9fa8-5cd61f9522a9/view&quot;</span> <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;btn btn-primary&quot;</span>&gt;View Sample Bin&lt;/a&gt;&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;/bin/create&quot;</span> <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;btn btn-success&quot;</span>&gt;Create Bin&lt;/a&gt;&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;#example&quot;</span> <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;btn btn-primary hidden-xs&quot;</span>&gt;Send a Request&lt;/a&gt;&lt;/div&gt;&lt;hr&gt;&lt;h2 <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;text-center&quot;</span>&gt;Feature Highlights&lt;/h2&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;row features&quot;</span>&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;col-md-6&quot;</span>&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;media&quot;</span>&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;media-left&quot;</span>&gt;&lt;img <span class="nv">src</span><span class="o">=</span><span class="s2">&quot;/public/friendly.png&quot;</span> <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;media-object&quot;</span>&gt;&lt;/div&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;media-body&quot;</span>&gt;&lt;h4 <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;media-heading&quot;</span>&gt;Mock Custom Endpoints&lt;/h4&gt;&lt;p&gt;Mock custom endpoints using any &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://ahmadnassri.github.io/har-resources/&quot;</span> <span class="nv">target</span><span class="o">=</span><span class="s2">&quot;_blank&quot;</span>&gt;HTTP Archive <span class="o">(</span>HAR<span class="o">)</span>&lt;/a&gt; response object &lt;em&gt;<span class="o">(</span>can be used as webhooks, api mocks, or anything you want!<span class="o">)</span>&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;/docs&quot;</span>&gt;Learn More &lt;span <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;fa fa-angle-right&quot;</span>&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;media&quot;</span>&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;media-left&quot;</span>&gt;&lt;img <span class="nv">src</span><span class="o">=</span><span class="s2">&quot;/public/formats.png&quot;</span> <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;media-object&quot;</span>&gt;&lt;/div&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;media-body&quot;</span>&gt;&lt;h4 <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;media-heading&quot;</span>&gt;JSON, XML, YAML, HTML&lt;/h4&gt;&lt;p&gt;Don<span class="s1">&#39;t like JSON? No problem! Mockbin supports output in JSON, YAML and XML, as well as an HTML view for in-browser testing&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;/docs#content-negotiation&quot;&gt;Learn More &lt;span class=&quot;fa fa-angle-right&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;media&quot;&gt;&lt;div class=&quot;media-left&quot;&gt;&lt;img src=&quot;/public/history.png&quot; class=&quot;media-object&quot;&gt;&lt;/div&gt;&lt;div class=&quot;media-body&quot;&gt;&lt;h4 class=&quot;media-heading&quot;&gt;Log and Inspect Calls&lt;/h4&gt;&lt;p&gt;Log and inspect incoming calls to your custom endpoints &lt;em&gt;(get detailed view to how clients are calling your api/webhook)&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;/docs&quot;&gt;Learn More &lt;span class=&quot;fa fa-angle-right&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;col-md-6&quot;&gt;&lt;div class=&quot;media&quot;&gt;&lt;div class=&quot;media-left&quot;&gt;&lt;img src=&quot;/public/mock.png&quot; class=&quot;media-object&quot;&gt;&lt;/div&gt;&lt;div class=&quot;media-body&quot;&gt;&lt;h4 class=&quot;media-heading&quot;&gt;Custom HTTP Method&lt;/h4&gt;&lt;p&gt;No longer are you limited to &lt;code&gt;GET&lt;/code&gt; &amp;amp; &lt;code&gt;POST&lt;/code&gt;, Mockbin accepts all standard Methods and allows method overriding&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;/docs#http-methods&quot;&gt;Learn More &lt;span class=&quot;fa fa-angle-right&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;media&quot;&gt;&lt;div class=&quot;media-left&quot;&gt;&lt;img src=&quot;/public/inspect.png&quot; class=&quot;media-object&quot;&gt;&lt;/div&gt;&lt;div class=&quot;media-body&quot;&gt;&lt;h4 class=&quot;media-heading&quot;&gt;CORS Headers&lt;/h4&gt;&lt;p&gt;Debug your front-end JavaScript HTTP calls from any domain, Mockbin will dynamically generate Cross-Origin resource sharing headers&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;/docs&quot;&gt;Learn More &lt;span class=&quot;fa fa-angle-right&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;media&quot;&gt;&lt;div class=&quot;media-left&quot;&gt;&lt;img src=&quot;/public/har.png&quot; class=&quot;media-object&quot;&gt;&lt;/div&gt;&lt;div class=&quot;media-body&quot;&gt;&lt;h4 class=&quot;media-heading&quot;&gt;HTTP Archive (HAR)&lt;/h4&gt;&lt;p&gt;Mockbin relies on the popular &lt;a href=&quot;https://ahmadnassri.github.io/har-resources/&quot; target=&quot;_blank&quot;&gt;HTTP Archive (HAR)&lt;/a&gt; format to create mock endpoints (Bins), import data and describe HTTP call logs.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;/docs&quot;&gt;Learn More &lt;span class=&quot;fa fa-angle-right&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;hr&gt;&lt;h2 class=&quot;text-center&quot;&gt;Test using your preferred language:&lt;/h2&gt;&lt;iframe id=&quot;example&quot; src=&quot;https://api.apiembed.com/?source=http://mockbin.org/public/samples/request.json&amp;amp;targets=all&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; marginheight=&quot;0&quot; marginwidth=&quot;0&quot; width=&quot;100%&quot; height=&quot;500&quot; seamless class=&quot;embed&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;footer class=&quot;hidden-xs&quot;&gt;&lt;nav class=&quot;navbar navbar-default navbar-fixed-bottom&quot;&gt;&lt;div class=&quot;container&quot;&gt;&lt;div class=&quot;navbar-text&quot;&gt;&lt;a href=&quot;https://github.com/Mashape/mockbin&quot; data-icon=&quot;octicon-star&quot; data-count-href=&quot;/Mashape/mockbin/stargazers&quot; data-count-api=&quot;/repos/Mashape/mockbin#stargazers_count&quot; class=&quot;github-button&quot;&gt;Star&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://github.com/Mashape/mockbin&quot; data-icon=&quot;octicon-eye&quot; data-count-href=&quot;/Mashape/mockbin/watchers&quot; data-count-api=&quot;/repos/Mashape/mockbin#subscribers_count&quot; class=&quot;github-button&quot;&gt;Watch&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://github.com/Mashape/mockbin/issues&quot; data-icon=&quot;octicon-issue-opened&quot; data-count-api=&quot;/repos/Mashape/mockbin#open_issues_count&quot; class=&quot;github-button&quot;&gt;Issue&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;nav navbar-right navbar-text hidden-xs&quot;&gt;&lt;a href=&quot;https://twitter.com/share&quot; data-url=&quot;http://mockbin.org&quot; data-via=&quot;Mashape&quot; data-related=&quot;Mashape&quot; data-hashtags=&quot;Mock, Test, Track, HTTP&quot; data-dnt=&quot;true&quot; class=&quot;twitter-share-button&quot;&gt;Tweet&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/nav&gt;&lt;/footer&gt;&lt;script type=&quot;text/javascript&quot; id=&quot;twitter-wjs&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; async defer&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; id=&quot;github-bjs&quot; src=&quot;https://buttons.github.io/buttons.js&quot; async defer&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;//mashape.github.io/notification-bar/embed.js&quot; async defer&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot;&gt;!function(){var analytics=window.analytics=window.analytics||[];if(!analytics.initialize)if(analytics.invoked)window.console&amp;&amp;console.error&amp;&amp;console.error(&quot;Segment snippet included twice.&quot;);else{analytics.invoked=!0;analytics.methods=[&quot;trackSubmit&quot;,&quot;trackClick&quot;,&quot;trackLink&quot;,&quot;trackForm&quot;,&quot;pageview&quot;,&quot;identify&quot;,&quot;group&quot;,&quot;track&quot;,&quot;ready&quot;,&quot;alias&quot;,&quot;page&quot;,&quot;once&quot;,&quot;off&quot;,&quot;on&quot;];analytics.factory=function(t){return function(){var e=Array.prototype.slice.call(arguments);e.unshift(t);analytics.push(e);return analytics}};for(var t=0;t&lt;analytics.methods.length;t++){var e=analytics.methods[t];analytics[e]=analytics.factory(e)}analytics.load=function(t){var e=document.createElement(&quot;script&quot;);e.type=&quot;text/javascript&quot;;e.async=!0;e.src=(&quot;https:&quot;===document.location.protocol?&quot;https://&quot;:&quot;http://&quot;)+&quot;cdn.segment.com/analytics.js/v1/&quot;+t+&quot;/analytics.min.js&quot;;var n=document.getElementsByTagName(&quot;script&quot;)[0];n.parentNode.insertBefore(e,n)};analytics.SNIPPET_VERSION=&quot;3.0.1&quot;;</span>
</span><span class='line'><span class="s1">  analytics.load(&#39;</span>tUiM2iBCz991uF4rDF0a4WSr6NEjiVuU<span class="err">&#39;</span><span class="o">)</span>;
</span><span class='line'>  analytics.page<span class="o">()</span>
</span><span class='line'><span class="o">}}()</span>;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;
</span></code></pre></td></tr></table></div></figure>


<h3>Service の一覧</h3>

<p>登録した service の一覧は、<a href="http://localhost:8001/services/">http://localhost:8001/services/</a> に GET リクエストを投げる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl -i -X GET http://localhost:8001/services/
</span><span class='line'>HTTP/1.1 200 OK
</span><span class='line'>Date: Wed, 24 Oct 2018 06:46:28 GMT
</span><span class='line'>Content-Type: application/json; <span class="nv">charset</span><span class="o">=</span>utf-8
</span><span class='line'>Connection: keep-alive
</span><span class='line'>Access-Control-Allow-Origin: *
</span><span class='line'>Server: kong/0.14.1
</span><span class='line'>Content-Length: 282
</span><span class='line'>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;next&quot;</span>: null,
</span><span class='line'>  <span class="s2">&quot;data&quot;</span>: <span class="o">[</span>
</span><span class='line'>    <span class="o">{</span>
</span><span class='line'>      <span class="s2">&quot;host&quot;</span>: <span class="s2">&quot;mockbin.org&quot;</span>,
</span><span class='line'>      <span class="s2">&quot;created_at&quot;</span>: 1540288825,
</span><span class='line'>      <span class="s2">&quot;connect_timeout&quot;</span>: 60000,
</span><span class='line'>      <span class="s2">&quot;id&quot;</span>: <span class="s2">&quot;85a5f745-2e9f-4f6e-b093-fce81476d374&quot;</span>,
</span><span class='line'>      <span class="s2">&quot;protocol&quot;</span>: <span class="s2">&quot;http&quot;</span>,
</span><span class='line'>      <span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;example-service&quot;</span>,
</span><span class='line'>      <span class="s2">&quot;read_timeout&quot;</span>: 60000,
</span><span class='line'>      <span class="s2">&quot;port&quot;</span>: 80,
</span><span class='line'>      <span class="s2">&quot;path&quot;</span>: null,
</span><span class='line'>      <span class="s2">&quot;updated_at&quot;</span>: 1540288825,
</span><span class='line'>      <span class="s2">&quot;retries&quot;</span>: 5,
</span><span class='line'>      <span class="s2">&quot;write_timeout&quot;</span>: 60000
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>  <span class="o">]</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>プラグインの有効化</h2>

<p>Kong はプラグインにより拡張できる。
ここでは、<a href="https://docs.konghq.com/hub/kong-inc/key-auth/">key-auth plugin</a> を service に追加する。
これまでの設定では、すべてのリクエストが上流サービスに流れる。
key-auth プラグインを設定することにより、適切な API キーを持つリクエストのみがプロキシされる。</p>

<h3>key-auth プラグインの設定</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl -i -X POST --url http://localhost:8001/services/example-service/plugins/ --data <span class="s1">&#39;name=key-auth&#39;</span>
</span><span class='line'>HTTP/1.1 201 Created
</span><span class='line'>Date: Tue, 23 Oct 2018 10:05:50 GMT
</span><span class='line'>Content-Type: application/json; <span class="nv">charset</span><span class="o">=</span>utf-8
</span><span class='line'>Connection: keep-alive
</span><span class='line'>Access-Control-Allow-Origin: *
</span><span class='line'>Server: kong/0.14.1
</span><span class='line'>Content-Length: 276
</span><span class='line'>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;created_at&quot;</span>: 1540289149992,
</span><span class='line'>  <span class="s2">&quot;config&quot;</span>: <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;key_in_body&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>    <span class="s2">&quot;run_on_preflight&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>    <span class="s2">&quot;anonymous&quot;</span>: <span class="s2">&quot;&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;hide_credentials&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>    <span class="s2">&quot;key_names&quot;</span>: <span class="o">[</span>
</span><span class='line'>      <span class="s2">&quot;apikey&quot;</span>
</span><span class='line'>    <span class="o">]</span>
</span><span class='line'>  <span class="o">}</span>,
</span><span class='line'>  <span class="s2">&quot;id&quot;</span>: <span class="s2">&quot;7aadeb9d-cbc1-4480-9ea1-6771e85b9bfb&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;service_id&quot;</span>: <span class="s2">&quot;85a5f745-2e9f-4f6e-b093-fce81476d374&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;key-auth&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;enabled&quot;</span>: <span class="nb">true</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>key-auth プラグインは、<code>config.key_names</code> パラメータを受け付ける。
デフォルトは <code>['apikey']</code> になる。</p>

<h3>プラグイン設定の検証</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl -i -X GET --url http://localhost:8000/ --header <span class="s1">&#39;Host: example.com&#39;</span>
</span><span class='line'>HTTP/1.1 401 Unauthorized
</span><span class='line'>Date: Tue, 23 Oct 2018 10:06:21 GMT
</span><span class='line'>Content-Type: application/json; <span class="nv">charset</span><span class="o">=</span>utf-8
</span><span class='line'>Connection: keep-alive
</span><span class='line'>WWW-Authenticate: Key <span class="nv">realm</span><span class="o">=</span><span class="s2">&quot;kong&quot;</span>
</span><span class='line'>Server: kong/0.14.1
</span><span class='line'>Content-Length: 41
</span><span class='line'>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;message&quot;</span>: <span class="s2">&quot;No API key found in request&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>必要な <code>apikey</code> ヘッダーまたはパラメータを指定していないため、応答は401 Unauthorized になる。</p>

<h2>Consumer の登録</h2>

<p>Kong インスタンスに consumer (APIの利用者) を追加する方法を学習します。
Consumer は API を使用する個人に関連付けられ、追跡、アクセス管理などに使用できる。</p>

<h3>RESTful APIを利用した consumer の登録</h3>

<p><code>Jason</code> という名のユーザを追加する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl -i -X POST --url http://localhost:8001/consumers/ --data <span class="s1">&#39;username=Jason&#39;</span>
</span><span class='line'>HTTP/1.1 201 Created
</span><span class='line'>Date: Tue, 23 Oct 2018 10:13:39 GMT
</span><span class='line'>Content-Type: application/json; <span class="nv">charset</span><span class="o">=</span>utf-8
</span><span class='line'>Connection: keep-alive
</span><span class='line'>Access-Control-Allow-Origin: *
</span><span class='line'>Server: kong/0.14.1
</span><span class='line'>Content-Length: 106
</span><span class='line'>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;custom_id&quot;</span>: null,
</span><span class='line'>  <span class="s2">&quot;created_at&quot;</span>: 1540289619,
</span><span class='line'>  <span class="s2">&quot;username&quot;</span>: <span class="s2">&quot;Jason&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;id&quot;</span>: <span class="s2">&quot;a05abe3c-c397-45c6-b032-742505bce425&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Consumer へのキークレデンシャルの発行</h3>

<p><code>Jason</code> に対して、キーを作成する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl -i -X POST --url http://localhost:8001/consumers/Jason/key-auth/ --data <span class="s1">&#39;key=hogehogehogehoge&#39;</span>
</span><span class='line'>HTTP/1.1 201 Created
</span><span class='line'>Date: Tue, 23 Oct 2018 10:15:41 GMT
</span><span class='line'>Content-Type: application/json; <span class="nv">charset</span><span class="o">=</span>utf-8
</span><span class='line'>Connection: keep-alive
</span><span class='line'>Access-Control-Allow-Origin: *
</span><span class='line'>Server: kong/0.14.1
</span><span class='line'>Content-Length: 151
</span><span class='line'>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;id&quot;</span>: <span class="s2">&quot;21eae9cb-74a3-4130-b4f2-71e2406e0187&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;created_at&quot;</span>: 1540289741055,
</span><span class='line'>  <span class="s2">&quot;key&quot;</span>: <span class="s2">&quot;hogehogehogehoge&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;consumer_id&quot;</span>: <span class="s2">&quot;a05abe3c-c397-45c6-b032-742505bce425&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>クレデンシャルが有効なことを検証</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl -i -X GET http://localhost:8000 --header <span class="s2">&quot;Host: example.com&quot;</span> --header <span class="s2">&quot;apikey: hogehogehogehoge&quot;</span>
</span><span class='line'>HTTP/1.1 200 OK
</span><span class='line'>Content-Type: text/html; <span class="nv">charset</span><span class="o">=</span>utf-8
</span><span class='line'>Content-Length: 10750
</span><span class='line'>Connection: keep-alive
</span><span class='line'>Server: openresty/1.13.6.2
</span><span class='line'>Date: Tue, 23 Oct 2018 10:17:34 GMT
</span><span class='line'>Etag: W/<span class="s2">&quot;29fe-zRGDbSTAzeA2BElashPm2g&quot;</span>
</span><span class='line'>Vary: Accept-Encoding
</span><span class='line'>Via: kong/0.14.1
</span><span class='line'>X-Kong-Upstream-Status: 200
</span><span class='line'>X-Kong-Upstream-Latency: 296
</span><span class='line'>X-Kong-Proxy-Latency: 470
</span><span class='line'>Kong-Request-ID: 592552e61fb104c1a9d9c188882c31cf
</span><span class='line'>
</span><span class='line'>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta <span class="nv">charset</span><span class="o">=</span><span class="s2">&quot;utf-8&quot;</span>&gt;&lt;title&gt;Mockbin by Mashape&lt;/title&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;viewport&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no&quot;</span>&gt;&lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text/css&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.4/css/bootstrap.min.css&quot;</span> <span class="nv">media</span><span class="o">=</span><span class="s2">&quot;all&quot;</span>&gt;&lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text/css&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://fonts.googleapis.com/css?family=Open+Sans:400,600|Source+Code+Pro:200,300,400,500,600,700,900&quot;</span> <span class="nv">media</span><span class="o">=</span><span class="s2">&quot;all&quot;</span>&gt;&lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text/css&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.3.0/css/font-awesome.css&quot;</span> <span class="nv">media</span><span class="o">=</span><span class="s2">&quot;all&quot;</span>&gt;&lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text/css&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.4/styles/github.min.css&quot;</span> <span class="nv">media</span><span class="o">=</span><span class="s2">&quot;all&quot;</span>&gt;&lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text/css&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;/static/main.css&quot;</span> <span class="nv">media</span><span class="o">=</span><span class="s2">&quot;all&quot;</span>&gt;&lt;script <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span> <span class="nv">src</span><span class="o">=</span><span class="s2">&quot;https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js&quot;</span>&gt;&lt;/script&gt;&lt;script <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span> <span class="nv">src</span><span class="o">=</span><span class="s2">&quot;https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.4/js/bootstrap.min.js&quot;</span>&gt;&lt;/script&gt;&lt;script <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span> <span class="nv">src</span><span class="o">=</span><span class="s2">&quot;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.4/highlight.min.js&quot;</span>&gt;&lt;/script&gt;&lt;script <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span> <span class="nv">src</span><span class="o">=</span><span class="s2">&quot;https://cdnjs.cloudflare.com/ajax/libs/zeroclipboard/2.2.0/ZeroClipboard.min.js&quot;</span>&gt;&lt;/script&gt;&lt;meta http-equiv<span class="o">=</span><span class="s2">&quot;X-UA-Compatible&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;IE=edge&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;robots&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;index,follow&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;viewport&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no&quot;</span>&gt;&lt;meta <span class="nv">itemprop</span><span class="o">=</span><span class="s2">&quot;name&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;Mockbin by Mashape&quot;</span>&gt;&lt;meta <span class="nv">property</span><span class="o">=</span><span class="s2">&quot;og:title&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;Mockbin by Mashape&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;twitter:title&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;Mockbin by Mashape&quot;</span>&gt;&lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;author&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://www.mashape.com/&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;author&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;Mashape&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;twitter:creator&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;@Mashape&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;description&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;Mockbin allows you to generate custom endpoints to test, mock, and track HTTP requests &amp;amp; responses between libraries, sockets and APIs. Made with Love by Mashape.&quot;</span>&gt;&lt;meta <span class="nv">itemprop</span><span class="o">=</span><span class="s2">&quot;description&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;Mockbin allows you to generate custom endpoints to test, mock, and track HTTP requests &amp;amp; responses between libraries, sockets and APIs. Made with Love by Mashape.&quot;</span>&gt;&lt;meta <span class="nv">property</span><span class="o">=</span><span class="s2">&quot;og:description&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;Mockbin allows you to generate custom endpoints to test, mock, and track HTTP requests &amp;amp; responses between libraries, sockets and APIs. Made with Love by Mashape.&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;twitter:description&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;Mockbin allows you to generate custom endpoints to test, mock, and track HTTP requests &amp;amp; responses between libraries, sockets and APIs. Made with Love by Mashape.&quot;</span>&gt;&lt;meta <span class="nv">itemprop</span><span class="o">=</span><span class="s2">&quot;image&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;https://mockbin.org/public/share.png&quot;</span>&gt;&lt;meta <span class="nv">property</span><span class="o">=</span><span class="s2">&quot;og:image&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;https://mockbin.org/public/share.png&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;twitter:image:src&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;https://mockbin.org/public/share.png&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;twitter:card&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;summary_large_image&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;twitter:site&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;@mashape&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;twitter:domain&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;mockbin.org&quot;</span>&gt;&lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;canonical&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;http://mockbin.org/&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;twitter:url&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;http://mockbin.org/&quot;</span>&gt;&lt;meta <span class="nv">property</span><span class="o">=</span><span class="s2">&quot;og:url&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;http://mockbin.org/&quot;</span>&gt;&lt;meta <span class="nv">property</span><span class="o">=</span><span class="s2">&quot;og:type&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;website&quot;</span>&gt;&lt;meta <span class="nv">property</span><span class="o">=</span><span class="s2">&quot;og:site_name&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;Mockbin by Mashape&quot;</span>&gt;&lt;meta <span class="nv">property</span><span class="o">=</span><span class="s2">&quot;fb:admins&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;227304446&quot;</span>&gt;&lt;meta <span class="nv">property</span><span class="o">=</span><span class="s2">&quot;fb:admins&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;576641408&quot;</span>&gt;&lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;shortcut icon&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;/public/favicon.ico&quot;</span>&gt;&lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;icon&quot;</span> <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;image/x-icon&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;/public/favicon.ico&quot;</span>&gt;&lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text/css&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,700italic,800italic,400,800,700,600,300|Source+Code+Pro:200,300,400,500,600,700,900&quot;</span> <span class="nv">media</span><span class="o">=</span><span class="s2">&quot;all&quot;</span>&gt;&lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text/css&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;/public/style.css&quot;</span> <span class="nv">media</span><span class="o">=</span><span class="s2">&quot;all&quot;</span>&gt;&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;google-site-verification&quot;</span> <span class="nv">content</span><span class="o">=</span><span class="s2">&quot;OIx3DxcNRJ_Kyd7hAtGRhZnggKpv6DRWutY7Ih9R3Ww&quot;</span>&gt;&lt;/head&gt;&lt;body&gt;&lt;header&gt;&lt;nav <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;navbar navbar-default&quot;</span>&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;container&quot;</span>&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;navbar-header&quot;</span>&gt;&lt;button <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;button&quot;</span> data-toggle<span class="o">=</span><span class="s2">&quot;collapse&quot;</span> data-target<span class="o">=</span><span class="s2">&quot;#navbar&quot;</span> <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;navbar-toggle collapsed&quot;</span>&gt;&lt;span <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;icon-bar&quot;</span>&gt;&lt;/span&gt;&lt;span <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;icon-bar&quot;</span>&gt;&lt;/span&gt;&lt;span <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;icon-bar&quot;</span>&gt;&lt;/span&gt;&lt;/button&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;navbar-brand logo&quot;</span>&gt;&lt;span&gt;&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;/&quot;</span>&gt;&lt;span <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;logo fa fa-terminal&quot;</span>&gt;&lt;/span&gt; mockbin&lt;/a&gt; &lt;span <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;text-muted&quot;</span>&gt;by &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://www.mashape.com&quot;</span>&gt;Mashape&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div <span class="nv">id</span><span class="o">=</span><span class="s2">&quot;navbar&quot;</span> <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;collapse navbar-collapse&quot;</span>&gt;&lt;ul <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;nav navbar-nav navbar-right&quot;</span>&gt;&lt;li&gt;&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;/docs&quot;</span>&gt;Docs&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;/bin/create&quot;</span>&gt;Create Bin&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://github.com/Mashape/mockbin&quot;</span>&gt;Github&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/nav&gt;&lt;/header&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;home&quot;</span>&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;showcase&quot;</span>&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;container&quot;</span>&gt;&lt;h1&gt;Mockbin&lt;/h1&gt;&lt;p <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;col-lg-offset-2 col-lg-8 lead&quot;</span>&gt;Mockbin allows you to generate &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;/bin/create&quot;</span>&gt;custom endpoints&lt;/a&gt; to <span class="nb">test</span>, mock, and track HTTP requests &amp;amp; responses between libraries, sockets and APIs.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;container&quot;</span>&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;btn-toolbar&quot;</span>&gt;&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;/bin/bbe7f656-12d6-4877-9fa8-5cd61f9522a9/view&quot;</span> <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;btn btn-primary&quot;</span>&gt;View Sample Bin&lt;/a&gt;&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;/bin/create&quot;</span> <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;btn btn-success&quot;</span>&gt;Create Bin&lt;/a&gt;&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;#example&quot;</span> <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;btn btn-primary hidden-xs&quot;</span>&gt;Send a Request&lt;/a&gt;&lt;/div&gt;&lt;hr&gt;&lt;h2 <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;text-center&quot;</span>&gt;Feature Highlights&lt;/h2&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;row features&quot;</span>&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;col-md-6&quot;</span>&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;media&quot;</span>&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;media-left&quot;</span>&gt;&lt;img <span class="nv">src</span><span class="o">=</span><span class="s2">&quot;/public/friendly.png&quot;</span> <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;media-object&quot;</span>&gt;&lt;/div&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;media-body&quot;</span>&gt;&lt;h4 <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;media-heading&quot;</span>&gt;Mock Custom Endpoints&lt;/h4&gt;&lt;p&gt;Mock custom endpoints using any &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://ahmadnassri.github.io/har-resources/&quot;</span> <span class="nv">target</span><span class="o">=</span><span class="s2">&quot;_blank&quot;</span>&gt;HTTP Archive <span class="o">(</span>HAR<span class="o">)</span>&lt;/a&gt; response object &lt;em&gt;<span class="o">(</span>can be used as webhooks, api mocks, or anything you want!<span class="o">)</span>&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;/docs&quot;</span>&gt;Learn More &lt;span <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;fa fa-angle-right&quot;</span>&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;media&quot;</span>&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;media-left&quot;</span>&gt;&lt;img <span class="nv">src</span><span class="o">=</span><span class="s2">&quot;/public/formats.png&quot;</span> <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;media-object&quot;</span>&gt;&lt;/div&gt;&lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;media-body&quot;</span>&gt;&lt;h4 <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;media-heading&quot;</span>&gt;JSON, XML, YAML, HTML&lt;/h4&gt;&lt;p&gt;Don<span class="s1">&#39;t like JSON? No problem! Mockbin supports output in JSON, YAML and XML, as well as an HTML view for in-browser testing&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;/docs#content-negotiation&quot;&gt;Learn More &lt;span class=&quot;fa fa-angle-right&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;media&quot;&gt;&lt;div class=&quot;media-left&quot;&gt;&lt;img src=&quot;/public/history.png&quot; class=&quot;media-object&quot;&gt;&lt;/div&gt;&lt;div class=&quot;media-body&quot;&gt;&lt;h4 class=&quot;media-heading&quot;&gt;Log and Inspect Calls&lt;/h4&gt;&lt;p&gt;Log and inspect incoming calls to your custom endpoints &lt;em&gt;(get detailed view to how clients are calling your api/webhook)&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;/docs&quot;&gt;Learn More &lt;span class=&quot;fa fa-angle-right&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;col-md-6&quot;&gt;&lt;div class=&quot;media&quot;&gt;&lt;div class=&quot;media-left&quot;&gt;&lt;img src=&quot;/public/mock.png&quot; class=&quot;media-object&quot;&gt;&lt;/div&gt;&lt;div class=&quot;media-body&quot;&gt;&lt;h4 class=&quot;media-heading&quot;&gt;Custom HTTP Method&lt;/h4&gt;&lt;p&gt;No longer are you limited to &lt;code&gt;GET&lt;/code&gt; &amp;amp; &lt;code&gt;POST&lt;/code&gt;, Mockbin accepts all standard Methods and allows method overriding&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;/docs#http-methods&quot;&gt;Learn More &lt;span class=&quot;fa fa-angle-right&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;media&quot;&gt;&lt;div class=&quot;media-left&quot;&gt;&lt;img src=&quot;/public/inspect.png&quot; class=&quot;media-object&quot;&gt;&lt;/div&gt;&lt;div class=&quot;media-body&quot;&gt;&lt;h4 class=&quot;media-heading&quot;&gt;CORS Headers&lt;/h4&gt;&lt;p&gt;Debug your front-end JavaScript HTTP calls from any domain, Mockbin will dynamically generate Cross-Origin resource sharing headers&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;/docs&quot;&gt;Learn More &lt;span class=&quot;fa fa-angle-right&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;media&quot;&gt;&lt;div class=&quot;media-left&quot;&gt;&lt;img src=&quot;/public/har.png&quot; class=&quot;media-object&quot;&gt;&lt;/div&gt;&lt;div class=&quot;media-body&quot;&gt;&lt;h4 class=&quot;media-heading&quot;&gt;HTTP Archive (HAR)&lt;/h4&gt;&lt;p&gt;Mockbin relies on the popular &lt;a href=&quot;https://ahmadnassri.github.io/har-resources/&quot; target=&quot;_blank&quot;&gt;HTTP Archive (HAR)&lt;/a&gt; format to create mock endpoints (Bins), import data and describe HTTP call logs.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;/docs&quot;&gt;Learn More &lt;span class=&quot;fa fa-angle-right&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;hr&gt;&lt;h2 class=&quot;text-center&quot;&gt;Test using your preferred language:&lt;/h2&gt;&lt;iframe id=&quot;example&quot; src=&quot;https://api.apiembed.com/?source=http://mockbin.org/public/samples/request.json&amp;amp;targets=all&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; marginheight=&quot;0&quot; marginwidth=&quot;0&quot; width=&quot;100%&quot; height=&quot;500&quot; seamless class=&quot;embed&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;footer class=&quot;hidden-xs&quot;&gt;&lt;nav class=&quot;navbar navbar-default navbar-fixed-bottom&quot;&gt;&lt;div class=&quot;container&quot;&gt;&lt;div class=&quot;navbar-text&quot;&gt;&lt;a href=&quot;https://github.com/Mashape/mockbin&quot; data-icon=&quot;octicon-star&quot; data-count-href=&quot;/Mashape/mockbin/stargazers&quot; data-count-api=&quot;/repos/Mashape/mockbin#stargazers_count&quot; class=&quot;github-button&quot;&gt;Star&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://github.com/Mashape/mockbin&quot; data-icon=&quot;octicon-eye&quot; data-count-href=&quot;/Mashape/mockbin/watchers&quot; data-count-api=&quot;/repos/Mashape/mockbin#subscribers_count&quot; class=&quot;github-button&quot;&gt;Watch&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://github.com/Mashape/mockbin/issues&quot; data-icon=&quot;octicon-issue-opened&quot; data-count-api=&quot;/repos/Mashape/mockbin#open_issues_count&quot; class=&quot;github-button&quot;&gt;Issue&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;nav navbar-right navbar-text hidden-xs&quot;&gt;&lt;a href=&quot;https://twitter.com/share&quot; data-url=&quot;http://mockbin.org&quot; data-via=&quot;Mashape&quot; data-related=&quot;Mashape&quot; data-hashtags=&quot;Mock, Test, Track, HTTP&quot; data-dnt=&quot;true&quot; class=&quot;twitter-share-button&quot;&gt;Tweet&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/nav&gt;&lt;/footer&gt;&lt;script type=&quot;text/javascript&quot; id=&quot;twitter-wjs&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; async defer&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; id=&quot;github-bjs&quot; src=&quot;https://buttons.github.io/buttons.js&quot; async defer&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;//mashape.github.io/notification-bar/embed.js&quot; async defer&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot;&gt;!function(){var analytics=window.analytics=window.analytics||[];if(!analytics.initialize)if(analytics.invoked)window.console&amp;&amp;console.error&amp;&amp;console.error(&quot;Segment snippet included twice.&quot;);else{analytics.invoked=!0;analytics.methods=[&quot;trackSubmit&quot;,&quot;trackClick&quot;,&quot;trackLink&quot;,&quot;trackForm&quot;,&quot;pageview&quot;,&quot;identify&quot;,&quot;group&quot;,&quot;track&quot;,&quot;ready&quot;,&quot;alias&quot;,&quot;page&quot;,&quot;once&quot;,&quot;off&quot;,&quot;on&quot;];analytics.factory=function(t){return function(){var e=Array.prototype.slice.call(arguments);e.unshift(t);analytics.push(e);return analytics}};for(var t=0;t&lt;analytics.methods.length;t++){var e=analytics.methods[t];analytics[e]=analytics.factory(e)}analytics.load=function(t){var e=document.createElement(&quot;script&quot;);e.type=&quot;text/javascript&quot;;e.async=!0;e.src=(&quot;https:&quot;===document.location.protocol?&quot;https://&quot;:&quot;http://&quot;)+&quot;cdn.segment.com/analytics.js/v1/&quot;+t+&quot;/analytics.min.js&quot;;var n=document.getElementsByTagName(&quot;script&quot;)[0];n.parentNode.insertBefore(e,n)};analytics.SNIPPET_VERSION=&quot;3.0.1&quot;;</span>
</span><span class='line'><span class="s1">  analytics.load(&#39;</span>tUiM2iBCz991uF4rDF0a4WSr6NEjiVuU<span class="err">&#39;</span><span class="o">)</span>;
</span><span class='line'>  analytics.page<span class="o">()</span>
</span><span class='line'><span class="o">}}()</span>;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;
</span></code></pre></td></tr></table></div></figure>


<h2>kong 設定</h2>

<p>Kong の設定も RESTful API で確認できる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
<span class='line-number'>233</span>
<span class='line-number'>234</span>
<span class='line-number'>235</span>
<span class='line-number'>236</span>
<span class='line-number'>237</span>
<span class='line-number'>238</span>
<span class='line-number'>239</span>
<span class='line-number'>240</span>
<span class='line-number'>241</span>
<span class='line-number'>242</span>
<span class='line-number'>243</span>
<span class='line-number'>244</span>
<span class='line-number'>245</span>
<span class='line-number'>246</span>
<span class='line-number'>247</span>
<span class='line-number'>248</span>
<span class='line-number'>249</span>
<span class='line-number'>250</span>
<span class='line-number'>251</span>
<span class='line-number'>252</span>
<span class='line-number'>253</span>
<span class='line-number'>254</span>
<span class='line-number'>255</span>
<span class='line-number'>256</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl -i -X GET http://localhost:8001
</span><span class='line'>HTTP/1.1 200 OK
</span><span class='line'>Date: Wed, 24 Oct 2018 06:31:51 GMT
</span><span class='line'>Content-Type: application/json; <span class="nv">charset</span><span class="o">=</span>utf-8
</span><span class='line'>Connection: keep-alive
</span><span class='line'>Access-Control-Allow-Origin: *
</span><span class='line'>Server: kong/0.14.1
</span><span class='line'>Content-Length: 5968
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;plugins&quot;</span>: <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;enabled_in_cluster&quot;</span>: <span class="o">[</span>
</span><span class='line'>      <span class="s2">&quot;key-auth&quot;</span>
</span><span class='line'>    <span class="o">]</span>,
</span><span class='line'>    <span class="s2">&quot;available_on_server&quot;</span>: <span class="o">{</span>
</span><span class='line'>      <span class="s2">&quot;response-transformer&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;oauth2&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;acl&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;correlation-id&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;pre-function&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;jwt&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;cors&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;ip-restriction&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;basic-auth&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;key-auth&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;rate-limiting&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;request-transformer&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;http-log&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;file-log&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;hmac-auth&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;ldap-auth&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;datadog&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;tcp-log&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;zipkin&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;post-function&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;request-size-limiting&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;bot-detection&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;syslog&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;loggly&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;azure-functions&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;udp-log&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;response-ratelimiting&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;aws-lambda&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;statsd&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;prometheus&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;request-termination&quot;</span>: <span class="nb">true</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>,
</span><span class='line'>  <span class="s2">&quot;tagline&quot;</span>: <span class="s2">&quot;Welcome to kong&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;configuration&quot;</span>: <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;plugins&quot;</span>: <span class="o">[</span>
</span><span class='line'>      <span class="s2">&quot;bundled&quot;</span>
</span><span class='line'>    <span class="o">]</span>,
</span><span class='line'>    <span class="s2">&quot;admin_ssl_enabled&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>    <span class="s2">&quot;lua_ssl_verify_depth&quot;</span>: 1,
</span><span class='line'>    <span class="s2">&quot;trusted_ips&quot;</span>: <span class="o">{}</span>,
</span><span class='line'>    <span class="s2">&quot;prefix&quot;</span>: <span class="s2">&quot;/opt/bitnami/apps/kong/server&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;loaded_plugins&quot;</span>: <span class="o">{</span>
</span><span class='line'>      <span class="s2">&quot;response-transformer&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;request-termination&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;prometheus&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;ip-restriction&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;pre-function&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;jwt&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;cors&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;statsd&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;basic-auth&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;key-auth&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;ldap-auth&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;aws-lambda&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;http-log&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;response-ratelimiting&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;hmac-auth&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;request-size-limiting&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;datadog&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;tcp-log&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;zipkin&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;post-function&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;bot-detection&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;acl&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;loggly&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;syslog&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;azure-functions&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;udp-log&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;file-log&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;request-transformer&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;correlation-id&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;rate-limiting&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;oauth2&quot;</span>: <span class="nb">true</span>
</span><span class='line'>    <span class="o">}</span>,
</span><span class='line'>    <span class="s2">&quot;cassandra_username&quot;</span>: <span class="s2">&quot;bn_kong&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;admin_ssl_cert_csr_default&quot;</span>: <span class="s2">&quot;/opt/bitnami/apps/kong/server/ssl/admin-kong-default.csr&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;ssl_cert_key&quot;</span>: <span class="s2">&quot;/opt/bitnami/apps/kong/server/ssl/kong-default.key&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;admin_ssl_cert_key&quot;</span>: <span class="s2">&quot;/opt/bitnami/apps/kong/server/ssl/admin-kong-default.key&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;dns_resolver&quot;</span>: <span class="o">{}</span>,
</span><span class='line'>    <span class="s2">&quot;pg_user&quot;</span>: <span class="s2">&quot;kong&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;mem_cache_size&quot;</span>: <span class="s2">&quot;128m&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;cassandra_data_centers&quot;</span>: <span class="o">[</span>
</span><span class='line'>      <span class="s2">&quot;dc1:2&quot;</span>,
</span><span class='line'>      <span class="s2">&quot;dc2:3&quot;</span>
</span><span class='line'>    <span class="o">]</span>,
</span><span class='line'>    <span class="s2">&quot;nginx_admin_directives&quot;</span>: <span class="o">{}</span>,
</span><span class='line'>    <span class="s2">&quot;cassandra_password&quot;</span>: <span class="s2">&quot;******&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;custom_plugins&quot;</span>: <span class="o">{}</span>,
</span><span class='line'>    <span class="s2">&quot;pg_host&quot;</span>: <span class="s2">&quot;127.0.0.1&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;nginx_acc_logs&quot;</span>: <span class="s2">&quot;/opt/bitnami/apps/kong/server/logs/access.log&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;proxy_listen&quot;</span>: <span class="o">[</span>
</span><span class='line'>      <span class="s2">&quot;0.0.0.0:80&quot;</span>,
</span><span class='line'>      <span class="s2">&quot;0.0.0.0:443 ssl&quot;</span>
</span><span class='line'>    <span class="o">]</span>,
</span><span class='line'>    <span class="s2">&quot;client_ssl_cert_default&quot;</span>: <span class="s2">&quot;/opt/bitnami/apps/kong/server/ssl/kong-default.crt&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;ssl_cert_key_default&quot;</span>: <span class="s2">&quot;/opt/bitnami/apps/kong/server/ssl/kong-default.key&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;dns_no_sync&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>    <span class="s2">&quot;db_update_propagation&quot;</span>: 5,
</span><span class='line'>    <span class="s2">&quot;nginx_err_logs&quot;</span>: <span class="s2">&quot;/opt/bitnami/apps/kong/server/logs/error.log&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;cassandra_port&quot;</span>: 9042,
</span><span class='line'>    <span class="s2">&quot;dns_order&quot;</span>: <span class="o">[</span>
</span><span class='line'>      <span class="s2">&quot;LAST&quot;</span>,
</span><span class='line'>      <span class="s2">&quot;SRV&quot;</span>,
</span><span class='line'>      <span class="s2">&quot;A&quot;</span>,
</span><span class='line'>      <span class="s2">&quot;CNAME&quot;</span>
</span><span class='line'>    <span class="o">]</span>,
</span><span class='line'>    <span class="s2">&quot;dns_error_ttl&quot;</span>: 1,
</span><span class='line'>    <span class="s2">&quot;headers&quot;</span>: <span class="o">[</span>
</span><span class='line'>      <span class="s2">&quot;server_tokens&quot;</span>,
</span><span class='line'>      <span class="s2">&quot;latency_tokens&quot;</span>
</span><span class='line'>    <span class="o">]</span>,
</span><span class='line'>    <span class="s2">&quot;dns_stale_ttl&quot;</span>: 4,
</span><span class='line'>    <span class="s2">&quot;nginx_optimizations&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>    <span class="s2">&quot;database&quot;</span>: <span class="s2">&quot;cassandra&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;pg_database&quot;</span>: <span class="s2">&quot;kong&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;nginx_worker_processes&quot;</span>: <span class="s2">&quot;auto&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;lua_package_cpath&quot;</span>: <span class="s2">&quot;&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;admin_acc_logs&quot;</span>: <span class="s2">&quot;/opt/bitnami/apps/kong/server/logs/admin_access.log&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;lua_package_path&quot;</span>: <span class="s2">&quot;./?.lua;./?/init.lua;&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;nginx_pid&quot;</span>: <span class="s2">&quot;/opt/bitnami/apps/kong/server/pids/nginx.pid&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;upstream_keepalive&quot;</span>: 60,
</span><span class='line'>    <span class="s2">&quot;cassandra_contact_points&quot;</span>: <span class="o">[</span>
</span><span class='line'>      <span class="s2">&quot;127.0.0.1&quot;</span>
</span><span class='line'>    <span class="o">]</span>,
</span><span class='line'>    <span class="s2">&quot;client_ssl_cert_csr_default&quot;</span>: <span class="s2">&quot;/opt/bitnami/apps/kong/server/ssl/kong-default.csr&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;proxy_listeners&quot;</span>: <span class="o">[</span>
</span><span class='line'>      <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;ssl&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>        <span class="s2">&quot;ip&quot;</span>: <span class="s2">&quot;0.0.0.0&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;proxy_protocol&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>        <span class="s2">&quot;port&quot;</span>: 80,
</span><span class='line'>        <span class="s2">&quot;http2&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>        <span class="s2">&quot;listener&quot;</span>: <span class="s2">&quot;0.0.0.0:80&quot;</span>
</span><span class='line'>      <span class="o">}</span>,
</span><span class='line'>      <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;ssl&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>        <span class="s2">&quot;ip&quot;</span>: <span class="s2">&quot;0.0.0.0&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;proxy_protocol&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>        <span class="s2">&quot;port&quot;</span>: 443,
</span><span class='line'>        <span class="s2">&quot;http2&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>        <span class="s2">&quot;listener&quot;</span>: <span class="s2">&quot;0.0.0.0:443 ssl&quot;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>    <span class="o">]</span>,
</span><span class='line'>    <span class="s2">&quot;proxy_ssl_enabled&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>    <span class="s2">&quot;admin_access_log&quot;</span>: <span class="s2">&quot;logs/admin_access.log&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;cassandra_schema_consensus_timeout&quot;</span>: 10000,
</span><span class='line'>    <span class="s2">&quot;enabled_headers&quot;</span>: <span class="o">{</span>
</span><span class='line'>      <span class="s2">&quot;latency_tokens&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;X-Kong-Proxy-Latency&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;Via&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;server_tokens&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;Server&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;X-Kong-Upstream-Latency&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>      <span class="s2">&quot;X-Kong-Upstream-Status&quot;</span>: <span class="nb">false</span>
</span><span class='line'>    <span class="o">}</span>,
</span><span class='line'>    <span class="s2">&quot;cassandra_ssl&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>    <span class="s2">&quot;ssl_cert_csr_default&quot;</span>: <span class="s2">&quot;/opt/bitnami/apps/kong/server/ssl/kong-default.csr&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;db_resurrect_ttl&quot;</span>: 30,
</span><span class='line'>    <span class="s2">&quot;client_ssl&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>    <span class="s2">&quot;cassandra_consistency&quot;</span>: <span class="s2">&quot;ONE&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;client_max_body_size&quot;</span>: <span class="s2">&quot;0&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;admin_error_log&quot;</span>: <span class="s2">&quot;logs/error.log&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;pg_ssl_verify&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>    <span class="s2">&quot;dns_not_found_ttl&quot;</span>: 30,
</span><span class='line'>    <span class="s2">&quot;pg_ssl&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>    <span class="s2">&quot;db_update_frequency&quot;</span>: 5,
</span><span class='line'>    <span class="s2">&quot;cassandra_repl_factor&quot;</span>: 1,
</span><span class='line'>    <span class="s2">&quot;cassandra_repl_strategy&quot;</span>: <span class="s2">&quot;SimpleStrategy&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;nginx_kong_conf&quot;</span>: <span class="s2">&quot;/opt/bitnami/apps/kong/server/nginx-kong.conf&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;cassandra_lb_policy&quot;</span>: <span class="s2">&quot;RoundRobin&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;nginx_http_directives&quot;</span>: <span class="o">[</span>
</span><span class='line'>      <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;value&quot;</span>: <span class="s2">&quot;prometheus_metrics 5m&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;lua_shared_dict&quot;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>    <span class="o">]</span>,
</span><span class='line'>    <span class="s2">&quot;admin_ssl_cert&quot;</span>: <span class="s2">&quot;/opt/bitnami/apps/kong/server/ssl/admin-kong-default.crt&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;kong_env&quot;</span>: <span class="s2">&quot;/opt/bitnami/apps/kong/server/.kong_env&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;real_ip_header&quot;</span>: <span class="s2">&quot;X-Real-IP&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;dns_hostsfile&quot;</span>: <span class="s2">&quot;/etc/hosts&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;admin_listeners&quot;</span>: <span class="o">[</span>
</span><span class='line'>      <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;ssl&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>        <span class="s2">&quot;ip&quot;</span>: <span class="s2">&quot;127.0.0.1&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;proxy_protocol&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>        <span class="s2">&quot;port&quot;</span>: 8001,
</span><span class='line'>        <span class="s2">&quot;http2&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>        <span class="s2">&quot;listener&quot;</span>: <span class="s2">&quot;127.0.0.1:8001&quot;</span>
</span><span class='line'>      <span class="o">}</span>,
</span><span class='line'>      <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;ssl&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>        <span class="s2">&quot;ip&quot;</span>: <span class="s2">&quot;127.0.0.1&quot;</span>,
</span><span class='line'>        <span class="s2">&quot;proxy_protocol&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>        <span class="s2">&quot;port&quot;</span>: 8444,
</span><span class='line'>        <span class="s2">&quot;http2&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>        <span class="s2">&quot;listener&quot;</span>: <span class="s2">&quot;127.0.0.1:8444 ssl&quot;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>    <span class="o">]</span>,
</span><span class='line'>    <span class="s2">&quot;error_default_type&quot;</span>: <span class="s2">&quot;text/plain&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;ssl_cert&quot;</span>: <span class="s2">&quot;/opt/bitnami/apps/kong/server/ssl/kong-default.crt&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;db_cache_ttl&quot;</span>: 3600,
</span><span class='line'>    <span class="s2">&quot;admin_ssl_cert_key_default&quot;</span>: <span class="s2">&quot;/opt/bitnami/apps/kong/server/ssl/admin-kong-default.key&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;cassandra_ssl_verify&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>    <span class="s2">&quot;proxy_access_log&quot;</span>: <span class="s2">&quot;logs/access.log&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;ssl_cipher_suite&quot;</span>: <span class="s2">&quot;modern&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;real_ip_recursive&quot;</span>: <span class="s2">&quot;off&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;proxy_error_log&quot;</span>: <span class="s2">&quot;logs/error.log&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;client_ssl_cert_key_default&quot;</span>: <span class="s2">&quot;/opt/bitnami/apps/kong/server/ssl/kong-default.key&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;nginx_daemon&quot;</span>: <span class="s2">&quot;on&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;anonymous_reports&quot;</span>: <span class="nb">true</span>,
</span><span class='line'>    <span class="s2">&quot;cassandra_timeout&quot;</span>: 5000,
</span><span class='line'>    <span class="s2">&quot;nginx_proxy_directives&quot;</span>: <span class="o">{}</span>,
</span><span class='line'>    <span class="s2">&quot;pg_port&quot;</span>: 5432,
</span><span class='line'>    <span class="s2">&quot;log_level&quot;</span>: <span class="s2">&quot;notice&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;client_body_buffer_size&quot;</span>: <span class="s2">&quot;8k&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;ssl_ciphers&quot;</span>: <span class="s2">&quot;ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;lua_socket_pool_size&quot;</span>: 30,
</span><span class='line'>    <span class="s2">&quot;admin_ssl_cert_default&quot;</span>: <span class="s2">&quot;/opt/bitnami/apps/kong/server/ssl/admin-kong-default.crt&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;cassandra_keyspace&quot;</span>: <span class="s2">&quot;bitnami_kong&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;ssl_cert_default&quot;</span>: <span class="s2">&quot;/opt/bitnami/apps/kong/server/ssl/kong-default.crt&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;nginx_conf&quot;</span>: <span class="s2">&quot;/opt/bitnami/apps/kong/server/nginx.conf&quot;</span>,
</span><span class='line'>    <span class="s2">&quot;admin_listen&quot;</span>: <span class="o">[</span>
</span><span class='line'>      <span class="s2">&quot;127.0.0.1:8001&quot;</span>,
</span><span class='line'>      <span class="s2">&quot;127.0.0.1:8444 ssl&quot;</span>
</span><span class='line'>    <span class="o">]</span>
</span><span class='line'>  <span class="o">}</span>,
</span><span class='line'>  <span class="s2">&quot;version&quot;</span>: <span class="s2">&quot;0.14.1&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;node_id&quot;</span>: <span class="s2">&quot;7aac7417-40ac-426e-9b42-9f8cf4e56026&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;lua_version&quot;</span>: <span class="s2">&quot;LuaJIT 2.1.0-beta3&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;prng_seeds&quot;</span>: <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;pid: 2331&quot;</span>: 191239192120,
</span><span class='line'>    <span class="s2">&quot;pid: 2332&quot;</span>: 214860234107
</span><span class='line'>  <span class="o">}</span>,
</span><span class='line'>  <span class="s2">&quot;timers&quot;</span>: <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;pending&quot;</span>: 4,
</span><span class='line'>    <span class="s2">&quot;running&quot;</span>: 0
</span><span class='line'>  <span class="o">}</span>,
</span><span class='line'>  <span class="s2">&quot;hostname&quot;</span>: <span class="s2">&quot;kong-app&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>関連</h2>

<ul>
<li><a href="http://momota.github.io/blog/2018/10/29/acl-on-kong/">kong でアクセス制御 &ndash; momota.txt</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows + Chrome Headless mode + Ruby + Selenium]]></title>
    <link href="http://momota.github.io/blog/2018/10/16/selenium-with-headless-mode-browser/"/>
    <updated>2018-10-16T11:31:00+09:00</updated>
    <id>http://momota.github.io/blog/2018/10/16/selenium-with-headless-mode-browser</id>
    <content type="html"><![CDATA[<p>Selenium と Ruby によりテストの自動化であったり、入力の自動化を進めている。
コマンドラインから実行すればよいことがほとんどで、ブラウザのGUIが起動しなくてもよい。
したがって、GUI が起動しない Google Chrome の Headless モードを使った Selenium スクリプトへ順次移行していこうと思う。</p>

<p>動作の軽量化もちょっとは期待できるかも。 (比較計測はしていない)</p>

<p>以下は、関連記事。</p>

<ul>
<li><a href="http://momota.github.io/blog/2016/02/26/selenium/">ブラウザ操作の自動化： selenium と ruby &ndash; momota.txt</a></li>
<li><a href="http://momota.github.io/blog/2016/05/28/selenium-know-how/">seleniumノウハウ &ndash; momota.txt</a></li>
</ul>


<!-- more -->


<h2>環境情報</h2>

<table>
<thead>
<tr>
<th>ソフトウェア           </th>
<th> バージョン</th>
</tr>
</thead>
<tbody>
<tr>
<td>OS                     </td>
<td> Windows 10 Pro 1709</td>
</tr>
<tr>
<td>ブラウザ               </td>
<td> Google Chrome 69.0.3497.100</td>
</tr>
<tr>
<td>ChromeDriver           </td>
<td> 2.39.562718</td>
</tr>
<tr>
<td>ruby                   </td>
<td> 2.5.1p57</td>
</tr>
<tr>
<td>gem selenium-webdriver </td>
<td> (3.14.1, 3.12.0)</td>
</tr>
</tbody>
</table>


<p>Ruby と gem はインストールされているものとする。</p>

<h2>Chrome headless モードの動作確認</h2>

<p>Chrome のバージョン59以降からヘッドレスモードを搭載している。
Chrome をインストールしていない場合は、インストールする。</p>

<p>動作確認はコマンドライン (Powershell or コマンドプロンプト) から可能で、以下のように動けば OK。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; cd "C:\Program Files (x86)\Google\Chrome\Application"
</span><span class='line'>&gt; ls
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    ディレクトリ: C:\Program Files (x86)\Google\Chrome\Application
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Mode                LastWriteTime         Length Name
</span><span class='line'>----                -------------         ------ ----
</span><span class='line'>d-----       2018/09/21     19:12                69.0.3497.100
</span><span class='line'>d-----       2018/09/25     16:45                SetupMetrics
</span><span class='line'>-a----       2018/09/15     17:47        1378648 chrome.exe
</span><span class='line'>-a----       2018/09/25     16:45            410 chrome.VisualElementsManifest.xml
</span><span class='line'>-a----       2018/05/17     17:06         122574 master_preferences
</span><span class='line'>
</span><span class='line'>&gt; .\chrome.exe --enable-logging --headless --disable-gpu --dump-dom https://www.chromestatus.com
</span><span class='line'>&lt;!DOCTYPE html&gt;
</span><span class='line'>&lt;html lang="en"&gt;&lt;head&gt;
</span><span class='line'>&lt;meta charset="utf-8"&gt;
</span><span class='line'>&lt;title&gt;Chrome Platform Status&lt;/title&gt;
</span><span class='line'>&lt;meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0"&gt;
</span><span class='line'>
</span><span class='line'>&lt;link rel="manifest" href="http://momota.github.io/static/manifest.json"&gt;
</span><span class='line'>... (snip) ...</span></code></pre></td></tr></table></div></figure>


<p>Proxy 環境下にいる場合は、<code>--proxy-server</code> や <code>--proxy-auth</code> オプションで指定してあげればよい。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; .\chrome.exe --enable-logging --headless --disable-gpu --dump-dom --proxy-server=http://PROXY_HOST:PORT --proxy-auth=USER:PASSWORD https://www.chromestatus.com</span></code></pre></td></tr></table></div></figure>


<p>詳細は <a href="https://developers.google.com/web/updates/2017/04/headless-chrome?hl=ja">ヘッドレス Chrome ことはじめ | Web | Google Developers</a> のあたりを参照。</p>

<h2>ChromeDriver</h2>

<p>Selenium WebDriver は Selenium から Web ブラウザをコントロールするライブラリ群。
各ブラウザ向けに実装されていて、ChromeDriver は Chrome 用の WebDriver。</p>

<p>以下から入手し、PATHを通す。(もしくは通っているところに置く)</p>

<ul>
<li><a href="http://chromedriver.chromium.org/downloads">Downloads &ndash; ChromeDriver &ndash; WebDriver for Chrome</a></li>
</ul>


<p>コンソールからバージョンが表示できれば PATH 設定の確認になる。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; chromedriver.exe -v
</span><span class='line'>ChromeDriver 2.39.562718 (9a2698cba08cf5a471a29d30c8b3e12becabb0e9)</span></code></pre></td></tr></table></div></figure>


<h2>Selenium スクリプト</h2>

<p>サンプルとして、本ブログのいくつかのページのスクリーンショットを取得する。
<a href="http://momota.github.io/blog/page/2/">http://momota.github.io/blog/page/2/</a> ～ <a href="http://momota.github.io/blog/page/4/">http://momota.github.io/blog/page/4/</a> のスクリーンショットを取得してみる。</p>

<p>Headless モードといっても特段難しいことはなく、以下のように Webdriver にオプションしてあげるだけでよい。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">options</span> <span class="o">=</span> <span class="ss">Selenium</span><span class="p">:</span><span class="ss">:WebDriver</span><span class="o">::</span><span class="ss">Chrome</span><span class="p">:</span><span class="ss">:Options</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">options</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s1">&#39;--headless&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">options</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s1">&#39;--disable-gpu&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">options</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s1">&#39;--window-size=1929,2160&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">driver</span> <span class="o">=</span> <span class="ss">Selenium</span><span class="p">:</span><span class="ss">:WebDriver</span><span class="o">.</span><span class="n">for</span> <span class="ss">:chrome</span><span class="p">,</span> <span class="ss">options</span><span class="p">:</span> <span class="n">options</span>
</span></code></pre></td></tr></table></div></figure>


<p>Proxy の設定が必要な場合は、以下のようにオプションで指定する。
環境変数 <code>ENV['http_proxy']</code> に設定してもだめなので注意。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gi">+ proxy_host = &#39;PROXY_HOST&#39;</span>
</span><span class='line'><span class="gi">+ proxy_port = &#39;PORT&#39;</span>
</span><span class='line'>
</span><span class='line'>options = Selenium::WebDriver::Chrome::Options.new
</span><span class='line'>options.add_argument(&#39;--headless&#39;)
</span><span class='line'>options.add_argument(&#39;--disable-gpu&#39;)
</span><span class='line'>options.add_argument(&#39;--window-size=1929,2160&#39;)
</span><span class='line'><span class="gi">+ options.add_argument(&quot;--proxy-server=http://#{proxy_host}:#{proxy_port}&quot;)</span>
</span></code></pre></td></tr></table></div></figure>


<p>スクリプトとしては以下のような感じ。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># conding: utf-8</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;selenium-webdriver&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;fileutils&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Blog</span>
</span><span class='line'>  <span class="no">SCREENSHOT_DIR</span> <span class="o">=</span> <span class="s1">&#39;./screenshot/&#39;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span>
</span><span class='line'>    <span class="n">proxy_host</span> <span class="o">=</span> <span class="s1">&#39;PROXY_HOST&#39;</span>
</span><span class='line'>    <span class="n">proxy_port</span> <span class="o">=</span> <span class="s1">&#39;PORT&#39;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">options</span> <span class="o">=</span> <span class="ss">Selenium</span><span class="p">:</span><span class="ss">:WebDriver</span><span class="o">::</span><span class="ss">Chrome</span><span class="p">:</span><span class="ss">:Options</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>    <span class="n">options</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s1">&#39;--headless&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">options</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s1">&#39;--disable-gpu&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">options</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s1">&#39;--window-size=1929,2160&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">options</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s2">&quot;--proxy-server=http://</span><span class="si">#{</span><span class="n">proxy_host</span><span class="si">}</span><span class="s2">:</span><span class="si">#{</span><span class="n">proxy_port</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="vi">@driver</span> <span class="o">=</span> <span class="ss">Selenium</span><span class="p">:</span><span class="ss">:WebDriver</span><span class="o">.</span><span class="n">for</span> <span class="ss">:chrome</span><span class="p">,</span> <span class="ss">options</span><span class="p">:</span> <span class="n">options</span>
</span><span class='line'>    <span class="vi">@base_url</span> <span class="o">=</span> <span class="s1">&#39;http://momota.github.io/&#39;</span>
</span><span class='line'>    <span class="vi">@accept_next_alert</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>    <span class="vi">@driver</span><span class="o">.</span><span class="n">manage</span><span class="o">.</span><span class="n">timeouts</span><span class="o">.</span><span class="n">implicit_wait</span> <span class="o">=</span> <span class="mi">20</span>
</span><span class='line'>    <span class="vi">@verification_errors</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>
</span><span class='line'>    <span class="no">FileUtils</span><span class="o">.</span><span class="n">mkdir</span><span class="p">(</span><span class="no">SCREENSHOT_DIR</span><span class="p">)</span> <span class="k">unless</span> <span class="no">Dir</span><span class="o">.</span><span class="n">exist?</span><span class="p">(</span><span class="no">SCREENSHOT_DIR</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">get_and_screenshot</span>
</span><span class='line'>    <span class="p">(</span><span class="mi">2</span><span class="o">.</span><span class="n">.</span><span class="mi">4</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>      <span class="vi">@driver</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="vi">@base_url</span><span class="si">}</span><span class="s2">blog/page/</span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2">/&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="vi">@driver</span><span class="o">.</span><span class="n">save_screenshot</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="no">SCREENSHOT_DIR</span><span class="si">}</span><span class="s2">headless_</span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2">.png&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;access and save screenshot: </span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">close</span>
</span><span class='line'>    <span class="vi">@driver</span><span class="o">.</span><span class="n">quit</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># ----------------------------------------------------------------------</span>
</span><span class='line'><span class="c1"># main</span>
</span><span class='line'><span class="c1"># ----------------------------------------------------------------------</span>
</span><span class='line'><span class="k">if</span> <span class="bp">__FILE__</span> <span class="o">==</span> <span class="vg">$PROGRAM_NAME</span>
</span><span class='line'>  <span class="n">blog</span> <span class="o">=</span> <span class="no">Blog</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>  <span class="n">blog</span><span class="o">.</span><span class="n">get_and_screenshot</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>普通に <code>ruby script.rb</code> で実行すると、スクリーンショット <code>実行ディレクトリ/screeshot/headless_i.png</code> が出力される。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">PS</span> <span class="o">&gt;</span> <span class="n">ls</span> <span class="o">.</span><span class="p">\</span><span class="n">screenshot</span><span class="p">\</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="err">ディレクトリ</span><span class="p">:</span> <span class="ss">C</span><span class="p">:\</span><span class="no">SOMEWHERE</span><span class="p">\</span><span class="n">screenshot</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="no">Mode</span>                <span class="no">LastWriteTime</span>         <span class="no">Length</span> <span class="no">Name</span>
</span><span class='line'><span class="o">----</span>                <span class="o">-------------</span>         <span class="o">------</span> <span class="o">----</span>
</span><span class='line'><span class="o">-</span><span class="n">a</span><span class="o">----</span>       <span class="mi">2018</span><span class="o">/</span><span class="mi">10</span><span class="o">/</span><span class="mi">16</span>     <span class="mi">12</span><span class="p">:</span><span class="mi">39</span>         <span class="mi">438601</span> <span class="n">headless_2</span><span class="o">.</span><span class="n">png</span>
</span><span class='line'><span class="o">-</span><span class="n">a</span><span class="o">----</span>       <span class="mi">2018</span><span class="o">/</span><span class="mi">10</span><span class="o">/</span><span class="mi">16</span>     <span class="mi">12</span><span class="p">:</span><span class="mi">39</span>         <span class="mi">405054</span> <span class="n">headless_3</span><span class="o">.</span><span class="n">png</span>
</span><span class='line'><span class="o">-</span><span class="n">a</span><span class="o">----</span>       <span class="mi">2018</span><span class="o">/</span><span class="mi">10</span><span class="o">/</span><span class="mi">16</span>     <span class="mi">12</span><span class="p">:</span><span class="mi">39</span>         <span class="mi">399793</span> <span class="n">headless_4</span><span class="o">.</span><span class="n">png</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flask アプリ (チャットボット) のコンテナ化]]></title>
    <link href="http://momota.github.io/blog/2018/10/11/dockerize-flask-app/"/>
    <updated>2018-10-11T10:54:00+09:00</updated>
    <id>http://momota.github.io/blog/2018/10/11/dockerize-flask-app</id>
    <content type="html"><![CDATA[<p>以下で作ったようなFlaskアプリ (チャットボット) をコンテナ化 (Docker) する。</p>

<ul>
<li><a href="http://momota.github.io/blog/2018/06/19/unittest/">Python unittest で Flask (チャットボット) の単体テスト &ndash; momota.txt</a></li>
</ul>


<!-- more -->


<h2>Flask アプリ</h2>

<p>Python のバージョンは 3.6。</p>

<p>Flask アプリのディレクトリ構成は以下。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ tree
</span><span class='line'>.
</span><span class='line'>|____log
</span><span class='line'>| |____mattermost_bot.log
</span><span class='line'>|____mattermostbot.py</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>mattermostbot.py</code>: ボット本体</li>
<li><code>log/</code> : ログ保存用のディレクトリ</li>
</ul>


<p><code>mattermost.py</code> は簡易的なオウム返しするボットで以下のようなスクリプト。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">json</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">logging</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Flask</span><span class="p">,</span> <span class="n">request</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">logging.handlers</span> <span class="kn">import</span> <span class="n">RotatingFileHandler</span>
</span><span class='line'>
</span><span class='line'><span class="n">SCRIPT_DIR</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">abspath</span><span class="p">(</span><span class="n">__file__</span><span class="p">))</span>
</span><span class='line'><span class="n">BOT_LOG</span>    <span class="o">=</span> <span class="n">SCRIPT_DIR</span> <span class="o">+</span> <span class="s">&#39;/log/mattermost_bot.log&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">app</span> <span class="o">=</span> <span class="n">Flask</span><span class="p">(</span><span class="n">__name__</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@app.route</span><span class="p">(</span><span class="s">&#39;/bot&#39;</span><span class="p">,</span> <span class="n">methods</span><span class="o">=</span><span class="p">[</span><span class="s">&#39;POST&#39;</span><span class="p">])</span>
</span><span class='line'><span class="k">def</span> <span class="nf">bot</span><span class="p">():</span>
</span><span class='line'>    <span class="c"># mattermost -&gt; bot へ送信される JSON データの取得</span>
</span><span class='line'>    <span class="n">post_dict</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">form</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">info</span><span class="p">(</span><span class="n">post_dict</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c"># JSONから token と text (ユーザが入力したメッセージ) を取得</span>
</span><span class='line'>    <span class="n">token</span> <span class="o">=</span> <span class="n">post_dict</span><span class="p">[</span><span class="s">&#39;token&#39;</span><span class="p">]</span>
</span><span class='line'>    <span class="n">income_text</span> <span class="o">=</span> <span class="n">post_dict</span><span class="p">[</span><span class="s">&#39;text&#39;</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'>    <span class="c"># income_text は `bot_name COMMAND ARGUMENT` のような形式なので</span>
</span><span class='line'>    <span class="c"># 半角スペースで分割し、それぞれの要素を変数に格納する</span>
</span><span class='line'>    <span class="n">text_array</span> <span class="o">=</span> <span class="n">income_text</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39; &#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">bot_name</span> <span class="o">=</span> <span class="n">text_array</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>    <span class="n">command</span> <span class="o">=</span> <span class="n">text_array</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'>    <span class="n">arg</span> <span class="o">=</span> <span class="s">&quot; &quot;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">text_array</span><span class="p">[</span><span class="mi">2</span><span class="p">:])</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">payload_text</span> <span class="o">=</span> <span class="s">&quot;&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c"># command によって処理を分岐する</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">command</span> <span class="o">==</span> <span class="s">&quot;echo&quot;</span><span class="p">:</span>
</span><span class='line'>        <span class="n">payload_text</span> <span class="o">=</span> <span class="n">echo</span><span class="p">(</span><span class="n">arg</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">info</span><span class="p">(</span><span class="n">payload_text</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c"># レスポンス用の JSON を組み立てる</span>
</span><span class='line'>    <span class="n">payload</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&#39;username&#39;</span><span class="p">:</span> <span class="n">bot_name</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&#39;icon_url&#39;</span><span class="p">:</span> <span class="s">&#39;http://your-server/images/bot_icon.png&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&#39;text&#39;</span><span class="p">:</span> <span class="n">payload_text</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&#39;MATTERMOST_TOKEN&#39;</span><span class="p">:</span> <span class="n">token</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">json_payload</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">payload</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">json_payload</span>
</span><span class='line'>
</span><span class='line'><span class="c"># ログ出力用メソッド</span>
</span><span class='line'><span class="k">def</span> <span class="nf">log</span><span class="p">(</span><span class="n">app</span><span class="p">):</span>
</span><span class='line'>    <span class="n">handler</span> <span class="o">=</span> <span class="n">RotatingFileHandler</span><span class="p">(</span><span class="n">BOT_LOG</span><span class="p">,</span> <span class="n">maxBytes</span><span class="o">=</span><span class="mi">10000</span><span class="p">,</span> <span class="n">backupCount</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>    <span class="n">handler</span><span class="o">.</span><span class="n">setLevel</span><span class="p">(</span><span class="n">logging</span><span class="o">.</span><span class="n">INFO</span><span class="p">)</span>
</span><span class='line'>    <span class="n">formatter</span> <span class="o">=</span> <span class="n">logging</span><span class="o">.</span><span class="n">Formatter</span><span class="p">(</span><span class="s">&#39;</span><span class="si">%(asctime)s</span><span class="se">\t</span><span class="si">%(lineno)d</span><span class="se">\t</span><span class="si">%(levelname)s</span><span class="se">\t</span><span class="si">%(name)s</span><span class="se">\t</span><span class="si">%(message)s</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">handler</span><span class="o">.</span><span class="n">setFormatter</span><span class="p">(</span><span class="n">formatter</span><span class="p">)</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">addHandler</span><span class="p">(</span><span class="n">handler</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># -------------------------------------------------------</span>
</span><span class='line'><span class="c"># echo command</span>
</span><span class='line'><span class="c"># -------------------------------------------------------</span>
</span><span class='line'><span class="k">def</span> <span class="nf">echo</span><span class="p">(</span><span class="n">text</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">text</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">log</span><span class="p">(</span><span class="n">app</span><span class="p">)</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">debug</span> <span class="o">=</span> <span class="bp">True</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="n">host</span><span class="o">=</span><span class="s">&#39;0.0.0.0&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Requirements File</h2>

<p>コンテナにインストールする必要のある Python パッケージ を <code>requirements.txt</code> に書き出す。ようは <code>pip</code> でインストールやつを列挙する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">Flask</span><span class="o">==</span><span class="mf">0.12</span><span class="o">.</span><span class="mi">2</span>
</span></code></pre></td></tr></table></div></figure>


<p>手で作らなくても、すでに Flask アプリを動かしている環境があれば、以下のコマンドで出力できる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>pip freeze &gt; requirements.txt
</span></code></pre></td></tr></table></div></figure>


<h2>Dockerfile</h2>

<p>Docker イメージを生成するため、以下のような <code>Dockerfile</code> を作成する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>FROM python:3.6
</span><span class='line'>
</span><span class='line'>ARG <span class="nv">project_dir</span><span class="o">=</span>/chatbot/
</span><span class='line'>
</span><span class='line'>ADD requirements.txt <span class="nv">$project_dir</span>
</span><span class='line'>ADD mattermostbot.py <span class="nv">$project_dir</span>
</span><span class='line'>ADD log <span class="s2">&quot;${project_dir}log&quot;</span>
</span><span class='line'>
</span><span class='line'>WORKDIR <span class="nv">$project_dir</span>
</span><span class='line'>
</span><span class='line'>RUN pip install -r requirements.txt
</span><span class='line'>CMD <span class="o">[</span><span class="s2">&quot;python&quot;</span>, <span class="s2">&quot;mattermostbot.py&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>プロキシ環境下でビルドする場合は、以下のようにコンテナ内の環境変数を設定してあげれば良い。
追記する場所は、<code>RUN pip install -r requirements.txt</code> より前。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>ARG <span class="nv">proxy_host</span><span class="o">=</span><span class="s2">&quot;proxy.co.jp&quot;</span>
</span><span class='line'>ARG <span class="nv">proxy_port</span><span class="o">=</span><span class="s2">&quot;85&quot;</span>
</span><span class='line'>ARG <span class="nv">proxy_user</span><span class="o">=</span><span class="s2">&quot;USER&quot;</span>
</span><span class='line'>ARG <span class="nv">proxy_pass</span><span class="o">=</span><span class="s2">&quot;PASSWORD&quot;</span>
</span><span class='line'>ARG <span class="nv">PROXY</span><span class="o">=</span><span class="s2">&quot;${proxy_user}:${proxy_pass}@${proxy_host}:${proxy_port}&quot;</span>
</span><span class='line'>
</span><span class='line'>ENV <span class="nv">http_proxy</span><span class="o">=</span><span class="s2">&quot;http://${PROXY}&quot;</span> <span class="se">\</span>
</span><span class='line'>    <span class="nv">https_proxy</span><span class="o">=</span><span class="s2">&quot;https://${PROXY}&quot;</span> <span class="se">\</span>
</span><span class='line'>    <span class="nv">ftp_proxy</span><span class="o">=</span><span class="s2">&quot;ftp://${PROXY}&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Docker イメージのビルド</h2>

<p>以下のコマンドで Docker イメージをビルドする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>docker build -t mattemost_bot:latest .
</span></code></pre></td></tr></table></div></figure>


<p>できたイメージは以下で確認できる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>docker images
</span></code></pre></td></tr></table></div></figure>


<h2>コンテナの実行</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>docker run -p 5000:5000 -it mattermost_bot
</span></code></pre></td></tr></table></div></figure>


<p>起動状態などの詳細は以下で確認できる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>docker ps -a
</span></code></pre></td></tr></table></div></figure>


<h2>動作確認</h2>

<p><code>curl</code> や POSTMAN などを使って HTTP POST リクエストを投げて確認する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl -X POST <span class="se">\</span>
</span><span class='line'>&gt;   http://localhost:5000/bot <span class="se">\</span>
</span><span class='line'>&gt;   -H <span class="s1">&#39;cache-control: no-cache&#39;</span> <span class="se">\</span>
</span><span class='line'>&gt;   -H <span class="s1">&#39;content-type: application/x-www-form-urlencoded&#39;</span> <span class="se">\</span>
</span><span class='line'>&gt;   -d <span class="s1">&#39;token=dummy&amp;text=botname%20echo%20hogehoge&#39;</span>
</span><span class='line'><span class="o">{</span><span class="s2">&quot;username&quot;</span>: <span class="s2">&quot;botname&quot;</span>, <span class="s2">&quot;icon_url&quot;</span>: <span class="s2">&quot;http://your-server/images/bot_icon.png&quot;</span>, <span class="s2">&quot;text&quot;</span>: <span class="s2">&quot;hogehoge&quot;</span>, <span class="s2">&quot;MATTERMOST_TOKEN&quot;</span>: <span class="s2">&quot;dummy&quot;</span><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google Apps Script でサーバレスな為替レート取得クローラをつくる]]></title>
    <link href="http://momota.github.io/blog/2018/06/25/apps-script/"/>
    <updated>2018-06-25T14:35:00+09:00</updated>
    <id>http://momota.github.io/blog/2018/06/25/apps-script</id>
    <content type="html"><![CDATA[<p><a href="https://script.google.com/home">Google Apps Script</a> (GAS) は、Google が提供する JavaScript プラットフォームで、Google apps (Calendar, Docs, Drive, Gmail, Sheets, and Slides) に対して処理する JavaScript を簡単に書ける。
Excel マクロのすごい版みたいな感覚。</p>

<p>このスクリプトからHTTP GETリクエストを出したり、受け付けたりできる。</p>

<p>今回は、この GAS を使って、無料の Web クローラをサーバレスでつくってみる。</p>

<!-- more -->


<h2>処理の流れ</h2>

<ol>
<li>GAS から為替レート API をたたく</li>
<li>取得した為替レートデータを Google Sheets へ出力する</li>
<li>上記を1分間隔で実行する。</li>
</ol>


<h2>1. GAS から為替レート API をたたく</h2>

<h3>為替レート API の確認</h3>

<p>API は <a href="https://www.gaitameonline.com/rateaj/getrate">https://www.gaitameonline.com/rateaj/getrate</a> を利用する。
ここへ HTTP GET すると以下のような JSON フォーマットが返ってくる。 (整形済み)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="err">quotes=[</span>
</span><span class='line'>    <span class="err">{</span>
</span><span class='line'>      <span class="err">high=1.9196,</span>
</span><span class='line'>      <span class="err">low=1.9162,</span>
</span><span class='line'>      <span class="err">ask=1.9212,</span>
</span><span class='line'>      <span class="err">bid=1.9195,</span>
</span><span class='line'>      <span class="err">currencyPairCode=GBPNZD,</span>
</span><span class='line'>      <span class="err">open=1.9167</span>
</span><span class='line'>    <span class="p">}</span><span class="err">,</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="err">high=82.83,</span>
</span><span class='line'>      <span class="err">low=82.35,</span>
</span><span class='line'>      <span class="err">ask=82.41,</span>
</span><span class='line'>      <span class="err">bid=82.36,</span>
</span><span class='line'>      <span class="err">currencyPairCode=CADJPY,</span>
</span><span class='line'>      <span class="err">open=82.76</span>
</span><span class='line'>    <span class="p">}</span><span class="err">,</span>
</span><span class='line'>    <span class="err">//</span> <span class="err">...</span> <span class="err">(snip)</span> <span class="err">...</span>
</span></code></pre></td></tr></table></div></figure>


<p>JSON の quotes は各通貨ペアの配列になっており、各要素に high, low, &hellip; などのフィールドがある構造になっている。</p>

<p><a href="https://www.gaitameonline.com/robots.txt">robots.txt</a> には特に言及されていないが、非常識なアクセスはしないように注意。</p>

<h3>GAS の作成</h3>

<p><a href="https://script.google.com/home">Apps Script</a> のメニューから <code>+ 新規スクリプト</code> をクリックすると、新規プロジェクトが立ち上がる。
プロジェクト名やスクリプト名は適当に変更する。 (デフォルト <code>Code.gs</code>)</p>

<p>GAS で API をたたく処理は以下のように書ける。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">callExchangeAPI</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">now</span>      <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">(),</span>
</span><span class='line'>        <span class="nx">url</span>      <span class="o">=</span> <span class="s2">&quot;https://www.gaitameonline.com/rateaj/getrate&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">response</span> <span class="o">=</span> <span class="nx">UrlFetchApp</span><span class="p">.</span><span class="nx">fetch</span><span class="p">(</span><span class="nx">url</span><span class="p">),</span>
</span><span class='line'>        <span class="nx">content</span>  <span class="o">=</span> <span class="nx">response</span><span class="p">.</span><span class="nx">getContentText</span><span class="p">(),</span>
</span><span class='line'>        <span class="nx">fx</span>       <span class="o">=</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">content</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">fx</span><span class="p">.</span><span class="nx">date</span> <span class="o">=</span> <span class="nx">now</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">Logger</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">fx</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">fx</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>UrlFetchApp.fetch(url)</code> で API の URL をたたきにいける。
<code>fx.date = now</code> で、取得した JSON に取得日時フィールド <code>date</code> を足している。</p>

<p>上記をコピペして実行する (▶ボタンを押す) と初回実行時には以下のような確認ダイアログがでるので <code>Review Permissions</code> を押して許可する。</p>

<p><img src="http://momota.github.io/images/20180625_gas/01_notice_initial_run.png" alt="01_notice_initial_run" /></p>

<p>その後、Choose an account画面で自分のアカウントを選ぶと、確認画面 <code>YOUR-PROJECT-NAME wants to access your Google Account</code> が出てくるので <code>ALLOW</code> ボタンを押す。そうすると実行できる。</p>

<p><code>Logger.log(fx)</code> 部分でログ出力しているので、メニュー <code>View</code> > <code>Logs</code> からログ出力できていることが確認できる。
ログは以下のように出力される。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">[</span><span class="mi">18</span><span class="o">-</span><span class="mi">06</span><span class="o">-</span><span class="mi">24</span> <span class="mi">23</span><span class="o">:</span><span class="mi">24</span><span class="o">:</span><span class="mi">06</span><span class="o">:</span><span class="mi">486</span> <span class="nx">PDT</span><span class="p">]</span> <span class="p">{</span><span class="nx">date</span><span class="o">=</span><span class="nx">Mon</span> <span class="nx">Jun</span> <span class="mi">25</span> <span class="mi">15</span><span class="o">:</span><span class="mi">24</span><span class="o">:</span><span class="mi">06</span> <span class="nx">GMT</span><span class="o">+</span><span class="mi">09</span><span class="o">:</span><span class="mi">00</span> <span class="mi">2018</span><span class="p">,</span> <span class="nx">quotes</span><span class="o">=</span><span class="p">[{</span><span class="nx">high</span><span class="o">=</span><span class="mf">1.9224</span><span class="p">,</span> <span class="nx">low</span><span class="o">=</span><span class="mf">1.9162</span><span class="p">,</span> <span class="nx">ask</span><span class="o">=</span><span class="mf">1.9223</span><span class="p">,</span> <span class="nx">bid</span><span class="o">=</span><span class="mf">1.9206</span><span class="p">,</span> <span class="nx">currencyPairCode</span><span class="o">=</span><span class="nx">GBPNZD</span><span class="p">,</span> <span class="nx">open</span><span class="o">=</span><span class="mf">1.9167</span><span class="p">},</span> <span class="p">{</span><span class="nx">high</span><span class="o">=</span><span class="mf">82.83</span><span class="p">,</span> <span class="nx">low</span><span class="o">=</span><span class="mf">82.22</span><span class="p">,</span> <span class="nx">ask</span><span class="o">=</span><span class="mf">82.45</span><span class="p">,</span> <span class="nx">bid</span><span class="o">=</span><span class="mf">82.40</span><span class="p">,</span> <span class="nx">currencyPairCode</span><span class="o">=</span><span class="nx">CADJPY</span><span class="p">,</span> <span class="nx">open</span><span class="o">=</span><span class="mf">82.76</span><span class="p">},</span> <span class="p">{</span><span class="nx">high</span><span class="o">=</span><span class="mf">1.7870</span><span class="p">,</span> <span class="nx">low</span><span class="o">=</span><span class="mf">1.7817</span><span class="p">,</span> <span class="nx">ask</span><span class="o">=</span><span class="mf">1.7855</span><span class="p">,</span> <span class="nx">bid</span><span class="o">=</span><span class="mf">1.7846</span><span class="p">,</span> <span class="nx">currencyPairCode</span><span class="o">=</span><span class="nx">GBPAUD</span><span class="p">,</span> <span class="nx">open</span><span class="o">=</span><span class="mf">1.7817</span><span class="p">},</span>
</span><span class='line'><span class="p">...</span> <span class="nx">snip</span> <span class="p">...</span>
</span></code></pre></td></tr></table></div></figure>


<h2>2. 取得した為替レートデータを Google Sheets へ出力する</h2>

<p>取得した為替レートを以下のように Google sheetsに出力する。</p>

<p><img src="http://momota.github.io/images/20180625_gas/03_sheet.png" alt="03_sheet" /></p>

<p>シートの 1 行目はヘッダ、列の定義は以下。通貨ペア種別すべての Ask や Bid などを取得したタイミングごとに1行で表現する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">date</span><span class="p">,</span> <span class="nx">currencyPairCode1</span><span class="p">,</span> <span class="nx">high1</span><span class="p">,</span> <span class="nx">low1</span><span class="p">,</span> <span class="nx">ask1</span><span class="p">,</span> <span class="nx">bid1</span><span class="p">,</span> <span class="nx">open1</span><span class="p">,</span> <span class="nx">currencyPairCode2</span><span class="p">,</span> <span class="nx">high2</span><span class="p">,</span> <span class="p">...</span>
</span></code></pre></td></tr></table></div></figure>


<p>まずは、出力先にあたる Google sheets を新規作成し、その URL をコピーする。</p>

<p>個別の URL をコードに埋め込みたくないので、<code>Script properties</code> に値をセットしてそれをコードの中から利用する。</p>

<p>GAS のメニュー <code>File</code> > <code>Project properties</code> から <code>Script properties</code> タブへ移動する。
<code>+ Add row</code> のリンクから行をエントリーする。
<code>Property</code> に SHEET_URL、<code>Value</code> に先程コピーした Google sheets の URLを登録する。
登録するURL は <code>https://docs.google.com/spreadsheets/d/xxxxxxxxxxxxxxxxxxxxx/edit</code> のような形式。</p>

<p>上述した <code>Script properties</code> から値を参照して、Sheet オブジェクトを取得する処理は以下。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'>  <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getSheet</span><span class="p">.</span><span class="nx">sheet</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">getSheet</span><span class="p">.</span><span class="nx">sheet</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">SHEET_URL</span> <span class="o">=</span> <span class="nx">PropertiesService</span><span class="p">.</span><span class="nx">getScriptProperties</span><span class="p">().</span><span class="nx">getProperty</span><span class="p">(</span><span class="s1">&#39;SHEET_URL&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">SHEET_URL</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">throw</span> <span class="s1">&#39;You should set &quot;SHEET_URL&quot; property from [File] &gt; [Project properties] &gt; [Script properties]&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">sheets</span> <span class="o">=</span> <span class="nx">SpreadsheetApp</span><span class="p">.</span><span class="nx">openByUrl</span><span class="p">(</span><span class="nx">SHEET_URL</span><span class="p">);</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">getSheet</span><span class="p">.</span><span class="nx">sheet</span> <span class="o">=</span> <span class="nx">sheets</span><span class="p">.</span><span class="nx">getActiveSheet</span><span class="p">();</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">getSheet</span><span class="p">.</span><span class="nx">sheet</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>API から取得してきた JSON データをシートに出力する。</p>

<p>シートに対して入力するには、<code>sheet.getRange(row, column).setValue(something)</code> のようにシートの行 (row) と列 (column) を指定して setValue を呼べば良い。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'>  <span class="kd">function</span><span class="p">(</span><span class="nx">ex_json</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">sheet</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">getSheet</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// データ追加行 (Sheetの最終行 + 1) を取得する</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">last_row</span> <span class="o">=</span> <span class="nx">sheet</span><span class="p">.</span><span class="nx">getLastRow</span><span class="p">()</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">col</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">sheet</span><span class="p">.</span><span class="nx">getRange</span><span class="p">(</span><span class="nx">last_row</span><span class="p">,</span> <span class="nx">col</span><span class="o">++</span><span class="p">).</span><span class="nx">setValue</span><span class="p">(</span><span class="nx">ex_json</span><span class="p">.</span><span class="nx">date</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">for</span> <span class="nx">each</span><span class="p">(</span><span class="kd">var</span> <span class="nx">quote</span> <span class="k">in</span> <span class="nx">ex_json</span><span class="p">.</span><span class="nx">quotes</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">sheet</span><span class="p">.</span><span class="nx">getRange</span><span class="p">(</span><span class="nx">last_row</span><span class="p">,</span> <span class="nx">col</span><span class="o">++</span><span class="p">).</span><span class="nx">setValue</span><span class="p">(</span><span class="nx">quote</span><span class="p">.</span><span class="nx">currencyPairCode</span><span class="p">);</span>
</span><span class='line'>      <span class="nx">sheet</span><span class="p">.</span><span class="nx">getRange</span><span class="p">(</span><span class="nx">last_row</span><span class="p">,</span> <span class="nx">col</span><span class="o">++</span><span class="p">).</span><span class="nx">setValue</span><span class="p">(</span><span class="nx">quote</span><span class="p">.</span><span class="nx">high</span><span class="p">);</span>
</span><span class='line'>      <span class="nx">sheet</span><span class="p">.</span><span class="nx">getRange</span><span class="p">(</span><span class="nx">last_row</span><span class="p">,</span> <span class="nx">col</span><span class="o">++</span><span class="p">).</span><span class="nx">setValue</span><span class="p">(</span><span class="nx">quote</span><span class="p">.</span><span class="nx">low</span><span class="p">);</span>
</span><span class='line'>      <span class="nx">sheet</span><span class="p">.</span><span class="nx">getRange</span><span class="p">(</span><span class="nx">last_row</span><span class="p">,</span> <span class="nx">col</span><span class="o">++</span><span class="p">).</span><span class="nx">setValue</span><span class="p">(</span><span class="nx">quote</span><span class="p">.</span><span class="nx">ask</span><span class="p">);</span>
</span><span class='line'>      <span class="nx">sheet</span><span class="p">.</span><span class="nx">getRange</span><span class="p">(</span><span class="nx">last_row</span><span class="p">,</span> <span class="nx">col</span><span class="o">++</span><span class="p">).</span><span class="nx">setValue</span><span class="p">(</span><span class="nx">quote</span><span class="p">.</span><span class="nx">bid</span><span class="p">);</span>
</span><span class='line'>      <span class="nx">sheet</span><span class="p">.</span><span class="nx">getRange</span><span class="p">(</span><span class="nx">last_row</span><span class="p">,</span> <span class="nx">col</span><span class="o">++</span><span class="p">).</span><span class="nx">setValue</span><span class="p">(</span><span class="nx">quote</span><span class="p">.</span><span class="nx">open</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記をまとめると以下。
以下をコピペして実行する (▶ボタンを押す) と Google sheets に為替データが挿入される。
初回実行時に権限の確認ダイアログがでると思うが許可してあげる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Main</span>
</span><span class='line'><span class="kd">function</span> <span class="nx">scrapeExchangeToSheet</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">ex_json</span> <span class="o">=</span> <span class="nx">exchange</span><span class="p">.</span><span class="nx">callExchangeAPI</span><span class="p">();</span>
</span><span class='line'>  <span class="nx">exchange</span><span class="p">.</span><span class="nx">writeSheets</span><span class="p">(</span><span class="nx">ex_json</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">exchange</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">getSheet</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getSheet</span><span class="p">.</span><span class="nx">sheet</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">getSheet</span><span class="p">.</span><span class="nx">sheet</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">SHEET_URL</span> <span class="o">=</span> <span class="nx">PropertiesService</span><span class="p">.</span><span class="nx">getScriptProperties</span><span class="p">().</span><span class="nx">getProperty</span><span class="p">(</span><span class="s1">&#39;SHEET_URL&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">SHEET_URL</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">throw</span> <span class="s1">&#39;You should set &quot;SHEET_URL&quot; property from [File] &gt; [Project properties] &gt; [Script properties]&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">sheets</span> <span class="o">=</span> <span class="nx">SpreadsheetApp</span><span class="p">.</span><span class="nx">openByUrl</span><span class="p">(</span><span class="nx">SHEET_URL</span><span class="p">);</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">getSheet</span><span class="p">.</span><span class="nx">sheet</span> <span class="o">=</span> <span class="nx">sheets</span><span class="p">.</span><span class="nx">getActiveSheet</span><span class="p">();</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">getSheet</span><span class="p">.</span><span class="nx">sheet</span><span class="p">;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// call exchange API</span>
</span><span class='line'>  <span class="nx">callExchangeAPI</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">now</span>      <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">(),</span>
</span><span class='line'>        <span class="nx">url</span>      <span class="o">=</span> <span class="s2">&quot;https://www.gaitameonline.com/rateaj/getrate&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">response</span> <span class="o">=</span> <span class="nx">UrlFetchApp</span><span class="p">.</span><span class="nx">fetch</span><span class="p">(</span><span class="nx">url</span><span class="p">),</span>
</span><span class='line'>        <span class="nx">content</span>  <span class="o">=</span> <span class="nx">response</span><span class="p">.</span><span class="nx">getContentText</span><span class="p">(),</span>
</span><span class='line'>        <span class="nx">fx</span>       <span class="o">=</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">content</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">fx</span><span class="p">.</span><span class="nx">date</span> <span class="o">=</span> <span class="nx">now</span><span class="p">;</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">fx</span><span class="p">;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Write exchange data (JSON) to the Google Sheet</span>
</span><span class='line'>  <span class="nx">writeSheets</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">ex_json</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">sheet</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">getSheet</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// get last row to add exchange data</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">last_row</span> <span class="o">=</span> <span class="nx">sheet</span><span class="p">.</span><span class="nx">getLastRow</span><span class="p">()</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">col</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">sheet</span><span class="p">.</span><span class="nx">getRange</span><span class="p">(</span><span class="nx">last_row</span><span class="p">,</span> <span class="nx">col</span><span class="o">++</span><span class="p">).</span><span class="nx">setValue</span><span class="p">(</span><span class="nx">ex_json</span><span class="p">.</span><span class="nx">date</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">for</span> <span class="nx">each</span><span class="p">(</span><span class="kd">var</span> <span class="nx">quote</span> <span class="k">in</span> <span class="nx">ex_json</span><span class="p">.</span><span class="nx">quotes</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">sheet</span><span class="p">.</span><span class="nx">getRange</span><span class="p">(</span><span class="nx">last_row</span><span class="p">,</span> <span class="nx">col</span><span class="o">++</span><span class="p">).</span><span class="nx">setValue</span><span class="p">(</span><span class="nx">quote</span><span class="p">.</span><span class="nx">currencyPairCode</span><span class="p">);</span>
</span><span class='line'>      <span class="nx">sheet</span><span class="p">.</span><span class="nx">getRange</span><span class="p">(</span><span class="nx">last_row</span><span class="p">,</span> <span class="nx">col</span><span class="o">++</span><span class="p">).</span><span class="nx">setValue</span><span class="p">(</span><span class="nx">quote</span><span class="p">.</span><span class="nx">high</span><span class="p">);</span>
</span><span class='line'>      <span class="nx">sheet</span><span class="p">.</span><span class="nx">getRange</span><span class="p">(</span><span class="nx">last_row</span><span class="p">,</span> <span class="nx">col</span><span class="o">++</span><span class="p">).</span><span class="nx">setValue</span><span class="p">(</span><span class="nx">quote</span><span class="p">.</span><span class="nx">low</span><span class="p">);</span>
</span><span class='line'>      <span class="nx">sheet</span><span class="p">.</span><span class="nx">getRange</span><span class="p">(</span><span class="nx">last_row</span><span class="p">,</span> <span class="nx">col</span><span class="o">++</span><span class="p">).</span><span class="nx">setValue</span><span class="p">(</span><span class="nx">quote</span><span class="p">.</span><span class="nx">ask</span><span class="p">);</span>
</span><span class='line'>      <span class="nx">sheet</span><span class="p">.</span><span class="nx">getRange</span><span class="p">(</span><span class="nx">last_row</span><span class="p">,</span> <span class="nx">col</span><span class="o">++</span><span class="p">).</span><span class="nx">setValue</span><span class="p">(</span><span class="nx">quote</span><span class="p">.</span><span class="nx">bid</span><span class="p">);</span>
</span><span class='line'>      <span class="nx">sheet</span><span class="p">.</span><span class="nx">getRange</span><span class="p">(</span><span class="nx">last_row</span><span class="p">,</span> <span class="nx">col</span><span class="o">++</span><span class="p">).</span><span class="nx">setValue</span><span class="p">(</span><span class="nx">quote</span><span class="p">.</span><span class="nx">open</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>3. 上記を1分間隔で実行する。</h2>

<p>上記の処理を定期的に実行する。</p>

<p>時計マークのアイコンをクリックする。もしくは、メニュー <code>Edit</code> > <code>Current project's trigger</code> を選択する。
そうするとダイアログが出てくるので、<code>No triggers set up. Click here to add one now.</code> をクリックする。</p>

<p><code>Run</code> にはメイン処理の <code>scrapeExchangeToSheet</code>, <code>Events</code> には好きな起動時間を設定できる。
ここでは1分間隔で実行するため、<code>Time-driven : Minutes timer: Every minute</code> を選択する。</p>

<p>1分間隔で Google sheets にデータが挿入されていることが確認できる。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python unittest で Flask (チャットボット) の単体テスト]]></title>
    <link href="http://momota.github.io/blog/2018/06/19/unittest/"/>
    <updated>2018-06-19T18:58:00+09:00</updated>
    <id>http://momota.github.io/blog/2018/06/19/unittest</id>
    <content type="html"><![CDATA[<p>最近 Slack クローンの mattermost のチャットボットを Python で作った。
そのコードをテストしたかったときに unittest を覚えたのでそのメモ。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>python -V
</span><span class='line'>Python 3.6.4 :: Anaconda, Inc.
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<p>ディレクトリ構成は以下。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>tree
</span><span class='line'>.
</span><span class='line'>|____log
</span><span class='line'>| |____mattermost_bot.log
</span><span class='line'>|____mattermostbot.py
</span><span class='line'>|____test_mattermostbot.py
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>mattermostbot.py</code>: ボット本体</li>
<li><code>test_mattermostbot.py</code>: テストコード</li>
<li><code>log/</code> : ログ保存用のディレクトリ</li>
</ul>


<h2>チャットボット</h2>

<p>mattermost の統合機能から「外向きのウェブフック」を設定する。</p>

<p><img src="http://momota.github.io/images/20180619_unittest/20180619_mattermost_webhook.png" alt="webhook" /></p>

<p>チャットボットは <code>bot_name COMMAND ARGUMENT</code> のように呼び出す。
ここではコマンドは以下の5種類をテストすることにする。</p>

<ul>
<li>echo: <code>ARGUMENT</code> をそのまま返す</li>
<li>hoge: &ldquo;hoge&rdquo; と返す</li>
<li>ping: &ldquo;pong :ping_pong:&rdquo; と返す</li>
<li>sushi: &ldquo;（っ&#8217;&ndash;&lsquo;)╮ =͟͟͞͞ :sushi: ﾌﾞｫﾝ&rdquo; を返す</li>
<li>tenki: 今日と明日の天気を返す (Livedoor の天気 API を利用)</li>
</ul>


<p>チャットボットのコード <code>mattermostbot.py</code> は以下。Slack のボットとしても機能するはず。</p>

<p>Flask を使って HTTP POST で送られてくる JSON データを mattermost から受け取って、処理している。
<code>bot()</code> メソッドがボットメイン処理。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">json</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">logging</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">requests</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Flask</span><span class="p">,</span> <span class="n">request</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">logging.handlers</span> <span class="kn">import</span> <span class="n">RotatingFileHandler</span>
</span><span class='line'>
</span><span class='line'><span class="n">app</span> <span class="o">=</span> <span class="n">Flask</span><span class="p">(</span><span class="n">__name__</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@app.route</span><span class="p">(</span><span class="s">&#39;/bot&#39;</span><span class="p">,</span> <span class="n">methods</span><span class="o">=</span><span class="p">[</span><span class="s">&#39;POST&#39;</span><span class="p">])</span>
</span><span class='line'><span class="k">def</span> <span class="nf">bot</span><span class="p">():</span>
</span><span class='line'>    <span class="c"># mattermost -&gt; bot へ送信される JSON データの取得</span>
</span><span class='line'>    <span class="n">post_dict</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">form</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">info</span><span class="p">(</span><span class="n">post_dict</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c"># JSONから token と text (ユーザが入力したメッセージ) を取得</span>
</span><span class='line'>    <span class="n">token</span> <span class="o">=</span> <span class="n">post_dict</span><span class="p">[</span><span class="s">&#39;token&#39;</span><span class="p">]</span>
</span><span class='line'>    <span class="n">income_text</span> <span class="o">=</span> <span class="n">post_dict</span><span class="p">[</span><span class="s">&#39;text&#39;</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'>    <span class="c"># income_text は `bot_name COMMAND ARGUMENT` のような形式なので</span>
</span><span class='line'>    <span class="c"># 半角スペースで分割し、それぞれの要素を変数に格納する</span>
</span><span class='line'>    <span class="n">text_array</span> <span class="o">=</span> <span class="n">income_text</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39; &#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">bot_name</span> <span class="o">=</span> <span class="n">text_array</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>    <span class="n">command</span> <span class="o">=</span> <span class="n">text_array</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'>    <span class="n">arg</span> <span class="o">=</span> <span class="s">&quot; &quot;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">text_array</span><span class="p">[</span><span class="mi">2</span><span class="p">:])</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">payload_text</span> <span class="o">=</span> <span class="s">&quot;&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c"># command によって処理を分岐する</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">command</span> <span class="o">==</span> <span class="s">&quot;echo&quot;</span><span class="p">:</span>
</span><span class='line'>        <span class="n">payload_text</span> <span class="o">=</span> <span class="n">echo</span><span class="p">(</span><span class="n">arg</span><span class="p">)</span>
</span><span class='line'>    <span class="k">elif</span> <span class="n">command</span> <span class="o">==</span> <span class="s">&quot;hoge&quot;</span><span class="p">:</span>
</span><span class='line'>        <span class="n">payload_text</span> <span class="o">=</span> <span class="n">hoge</span><span class="p">()</span>
</span><span class='line'>    <span class="k">elif</span> <span class="n">command</span> <span class="o">==</span> <span class="s">&quot;ping&quot;</span><span class="p">:</span>
</span><span class='line'>        <span class="n">payload_text</span> <span class="o">=</span> <span class="n">pong</span><span class="p">()</span>
</span><span class='line'>    <span class="k">elif</span> <span class="n">command</span> <span class="o">==</span> <span class="s">&quot;sushi&quot;</span><span class="p">:</span>
</span><span class='line'>        <span class="n">payload_text</span> <span class="o">=</span> <span class="n">sushi</span><span class="p">()</span>
</span><span class='line'>    <span class="k">elif</span> <span class="n">command</span> <span class="o">==</span> <span class="s">&quot;tenki&quot;</span><span class="p">:</span>
</span><span class='line'>        <span class="n">payload_text</span> <span class="o">=</span> <span class="n">tenki</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">info</span><span class="p">(</span><span class="n">payload_text</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c"># レスポンス用の JSON を組み立てる</span>
</span><span class='line'>    <span class="n">payload</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&#39;username&#39;</span><span class="p">:</span> <span class="n">bot_name</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&#39;icon_url&#39;</span><span class="p">:</span> <span class="s">&#39;http://your-server/images/bot_icon.png&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&#39;text&#39;</span><span class="p">:</span> <span class="n">payload_text</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&#39;MATTERMOST_TOKEN&#39;</span><span class="p">:</span> <span class="n">token</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">json_payload</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">payload</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">json_payload</span>
</span><span class='line'>
</span><span class='line'><span class="c"># ログ出力用メソッド</span>
</span><span class='line'><span class="k">def</span> <span class="nf">log</span><span class="p">(</span><span class="n">app</span><span class="p">):</span>
</span><span class='line'>    <span class="n">handler</span> <span class="o">=</span> <span class="n">RotatingFileHandler</span><span class="p">(</span><span class="s">&#39;log/mattermost_bot.log&#39;</span><span class="p">,</span> <span class="n">maxBytes</span><span class="o">=</span><span class="mi">10000</span><span class="p">,</span> <span class="n">backupCount</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>    <span class="n">handler</span><span class="o">.</span><span class="n">setLevel</span><span class="p">(</span><span class="n">logging</span><span class="o">.</span><span class="n">INFO</span><span class="p">)</span>
</span><span class='line'>    <span class="n">formatter</span> <span class="o">=</span> <span class="n">logging</span><span class="o">.</span><span class="n">Formatter</span><span class="p">(</span><span class="s">&#39;</span><span class="si">%(asctime)s</span><span class="se">\t</span><span class="si">%(lineno)d</span><span class="se">\t</span><span class="si">%(levelname)s</span><span class="se">\t</span><span class="si">%(name)s</span><span class="se">\t</span><span class="si">%(message)s</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">handler</span><span class="o">.</span><span class="n">setFormatter</span><span class="p">(</span><span class="n">formatter</span><span class="p">)</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">addHandler</span><span class="p">(</span><span class="n">handler</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># -------------------------------------------------------</span>
</span><span class='line'><span class="c"># echo command</span>
</span><span class='line'><span class="c"># -------------------------------------------------------</span>
</span><span class='line'><span class="k">def</span> <span class="nf">echo</span><span class="p">(</span><span class="n">text</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">text</span>
</span><span class='line'>
</span><span class='line'><span class="c"># -------------------------------------------------------</span>
</span><span class='line'><span class="c"># hoge command</span>
</span><span class='line'><span class="c"># -------------------------------------------------------</span>
</span><span class='line'><span class="k">def</span> <span class="nf">hoge</span><span class="p">():</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&quot;hoge&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># -------------------------------------------------------</span>
</span><span class='line'><span class="c"># ping command</span>
</span><span class='line'><span class="c"># -------------------------------------------------------</span>
</span><span class='line'><span class="k">def</span> <span class="nf">pong</span><span class="p">():</span>
</span><span class='line'>    <span class="n">pong_msg</span> <span class="o">=</span> <span class="s">&quot;pong :ping_pong:&quot;</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">pong_msg</span>
</span><span class='line'>
</span><span class='line'><span class="c"># -------------------------------------------------------</span>
</span><span class='line'><span class="c"># sushi command</span>
</span><span class='line'><span class="c"># -------------------------------------------------------</span>
</span><span class='line'><span class="k">def</span> <span class="nf">sushi</span><span class="p">():</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&quot;（っ&#39;-&#39;)╮ =͟͟͞͞ :sushi: ﾌﾞｫﾝ&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># -------------------------------------------------------</span>
</span><span class='line'><span class="c"># tenki command</span>
</span><span class='line'><span class="c"># -------------------------------------------------------</span>
</span><span class='line'><span class="k">def</span> <span class="nf">tenki</span><span class="p">():</span>
</span><span class='line'>    <span class="n">api_url</span> <span class="o">=</span> <span class="s">&quot;http://weather.livedoor.com/forecast/webservice/json/v1?city=&quot;</span>
</span><span class='line'>    <span class="c"># 横浜の city id</span>
</span><span class='line'>    <span class="c"># その他のIDはここから探して: http://weather.livedoor.com/forecast/rss/primary_area.xml</span>
</span><span class='line'>    <span class="n">city_id</span> <span class="o">=</span> <span class="s">&quot;140010&quot;</span>
</span><span class='line'>    <span class="n">api_res</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">api_url</span> <span class="o">+</span> <span class="n">city_id</span><span class="p">)</span>
</span><span class='line'>    <span class="n">json_res</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="n">loads</span><span class="p">(</span><span class="n">api_res</span><span class="o">.</span><span class="n">text</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">today</span> <span class="o">=</span> <span class="n">json_res</span><span class="p">[</span><span class="s">&#39;forecasts&#39;</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>    <span class="n">tomorrow</span> <span class="o">=</span> <span class="n">json_res</span><span class="p">[</span><span class="s">&#39;forecasts&#39;</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">tenki_info</span> <span class="o">=</span> <span class="s">&quot;&quot;</span>
</span><span class='line'>    <span class="n">tenki_info</span> <span class="o">+=</span> <span class="n">format_tenki_json</span><span class="p">(</span><span class="n">today</span><span class="p">)</span>
</span><span class='line'>    <span class="n">tenki_info</span> <span class="o">+=</span> <span class="n">format_tenki_json</span><span class="p">(</span><span class="n">tomorrow</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">tenki_info</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">format_tenki_json</span><span class="p">(</span><span class="n">j</span><span class="p">):</span>
</span><span class='line'>    <span class="n">tenki_info</span> <span class="o">=</span> <span class="s">&quot;# &quot;</span>
</span><span class='line'>    <span class="n">tenki_info</span> <span class="o">+=</span> <span class="n">j</span><span class="p">[</span><span class="s">&#39;dateLabel&#39;</span><span class="p">]</span> <span class="o">+</span> <span class="s">&quot; (&quot;</span> <span class="o">+</span> <span class="n">j</span><span class="p">[</span><span class="s">&#39;date&#39;</span><span class="p">]</span> <span class="o">+</span> <span class="s">&quot;) の横浜の天気は&quot;</span> <span class="o">+</span> <span class="n">j</span><span class="p">[</span><span class="s">&#39;telop&#39;</span><span class="p">]</span>
</span><span class='line'>    <span class="n">tenki_info</span> <span class="o">+=</span> <span class="s">&quot; ![](&quot;</span> <span class="o">+</span> <span class="n">j</span><span class="p">[</span><span class="s">&#39;image&#39;</span><span class="p">][</span><span class="s">&#39;url&#39;</span><span class="p">]</span> <span class="o">+</span> <span class="s">&quot;)</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">t_min</span> <span class="o">=</span> <span class="n">j</span><span class="p">[</span><span class="s">&#39;temperature&#39;</span><span class="p">][</span><span class="s">&#39;min&#39;</span><span class="p">]</span>
</span><span class='line'>    <span class="n">t_max</span> <span class="o">=</span> <span class="n">j</span><span class="p">[</span><span class="s">&#39;temperature&#39;</span><span class="p">][</span><span class="s">&#39;max&#39;</span><span class="p">]</span>
</span><span class='line'>    <span class="n">t_min_str</span> <span class="o">=</span> <span class="s">&quot; -- &quot;</span> <span class="k">if</span> <span class="n">t_min</span> <span class="ow">is</span> <span class="bp">None</span> <span class="k">else</span> <span class="nb">str</span><span class="p">(</span><span class="n">t_min</span><span class="p">[</span><span class="s">&#39;celsius&#39;</span><span class="p">])</span>
</span><span class='line'>    <span class="n">t_max_str</span> <span class="o">=</span> <span class="s">&quot; -- &quot;</span> <span class="k">if</span> <span class="n">t_max</span> <span class="ow">is</span> <span class="bp">None</span> <span class="k">else</span> <span class="nb">str</span><span class="p">(</span><span class="n">t_max</span><span class="p">[</span><span class="s">&#39;celsius&#39;</span><span class="p">])</span>
</span><span class='line'>    <span class="n">tenki_info</span> <span class="o">+=</span> <span class="s">&quot;- 最低気温は &quot;</span> <span class="o">+</span> <span class="n">t_min_str</span> <span class="o">+</span><span class="s">&quot;℃</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class='line'>    <span class="n">tenki_info</span> <span class="o">+=</span> <span class="s">&quot;- 最高気温は &quot;</span> <span class="o">+</span> <span class="n">t_max_str</span>  <span class="o">+</span><span class="s">&quot;℃</span><span class="se">\n\n</span><span class="s">&quot;</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">tenki_info</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">log</span><span class="p">(</span><span class="n">app</span><span class="p">)</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">debug</span> <span class="o">=</span> <span class="bp">True</span>
</span><span class='line'>    <span class="n">app</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="n">host</span><span class="o">=</span><span class="s">&#39;0.0.0.0&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>テスト</h2>

<p>以下を参考にした。</p>

<p><a href="http://momijiame.tumblr.com/post/39324429279/python-%E3%81%AE-flask-%E3%81%A7%E4%BD%9C%E3%81%A3%E3%81%9F%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%92%E3%83%86%E3%82%B9%E3%83%88%E3%81%99%E3%82%8B">Python の Flask で作ったアプリケーションをテストする | CUBE SUGAR STORAGE</a></p>

<p>各チャットボットコマンドに対応するテストケースを以下のように書ける。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">datetime</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">json</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">mattermostbot</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">unittest</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">TestMattermostBot</span><span class="p">(</span><span class="n">unittest</span><span class="o">.</span><span class="n">TestCase</span><span class="p">):</span>
</span><span class='line'>    <span class="c"># mattermost -&gt; bot へのリクエスト JSON のダミーデータ雛形</span>
</span><span class='line'>    <span class="n">data</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">(</span>
</span><span class='line'>            <span class="n">channel_id</span> <span class="o">=</span> <span class="s">&#39;xxxxxxxxxxxxxxxxxxxxxxxxxx&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="n">channel_name</span> <span class="o">=</span> <span class="s">&#39;some_channel&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="n">file_ids</span> <span class="o">=</span> <span class="s">&#39;&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="n">post_id</span> <span class="o">=</span> <span class="s">&#39;xxxxxxxxxxxxxxxxxxxxxxxxxx&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="n">team_domain</span> <span class="o">=</span> <span class="s">&#39;some_team&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="n">team_id</span> <span class="o">=</span> <span class="s">&#39;xxxxxxxxxxxxxxxxxxxxxxxxxx&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="n">text</span> <span class="o">=</span> <span class="s">&#39;your_bot_name &#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="n">timestamp</span> <span class="o">=</span> <span class="s">&#39;9999999999&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="n">token</span> <span class="o">=</span> <span class="s">&#39;xxxxxxxxxxxxxxxxxxxxxxxxxx&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="n">trigger_word</span> <span class="o">=</span> <span class="s">&#39;your_bot_name&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="n">user_id</span> <span class="o">=</span> <span class="s">&#39;xxxxxxxxxxxxxxxxxxxxxxxxxx&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="n">user_name</span> <span class="o">=</span> <span class="s">&#39;your_name&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">setUp</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">app</span> <span class="o">=</span> <span class="n">mattermostbot</span><span class="o">.</span><span class="n">app</span><span class="o">.</span><span class="n">test_client</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">test_post_echo</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>        <span class="n">response</span> <span class="o">=</span> <span class="n">TestMattermostBot</span><span class="o">.</span><span class="n">req</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="s">&#39;echo fuga&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="n">response_data</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="n">loads</span><span class="p">(</span><span class="n">response</span><span class="o">.</span><span class="n">data</span><span class="p">)</span>
</span><span class='line'>        <span class="k">assert</span> <span class="n">response</span><span class="o">.</span><span class="n">status_code</span> <span class="o">==</span> <span class="mi">200</span>
</span><span class='line'>        <span class="k">assert</span> <span class="n">response_data</span><span class="p">[</span><span class="s">&#39;text&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="s">&#39;fuga&#39;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">test_post_hoge</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>        <span class="n">response</span> <span class="o">=</span> <span class="n">TestMattermostBot</span><span class="o">.</span><span class="n">req</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="s">&#39;hoge&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="n">response_data</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="n">loads</span><span class="p">(</span><span class="n">response</span><span class="o">.</span><span class="n">data</span><span class="p">)</span>
</span><span class='line'>        <span class="k">assert</span> <span class="n">response</span><span class="o">.</span><span class="n">status_code</span> <span class="o">==</span> <span class="mi">200</span>
</span><span class='line'>        <span class="k">assert</span> <span class="n">response_data</span><span class="p">[</span><span class="s">&#39;text&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="s">&#39;hoge&#39;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">test_post_ping</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>        <span class="n">response</span> <span class="o">=</span> <span class="n">TestMattermostBot</span><span class="o">.</span><span class="n">req</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="s">&#39;ping&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="n">response_data</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="n">loads</span><span class="p">(</span><span class="n">response</span><span class="o">.</span><span class="n">data</span><span class="p">)</span>
</span><span class='line'>        <span class="k">assert</span> <span class="n">response</span><span class="o">.</span><span class="n">status_code</span> <span class="o">==</span> <span class="mi">200</span>
</span><span class='line'>        <span class="k">assert</span> <span class="n">response_data</span><span class="p">[</span><span class="s">&#39;text&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="s">&#39;pong :ping_pong:&#39;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">test_post_sushi</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>        <span class="n">response</span> <span class="o">=</span> <span class="n">TestMattermostBot</span><span class="o">.</span><span class="n">req</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="s">&#39;sushi&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="n">response_data</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="n">loads</span><span class="p">(</span><span class="n">response</span><span class="o">.</span><span class="n">data</span><span class="p">)</span>
</span><span class='line'>        <span class="k">assert</span> <span class="n">response</span><span class="o">.</span><span class="n">status_code</span> <span class="o">==</span> <span class="mi">200</span>
</span><span class='line'>        <span class="k">assert</span> <span class="n">response_data</span><span class="p">[</span><span class="s">&#39;text&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="s">&quot;（っ&#39;-&#39;)╮ =͟͟͞͞ :sushi: ﾌﾞｫﾝ&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">test_post_tenki</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>        <span class="n">response</span> <span class="o">=</span> <span class="n">TestMattermostBot</span><span class="o">.</span><span class="n">req</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="s">&#39;tenki&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="n">response_data</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="n">loads</span><span class="p">(</span><span class="n">response</span><span class="o">.</span><span class="n">data</span><span class="p">)</span>
</span><span class='line'>        <span class="k">assert</span> <span class="n">response</span><span class="o">.</span><span class="n">status_code</span> <span class="o">==</span> <span class="mi">200</span>
</span><span class='line'>        <span class="k">assert</span> <span class="n">datetime</span><span class="o">.</span><span class="n">date</span><span class="o">.</span><span class="n">today</span><span class="p">()</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s">&#39;%Y-%m-</span><span class="si">%d</span><span class="s">&#39;</span><span class="p">)</span> <span class="ow">in</span> <span class="n">response_data</span><span class="p">[</span><span class="s">&#39;text&#39;</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">req</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">command</span><span class="p">):</span>
</span><span class='line'>        <span class="n">data</span> <span class="o">=</span> <span class="n">TestMattermostBot</span><span class="o">.</span><span class="n">data</span><span class="o">.</span><span class="n">copy</span><span class="p">()</span>
</span><span class='line'>        <span class="n">data</span><span class="p">[</span><span class="s">&#39;text&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="s">&#39;text&#39;</span><span class="p">]</span> <span class="o">+</span> <span class="n">command</span>
</span><span class='line'>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">app</span><span class="o">.</span><span class="n">post</span><span class="p">(</span><span class="s">&#39;/bot&#39;</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">data</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">unittest</span><span class="o">.</span><span class="n">main</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>テストを実行するとこんな感じになる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>python test_mattermostbot.py
</span><span class='line'>.....
</span><span class='line'>----------------------------------------------------------------------
</span><span class='line'>Ran 5 tests in 0.115s
</span><span class='line'>
</span><span class='line'>OK
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[docker で Elasticsearch]]></title>
    <link href="http://momota.github.io/blog/2018/06/07/elasticsearch/"/>
    <updated>2018-06-07T13:56:00+09:00</updated>
    <id>http://momota.github.io/blog/2018/06/07/elasticsearch</id>
    <content type="html"><![CDATA[<p>Docker for Windows で Windows10 上に Elasticsearch を動かしたときのメモ。</p>

<ul>
<li>Docker: 18.03.1-ce-win65 (17513)</li>
<li>Elasticsearch: 6.2.4</li>
</ul>


<!-- more -->


<p>日本語を扱いたいのでプラグイン <code>kuromoji</code> をインストールする Dockerfile を用意する。</p>

<p>Dockerfile の内容は以下。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>FROM docker.elastic.co/elasticsearch/elasticsearch:6.2.4
</span><span class='line'>
</span><span class='line'># Plugin x-pack already exists in this image
</span><span class='line'># RUN elasticsearch-plugin install --batch x-pack
</span><span class='line'>RUN elasticsearch-plugin install analysis-kuromoji</span></code></pre></td></tr></table></div></figure>


<p>この Dockerfile に基づいてイメージをビルドする。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; docker build -t es-kuromoji:1.0 ./
</span><span class='line'>&gt; docker images
</span><span class='line'>REPOSITORY                                               TAG                 IMAGE ID            CREATED              SIZE
</span><span class='line'>es-kuromoji                                              1.0                 dxxxxxxxxxxx        About a minute ago   519MB
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html#docker-cli-run">Install Elasticsearch with Docker | Elasticsearch Reference ［6.2］ | Elastic</a> に書いてあるとおりに起動する。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; docker run -p 9200:9200 -p 9300:9300 -e "discovery.type=single-node" es-kuromoji:1.0</span></code></pre></td></tr></table></div></figure>


<p>起動を確認する。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt; docker ps
</span><span class='line'>CONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS              PORTS                                            NAMES
</span><span class='line'>xxxxxxxxxxxx        es-kuromoji:1.0     "/usr/local/bin/dock…"  About a minute ago   Up Ab out a minute  0.0.0.0:9200-&gt;9200/tcp, 0.0.0.0:9300-&gt;9300/tcp   sharp_hypatia</span></code></pre></td></tr></table></div></figure>


<p>Elasticsearch の正常稼働を REST APIから確認する。 Ubuntu (WSL) から <code>curl</code> を使う。</p>

<p><code>health</code> が <code>green</code> なので問題ない。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># In my environment, need `noproxy` option: curl http://localhost:9200/_cat/indices?v --noproxy localhost</span>
</span><span class='line'><span class="nv">$ </span>curl http://localhost:9200/_cat/indices?v
</span><span class='line'>health status index                       uuid                   pri rep docs.count docs.deleted store.size pri.store.size
</span><span class='line'>green  open   .monitoring-es-6-2018.06.07 xxxxxxxxxxxxxxxxxxxxxx   1   0       3094            2      1.1mb          1.1mb
</span></code></pre></td></tr></table></div></figure>


<p>Windows側で確認する場合は、<code>curl</code> の代わりに PowerShell <code>Invoke-WebRequest</code> コマンドで確認できる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># In windows, we can confirm Elasticsearch is running by using powershell</span>
</span><span class='line'>PS C:<span class="se">\&gt;</span> Invoke-WebRequest -Uri http://localhost:9200/_cat/indices?v
</span><span class='line'>
</span><span class='line'>StatusCode        : 200
</span><span class='line'>StatusDescription : OK
</span><span class='line'>Content           : health status index                       uuid                   pri rep docs.count docs.deleted store.size pri.store.size
</span><span class='line'>                    green  open   .monitoring-es-6-2018.06.07 xxxxxxxxxxxxxxxxxxxxxx   1   0     ...
</span><span class='line'>RawContent        : HTTP/1.1 200 OK
</span><span class='line'>                    Content-Length: 246
</span><span class='line'>                    Content-Type: text/plain; <span class="nv">charset</span><span class="o">=</span>UTF-8
</span><span class='line'>
</span><span class='line'>                    health status index                       uuid                   pri rep docs.count docs.deleted store.size pri.store.s...
</span><span class='line'>Forms             : <span class="o">{}</span>
</span><span class='line'>Headers           : <span class="o">{[</span>Content-Length, 246<span class="o">]</span>, <span class="o">[</span>Content-Type, text/plain; <span class="nv">charset</span><span class="o">=</span>UTF-8<span class="o">]}</span>
</span><span class='line'>Images            : <span class="o">{}</span>
</span><span class='line'>InputFields       : <span class="o">{}</span>
</span><span class='line'>Links             : <span class="o">{}</span>
</span><span class='line'>ParsedHtml        : mshtml.HTMLDocumentClass
</span><span class='line'>RawContentLength  : 246
</span></code></pre></td></tr></table></div></figure>


<p>index を作ってみる。
index は RDB のテーブルやビューにあたる。</p>

<p>PUT メソッドを使って <code>customer</code> という index を作る。
<code>pretty</code> は JSON を pretty-print (pretty-print) してくれる。 <code>jq</code> みたいに整形してくれる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl -X PUT http://localhost:9200/customer?pretty
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;acknowledged&quot;</span> : <span class="nb">true</span>,
</span><span class='line'>  <span class="s2">&quot;shards_acknowledged&quot;</span> : <span class="nb">true</span>,
</span><span class='line'>  <span class="s2">&quot;index&quot;</span> : <span class="s2">&quot;customer&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>index が増えていることが確認できる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl http://localhost:9200/_cat/indices?v
</span><span class='line'>health status index                       uuid                   pri rep docs.count docs.deleted store.size pri.store.size
</span><span class='line'>green  open   .monitoring-es-6-2018.06.07 xxxxxxxxxxxxxxxxxxxxxx   1   0       4775           44      1.9mb          1.9mb
</span><span class='line'>yellow open   customer                    xxxxxxxxxxxxxxxxxxxxxx   5   1          0            0      1.1kb          1.1kb
</span></code></pre></td></tr></table></div></figure>


<p>document を追加する。
RDB のレコードみたいなもの。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl -H <span class="s2">&quot;Content-Type: application/json&quot;</span> -X PUT http://localhost:9200/customer/_doc/1?pretty -d <span class="s1">&#39;</span>
</span><span class='line'><span class="s1">&gt; {</span>
</span><span class='line'><span class="s1">&gt;   &quot;name&quot;: &quot;John Doe&quot;</span>
</span><span class='line'><span class="s1">&gt; }</span>
</span><span class='line'><span class="s1">&gt; &#39;</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;_index&quot;</span> : <span class="s2">&quot;customer&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;_type&quot;</span> : <span class="s2">&quot;_doc&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;_id&quot;</span> : <span class="s2">&quot;1&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;_version&quot;</span> : 1,
</span><span class='line'>  <span class="s2">&quot;result&quot;</span> : <span class="s2">&quot;created&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;_shards&quot;</span> : <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;total&quot;</span> : 2,
</span><span class='line'>    <span class="s2">&quot;successful&quot;</span> : 1,
</span><span class='line'>    <span class="s2">&quot;failed&quot;</span> : 0
</span><span class='line'>  <span class="o">}</span>,
</span><span class='line'>  <span class="s2">&quot;_seq_no&quot;</span> : 0,
</span><span class='line'>  <span class="s2">&quot;_primary_term&quot;</span> : 1
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>PowerShell バージョンは以下。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$person</span> <span class="o">=</span> @<span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;John Doe&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="nv">$json</span> <span class="o">=</span> <span class="nv">$person</span> | ConvertTo-Json
</span><span class='line'><span class="nv">$response</span> <span class="o">=</span> Invoke-RestMethod <span class="s1">&#39;http://localhost:9200/customer/_doc/1&#39;</span> -Method Put -Body <span class="nv">$json</span> -ContentType <span class="s1">&#39;application/json&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>document の確認。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl -sS -w <span class="s1">&#39;\n&#39;</span> http://localhost:9200/customer/_doc/1?pretty
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;_index&quot;</span> : <span class="s2">&quot;customer&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;_type&quot;</span> : <span class="s2">&quot;_doc&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;_id&quot;</span> : <span class="s2">&quot;1&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;_version&quot;</span> : 1,
</span><span class='line'>  <span class="s2">&quot;found&quot;</span> : <span class="nb">true</span>,
</span><span class='line'>  <span class="s2">&quot;_source&quot;</span> : <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;John Doe&quot;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Python クライアントからアクセス</h2>

<p>pip で Python Elasticsearch Client をインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>pip install elasticsearch
</span></code></pre></td></tr></table></div></figure>


<h3>CSV ファイルを突っ込む</h3>

<p><code>質問, 回答</code> みたいな FAQ をためている CSV ファイルを Elasticsearch へインポートする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">pandas</span> <span class="kn">as</span> <span class="nn">pd</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">elasticsearch</span> <span class="kn">import</span> <span class="n">Elasticsearch</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">es</span> <span class="o">=</span> <span class="n">Elasticsearch</span><span class="p">(</span><span class="n">host</span><span class="o">=</span><span class="s">&#39;127.0.0.1&#39;</span><span class="p">,</span> <span class="n">port</span><span class="o">=</span><span class="mi">9200</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">&#39;data/faq.csv&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">row</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">iterrows</span><span class="p">():</span>
</span><span class='line'>        <span class="n">d</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&#39;question&#39;</span><span class="p">:</span> <span class="n">row</span><span class="p">[</span><span class="s">&#39;question&#39;</span><span class="p">],</span>
</span><span class='line'>            <span class="s">&#39;answer&#39;</span><span class="p">:</span> <span class="n">row</span><span class="p">[</span><span class="s">&#39;answer&#39;</span><span class="p">]</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="n">es</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="n">index</span><span class="o">=</span><span class="s">&#39;faq&#39;</span><span class="p">,</span> <span class="n">doc_type</span><span class="o">=</span><span class="s">&#39;XXXXX&#39;</span><span class="p">,</span> <span class="n">body</span><span class="o">=</span><span class="n">d</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>あいまい検索する</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">def</span> <span class="nf">faq</span><span class="p">(</span><span class="n">query</span><span class="p">):</span>
</span><span class='line'>    <span class="n">top3</span> <span class="o">=</span> <span class="mi">3</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">query_json</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>        <span class="s">&#39;query&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s">&#39;more_like_this&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="s">&#39;fields&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s">&#39;question&#39;</span><span class="p">,</span> <span class="s">&#39;answer&#39;</span><span class="p">],</span>
</span><span class='line'>                <span class="s">&#39;like&#39;</span><span class="p">:</span> <span class="n">query</span><span class="p">,</span>
</span><span class='line'>                <span class="s">&#39;min_term_freq&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>                <span class="s">&#39;max_query_terms&#39;</span><span class="p">:</span> <span class="mi">12</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="n">es</span> <span class="o">=</span> <span class="n">Elasticsearch</span><span class="p">(</span><span class="n">host</span><span class="o">=</span><span class="s">&#39;127.0.0.1&#39;</span><span class="p">,</span> <span class="n">port</span><span class="o">=</span><span class="mi">9200</span><span class="p">)</span>
</span><span class='line'>    <span class="n">res</span> <span class="o">=</span> <span class="n">es</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="n">index</span><span class="o">=</span><span class="s">&#39;faq&#39;</span><span class="p">,</span> <span class="n">doc_type</span><span class="o">=</span><span class="s">&#39;XXXXX&#39;</span><span class="p">,</span> <span class="n">body</span><span class="o">=</span><span class="n">query_json</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="n">top3</span><span class="p">)</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">res</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">4</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows ログイン時に、Cドライブ以外のBitLockerを解除する]]></title>
    <link href="http://momota.github.io/blog/2018/05/25/bitlocker/"/>
    <updated>2018-05-25T17:23:00+09:00</updated>
    <id>http://momota.github.io/blog/2018/05/25/bitlocker</id>
    <content type="html"><![CDATA[<p>BitLocker は Windows 10 Professional/Enterprise に標準搭載されているディスク暗号化機能。
最近、会社 PC を Windows 10 にアップデートしたので使うようになった。</p>

<p>BitLocker は OS ログイン前に C ドライブの暗号化を解除しろ、とパスワード入力を求めてくる。
ただし、その後、OS ログインしても、C ドライブ以外 (たとえば、D ドライブ) は暗号化されたままとなっており、いちいち当該ドライブへアクセスしてパスワード入力して暗号化を解除する必要があった。
また、暗号化解除前に D ドライブ上のファイルへアクセスするとエラーが起きてしまい、大変うざったい。</p>

<p>そこで、OS ログイン時に自動的に C ドライブ以外のディスク暗号化解除するために PowerShell とバッチを書いてスタートアッププログラムに登録した話を書く。</p>

<p>セキュリティクラスタには怒られるのかもしれないが、OS に管理者権限ユーザでログインできている時点でもういろいろ見れて当たり前やろ、という思想。</p>

<p>全体の流れは以下。</p>

<ol>
<li>BitLocker 解除用の PowerShell を書く</li>
<li>バッチファイル unlock-bitLocker.cmd を書く</li>
<li>バッチファイル unlock-bitLocker.cmd をタスクスケジューラに登録する</li>
<li>タスクを呼び出すバッチファイル trigger_unlock-bitLocker.cmd を書く</li>
<li>バッチファイル unlock-bitLocker.cmd をスタートアッププログラムに登録してあげる</li>
</ol>


<!-- more -->


<h2>1. BitLocker 解除用の PowerShell を書く</h2>

<p>ここでは D ドライブの BitLocker 解除するスクリプト <code>C:\PATH-YOU-WANT\unlock-bitLocker.ps1</code> を書く。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ps1'><span class='line'><span class="nv">$password</span> <span class="p">=</span> <span class="nb">ConvertTo-SecureString</span> <span class="s2">&quot;YOUR_PASSWORD&quot;</span> <span class="n">-AsPlainText</span> <span class="n">-Force</span>
</span><span class='line'><span class="nv">$d_drive</span> <span class="p">=</span> <span class="s2">&quot;D:&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">Unlock-BitLocker</span> <span class="n">-MountPoint</span> <span class="nv">$d_drive</span> <span class="n">-Password</span> <span class="nv">$password</span>
</span></code></pre></td></tr></table></div></figure>


<p>複数のドライブがある場合は以下。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ps1'><span class='line'><span class="nv">$password</span> <span class="p">=</span> <span class="nb">ConvertTo-SecureString</span> <span class="s2">&quot;YOUR_PASSWORD&quot;</span> <span class="n">-AsPlainText</span> <span class="n">-Force</span>
</span><span class='line'><span class="nv">$drives</span> <span class="p">=</span> <span class="err">@</span><span class="p">(</span><span class="s2">&quot;D:&quot;</span><span class="p">,</span> <span class="s2">&quot;E:&quot;</span><span class="p">,</span> <span class="s2">&quot;F:&quot;</span><span class="p">,</span> <span class="s2">&quot;G:&quot;</span><span class="p">,</span> <span class="s2">&quot;H:&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">Foreach</span><span class="p">(</span><span class="nv">$drive</span> <span class="k">in</span> <span class="nv">$drives</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">Unlock-BitLocker</span> <span class="n">-MountPoint</span> <span class="nv">$drive</span> <span class="n">-Password</span> <span class="nv">$password</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>2. バッチファイル unlock-bitLocker.cmd を書く</h2>

<p>上述の PowerShell スクリプトを管理者権限で実行し、かつ、スタートアッププログラムに登録するために、上記の PowerShell を呼び出すバッチファイル <code>C:\PATH-YOU-WANT\unlock-bitLocker.cmd</code> を書いてあげる。
PowerShell を直接登録したかったのだが、調査力が足りず変な構成になった…</p>

<p>もしくは、これくらいなら PowerShell スクリプトはいらず、バッチスクリプトだけでもよかったかもしれない。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'><span class="p">@</span><span class="k">echo</span> <span class="k">off</span>
</span><span class='line'><span class="k">setlocal</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">set</span> <span class="nv">DDrive</span><span class="o">=</span>D:
</span><span class='line'><span class="k">set</span> <span class="n">/a</span> SleepInterval<span class="o">=</span><span class="m">5</span>
</span><span class='line'>
</span><span class='line'><span class="k">echo</span> Unlocking bitlocker <span class="k">on</span> <span class="nv">%DDrive%</span> drive...
</span><span class='line'><span class="p">@</span>powershell -Command <span class="s2">&quot;Start-Process powershell.exe -ArgumentList C:\PATH-YOU-WANT\unlock_bitlocker.ps1 -Verb runas&quot;</span>
</span><span class='line'>timeout <span class="nv">%SleepInterval%</span> <span class="n">/nobreak</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="k">ERRORLEVEL</span> <span class="m">0</span> (
</span><span class='line'>  dir <span class="nv">%DDrive%</span>
</span><span class='line'>  <span class="k">echo</span> Yey<span class="p">,</span> unlocked bitlocker <span class="k">on</span> <span class="nv">%DDrive%</span> drive !!
</span><span class='line'>) <span class="k">else</span> (
</span><span class='line'>  <span class="k">echo</span> Error occured: unloker script returned error code: <span class="nv">%ERRORLEVEL%</span>
</span><span class='line'>)
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">endlocal</span>
</span><span class='line'><span class="k">pause</span> <span class="p">&gt;</span> <span class="n">nul</span>
</span><span class='line'>exit
</span></code></pre></td></tr></table></div></figure>


<h2>3. バッチファイル unlock-bitLocker.cmd をタスクスケジューラに登録する</h2>

<p><code>unlock-bitLocker.cmd</code> をスタートアッププログラムに登録すると、実行時に管理者権限で実行するかという確認ダイアログがでて毎回うざったい。
そこで、いったん上記のバッチスクリプトをタスクスケジューラに管理者権限実行のタスクとして登録してそのタスクをスタートアッププログラムから起動する。</p>

<ol>
<li><code>Windows キー + r</code> : ファイル名を指定して実行を起動</li>
<li><code>taskschd.msc</code> を入力: タスクスケジューラが開く</li>
<li>新規タスクの作成:

<ul>
<li>「タスクの作成」から <code>unlock_bitlocker.cmd</code> を起動するタスクを作成する</li>
<li>「全般」タブの「最上位の特権で実行する」にチェックを入れる</li>
<li>「操作」タブから「新規」ボタンを押す。操作は「プログラムの開始」、プログラム/スクリプトに <code>C:\PATH-YOU-WANT\unlock-bitLocker.cmd</code> を指定</li>
<li>「トリガー」は空でOK</li>
</ul>
</li>
</ol>


<h2>4. タスクを呼び出すバッチファイル trigger_unlock-bitLocker.cmd を書く</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'><span class="p">@</span><span class="k">echo</span> <span class="k">off</span>
</span><span class='line'><span class="k">setlocal</span>
</span><span class='line'><span class="c">rem ------------------------------------------------------------------</span>
</span><span class='line'>
</span><span class='line'>schtasks.exe <span class="n">/run</span> <span class="n">/tn</span> unlock_bitlocker
</span><span class='line'>
</span><span class='line'><span class="c">rem ------------------------------------------------------------------</span>
</span><span class='line'><span class="k">endlocal</span>
</span><span class='line'>exit
</span></code></pre></td></tr></table></div></figure>


<h2>5. バッチファイル unlock-bitLocker.cmd をスタートアッププログラムに登録してあげる</h2>

<ol>
<li><code>Windows キー + r</code> : ファイル名を指定して実行を起動</li>
<li><code>shell:startup</code> を入力: スタートアップのフォルダが開く</li>
<li>作ったバッチファイル <code>trigger_unlock-bitLocker.cmd</code> のショートカットをスタートアップフォルダの中に作成</li>
</ol>


<p>以上で、OS ログイン後に D ドライブの BitLocker を解除できる。</p>

<p>BitLocker を有効にしていると、初回起動時に NumLock が有効になっているのを無効化したいんだが、だれか方法を教えてほしい。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySQL パフォーマンスチューニング]]></title>
    <link href="http://momota.github.io/blog/2017/04/20/mysql/"/>
    <updated>2017-04-20T22:41:00+09:00</updated>
    <id>http://momota.github.io/blog/2017/04/20/mysql</id>
    <content type="html"><![CDATA[<p>MySQL 5.7 のパフォーマンスチューニングについて、調べてたのでまとめる。</p>

<p>// 結構な文量になってしまった…</p>

<p>大きく、2つのアプローチがある。</p>

<ol>
<li>DBチューニング

<ul>
<li>システム変数 (my.cnf) のチューニング</li>
<li>全体最適</li>
</ul>
</li>
<li>アプリ (SQL) チューニング

<ul>
<li>個別最適</li>
</ul>
</li>
</ol>


<p>まあ、地道に、計測→問題点の特定→修正→計測… のサイクルを回すしかない。</p>

<!-- more -->


<h1>1. DBチューニング</h1>

<h2>ディスク構成関連</h2>

<ul>
<li>ログファイルとデータファイル (たとえば、システム表領域データファイル) を別の物理ディスクに配置することでI/O性能が向上する</li>
<li>InnoDBデータファイルをRawデバイスに置くことで、I/O性能が向上する</li>
<li>OSマウントオプション noatime を無効化する

<ul>
<li>Linuxのファイルシステムには、ファイル読み込み時刻が「atime」として保存される。1ファイルアクセス当たりのオーバーヘッドはささやかだが、大量のファイルに対して頻繁にアクセスするシステムでは、atimeの更新にかかる時間も無視できなくなる。atimeが不要なシステムであれば、atimeの更新を無効化することでディスクのパフォーマンスが向上する可能性がある。</li>
</ul>
</li>
</ul>


<h2>ストレージエンジン関連</h2>

<ul>
<li><p>バッファプールサイズ <code>innodb_buffer_pool_size</code></p>

<ul>
<li>バッファプールサイズ <code>innodb_buffer_pool_size</code> は InnoDB のデータとインデックスをキャッシュするメモリ上の領域。可能な限り大きくすることが基本方針。</li>
<li>MySQL (InnoDB) のみを利用していれば、バッファプールサイズ <code>innodb_buffer_pool_size</code> はメインメモリの 70-80% 程度を割り当てる。データとインデックスの両方をキャッシュする。(デフォルトは128MB)</li>
<li>ログファイル全体をOSがキャッシュできる程度の余裕を持たせると更新系の性能に利点が大きい。</li>
</ul>
</li>
<li><p>バッファプールインスタンス <code>innodb_buffer_pool_instances</code></p>

<ul>
<li>バッファプールをいくつのインスタンスに分けるか指定する。デフォルト8</li>
<li>十分なメモリがある場合、複数のバッファプールインスタンスに分割することで、グローバル Mutex の衝突を減らすことができ同時並行性を改善可能。キャッシュされたページに対して、異なるスレッドがI/Oを行うときの競合が減るため並列性が増す。</li>
<li><code>innodb_buffer_pool_size</code> が大きく、mutex競合がオーバヘッドとなっている場合は、2以上に設定</li>
<li><code>innodb_buffer_pool_size</code> は <code>N * innodb_buffer_pool_chunk_size * innodb_buffer_pool_instances</code>に等しいサイズにする必要あり。</li>
<li>オンラインでもサイズ変更可能。</li>
<li><a href="https://dev.mysql.com/doc/refman/5.7/en/innodb-init-startup-configuration.html">MySQL :: MySQL 5.7 Reference Manual :: 15.6.1 InnoDB Startup Configuration</a>

<ul>
<li>mutex 競合確認方法の例は以下。</li>
</ul>
</li>
</ul>
</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mysql&gt; select event_name, count_star, sum_timer_wait/1000000000 sum_timer_wait_ms
</span><span class='line'>-&gt; from performance_schema.events_waits_summary_global_by_event_name
</span><span class='line'>-&gt; where event_name like '%buf_pool_mutex%';
</span><span class='line'>+----------------------------------------+------------+-------------------+
</span><span class='line'>| event_name                             | count_star | sum_timer_wait_ms |
</span><span class='line'>+----------------------------------------+------------+-------------------+
</span><span class='line'>| wait/synch/mutex/innodb/buf_pool_mutex | 0          | 0.0000            |
</span><span class='line'>+----------------------------------------+------------+-------------------+
</span><span class='line'>1 row in set (0.00 sec)</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p><code>innoDB_page_size</code></p>

<ul>
<li>デフォルト16k。16KBは、幅広いワークロードに適しているサイズ。特にテーブルスキャンを含むクエリだったり、バルクアップデートを含むDML操作など。</li>
<li>環境によって調整する。
<img src="http://momota.github.io/images/20170420_mysql/mysql_file.png" alt="innodb file structure" /></li>
</ul>
</li>
<li><p>データファイルアクセスに OSキャッシュを無駄に消費しないよう <code>innodb_flush_method</code> を <code>O_DIRECT</code> にする。</p>

<ul>
<li><code>O_DIRECT</code> にすると、OSのDirect I/O機能を利用し、OSのキャッシュをバイパスする。MySQL は自前のキャッシュ機構があるので、OSキャッシュは冗長なので、バイパスしたほうがよい。</li>
<li>Linuxでは、多くの場合 <code>O_DIRECT</code> にしたほうがオーバヘッドが下がる</li>
</ul>
</li>
<li><p><code>innodb_log_file_size</code></p>

<ul>
<li>ログファイル(WAL: Write Ahead Log)はトランザクション更新ログ。ログファイルがどの程度頻繁に切り替わっているかをチェックしておく。</li>
<li>大きくしすぎるとOSキャッシュに載らず、性能劣化する場合あり。また、クラッシュ後のリカバリ時間が長くなる。</li>
<li><code>innodb_buffer_pool_size</code> の25%～100%。デフォルト45MB。最大リカバリ時間に影響するので考慮しつつ大きく設定する。</li>
</ul>
</li>
<li><p><code>innodb_log_buffer_size</code></p>

<ul>
<li>InnoDB は、変更されたデータのレコードを、メモリ上のバッファに書き込み、トランザクションがコミットする前にログがディスクに書き込まれないようにすることで、大きなトランザクション
のI/Oを節約する。</li>
<li>大量・巨大な blob を書き込む必要がなければ、4MB-8MBが適切。</li>
</ul>
</li>
<li><p><code>innodb_flush_log_at_trx_commit</code></p>

<ul>
<li><code>innodb_flush_log_log_at_trx_commit</code> が 1 の時、ログバッファはトランザクションがコミットされるたびにディスク上のログファイルに書き出され、データの整合性を最大限保つ。しかし、これはパフォーマンスへの影響がある。この値を2にすると、ログバッファはトランザクションのコミットごとにOSのファイルキャッシュへ書き出される。これにより、ACIDを意識しないのであればパフ
ォーマンスを最適化・高速化できるが、OSのクラッシュ時には数秒分のトランザクションが消えてしまう可能</li>
</ul>
</li>
<li><p><code>innodb_file_per_table</code></p>

<ul>
<li>テーブル単位でOS上のデータファイルを分ける設定</li>
<li>ディスクI/O分散やibdata ファイルの肥大化を防ぐためONを推奨</li>
<li>pros / cons: <a href="https://dev.mysql.com/doc/refman/5.7/en/innodb-multiple-tablespaces.html">MySQL :: MySQL 5.7 Reference Manual :: 15.7.4 InnoDB File-Per-Table Tablespaces</a></li>
<li>ibdataファイル肥大化時の運用を検討する必要あり: <a href="http://nippondanji.blogspot.jp/2009/01/innodb_16.html">漢(オトコ)のコンピュータ道: InnoDBのファイルサイズ管理</a></li>
</ul>
</li>
<li><p>Double Write Buffer</p>

<ul>
<li>クラッシュ時のpartial write (書き込み途中状態での終了) によるデータページ破壊への対策機能で、InnoDBで使われているファイルFlush技術。

<ul>
<li>InnoDBデータファイルにページを書き出す前に、隣接領域 (これをdoublewrite bufferと呼ぶ)にまず書き出す。double write bufferへの書き込みおよびFlushが完了したら、InnoDBはデータをデータファイルの適切な位置に書き込む。これによりページファイルへの書き込み途中にクラッシュしても (OSやストレージサブシステム、mysqldプロセス)、doublewrite buffer からクラッシュリカバリできる。ただし、これはI/Oオーバヘッドが2倍以上かかるため、性能とのトレードオフ。</li>
</ul>
</li>
<li>障害復旧可能性を高めるため、<code>innodb_doublewrite = ON</code> (デフォルト設定) が推奨</li>
</ul>
</li>
<li><p><code>innodb_thread_concurrency</code> で同時実行スレッド数を調整する。</p>

<ul>
<li>処理を並列に行うとスループットの向上が期待出来るが、同時に実行中のスレッドがあまりに多すぎるとロックの競合が多発してしまって返って性能を落とす原因になってしまう。</li>
<li>5.5 以上であればリミットをかける必要はない。現代的なOSであれば、マルチコア・プロセッサのコンテキストスイッチを効果的に実施してくれる。0は上限なし。デフォルトでOK</li>
<li>並列度で問題が出た場合は、値を調整する。この場合の推奨値は、CPU 数の 2 倍にディスクの数を足したもの。動的変数なのでオンラインで変更可能。</li>
</ul>
</li>
<li><p>InnoDB compression (圧縮機能)</p>

<ul>
<li>以下のメリットがある

<ul>
<li>DBデータファイルサイズを縮小化</li>
<li>I/O削減</li>
<li>スループットの改善</li>
<li>データ量削減</li>
</ul>
</li>
<li>条件

<ul>
<li><code>innodb_file_per_table</code> を有効化すること</li>
<li><code>innodb_file_format</code> が Barracuda であること</li>
</ul>
</li>
<li><code>CREATE TABLE</code> もしくは <code>ALTER TABLE</code> で <code>ROW_FORMAT=COMPRESSED</code> か <code>KEY_BLOCK_SIZE</code> を指定する</li>
</ul>
</li>
<li><p><code>innodb_io_capacity</code></p>

<ul>
<li>InnoDB のバックグラウンドタスクに使用するI/Oキャパシティ(IOPS)の上限を設定する。デフォルト200。</li>
<li>高速なストレージを使用している場合は拡大する。</li>
<li>デフォルト値 (200) は、ストライプされた2本のディスクを目安にした値</li>
</ul>
</li>
<li><code>innodb_read_io_threads</code>, <code>innodb_write_io_threads</code>

<ul>
<li>高速なストレージを使用している場合は拡大する。</li>
<li>デフォルト値 (4) は、一般的には十分な値</li>
</ul>
</li>
</ul>


<h2>コネクションスレッドプール関連</h2>

<ul>
<li><code>max_connections</code>

<ul>
<li>サーバが許容可能なコネクション数。デフォルト151。</li>
<li>多すぎるとメモリを消費し切る可能性あり</li>
</ul>
</li>
<li><code>thread_cache_size</code>

<ul>
<li>スレッドをコネクションの切断後にもキャッシュしておく数。</li>
<li>一般的には <code>max_connections / 3</code></li>
<li>計算式 <code>8 + (max_connections / 100)</code> により自動計算。</li>
</ul>
</li>
<li><code>sort_buffer_size</code>

<ul>
<li>ソート用のメモリサイズ。このサイズを超えるとディスクを利用する。OLTPでは256KB〜1MBを割り当てる。</li>
</ul>
</li>
</ul>


<h2>クエリキャッシュ関連</h2>

<ul>
<li><code>query_cache_size</code>

<ul>
<li>クエリキャッシュに割り当てるメモリサイズ</li>
<li>一般的には32MでOK。デフォルト1MB。</li>
</ul>
</li>
<li><code>query_cache_type</code>

<ul>
<li>最悪のケースでは、パフォーマンスのオーバヘッドが約15%</li>
<li>select 比率が高いサーバで有効</li>
<li>DEMAND に設定すると、クエリ実行時にSQL_CACHE句をつけたクエリだけキャッシュ可能</li>
</ul>
</li>
</ul>


<h2>その他</h2>

<ul>
<li><p><code>autocommit</code> は高負荷なのでOFFが推奨。</p>

<ul>
<li><a href="https://dev.mysql.com/doc/refman/5.7/en/innodb-best-practices.html">MySQL :: MySQL 5.7 Reference Manual :: 15.1.2 Best Practices for InnoDB Tables</a></li>
<li>トランザクション文で明確にコミットすること</li>
</ul>
</li>
<li><p>Read-Ahead</p>

<ul>
<li>read-aheadリクエストは、バッファプールへ近い将来必要になりそうな複数のページを先読みするI/Oリクエスト。1エクステントの全ページに対してリクエストする。I/O性能の改善効果がある。Linear read-head(デフォルト)とRandom read-headの2つのアルゴリズムがある</li>
<li>この関連パラメータはチューニングする余地あり</li>
</ul>
</li>
<li><p>再起動時のウォームアップ運用</p>

<ul>
<li>バッファプールの中身を保存・リストアする機能がある。この機能を利用して、再起動後、データをキャッシュに載せ高速化する。</li>
<li><a href="https://dev.mysql.com/doc/refman/5.7/en/innodb-preload-buffer-pool.html">MySQL :: MySQL 5.7 Reference Manual :: 15.6.3.8 Saving and Restoring the Buffer Pool State</a></li>
</ul>
</li>
</ul>


<h1>2. アプリ (SQL) チューニング</h1>

<ul>
<li><p>適切なSQLを使う (クエリ最適化)</p>

<ul>
<li>まずはスロークエリの分析</li>
<li><code>SHOW FULL PROCESSLIST</code> で現在実行中の時間がかかっているクエリを特定する</li>
<li>EXPLAIN で実行計画の評価

<ul>
<li>たとえば、全件フェッチしてからアプリケーション側で行を絞り込むというようなロジックはNG</li>
</ul>
</li>
<li>フェッチする行数を減らすようなクエリを組み立てる。

<ul>
<li>サブクエリをJOINに書き換えたり、インデックスを適切に貼ったり。</li>
</ul>
</li>
</ul>
</li>
<li><p>テーブルの最適化</p>

<ul>
<li>適切なデータタイプを選択する

<ul>
<li>数値をVARCHAR(桁数)はNG。INT (もしくはBIGINT) にすることで高速かつデータサイズが小さい</li>
</ul>
</li>
<li>インデックスを適切に作成する

<ul>
<li>付けすぎると更新時のオーバヘッドが増える</li>
<li>無駄に付けない。たとえば、性別などの二値にインデックスを張っても意味がない。</li>
</ul>
</li>
<li>適切に正規化する

<ul>
<li>JOIN処理により性能が出ない場合は非正規化も検討する</li>
</ul>
</li>
</ul>
</li>
<li><p>適切な粒度でcommitする</p>

<ul>
<li>グループコミットの利用</li>
</ul>
</li>
<li><p>レプリケーションを利用した負荷分散</p>

<ul>
<li>参照処理はSlave側を向ける、など</li>
</ul>
</li>
<li><p>コネクションプーリングする</p></li>
<li><p>Innodb compression</p>

<ul>
<li>テーブル単位に圧縮オプションを選択可能</li>
<li>DML操作の実行時に compresson failure を引き起こす可能性あり。パラメータをチューニングする。</li>
<li>繰り返しの値や一般的に文字列 (CHAR, VARCHAR, TEXT or BLOB列) は圧縮効果が大きい</li>
<li>ほとんどバイナリデータ (integer or floating point number) や事前に圧縮されているデータ (たとえば JPEG た PNG) は圧縮効果が少ない

<ul>
<li><a href="https://dev.mysql.com/doc/refman/5.7/en/innodb-compression-tuning.html">MySQL :: MySQL 5.7 Reference Manual :: 15.9.1.3 Tuning Compression for InnoDB Tables</a></li>
</ul>
</li>
<li>画像データが入っていないテーブルに適用すると効果あり</li>
</ul>
</li>
</ul>


<h1>性能測定</h1>

<p>推測するな、計測せよ。</p>

<p>設定を変えたり、プログラムを変えたりしても、効果を測れないと意味がない。</p>

<h2>MySQL のステータス</h2>

<ul>
<li><a href="https://dev.mysql.com/doc/refman/5.7/en/innodb-buffer-pool-monitoring.html">MySQL :: MySQL 5.7 Reference Manual :: 15.6.3.9 Monitoring the Buffer Pool Using the InnoDB Standard Monitor</a></li>
<li><code>INFORMATION_SCHEMA</code>

<ul>
<li><code>INNODB_CMP*</code> : 圧縮の状況</li>
<li><code>INNODB_TRX</code>, <code>INNODB_LOCKS*</code> : ロック状況</li>
<li><code>INNODB_SYS_*</code> : システムテーブル (メタデータ)</li>
<li><code>INNODB_BUFFER_*</code> : バッファプール</li>
</ul>
</li>
<li>PERFORMANCE_SCHEMA, sys スキーマ</li>
<li>InnoDB 監視

<ul>
<li>Pending file IOリクエスト</li>
<li>バッファプール統計</li>
<li>ロック、mutex</li>
<li><code>SHOW ENGINE INNODB STATUS</code></li>
</ul>
</li>
</ul>


<h2>性能測定ツール</h2>

<ul>
<li>innotop

<ul>
<li><code>top</code> 風に MySQL のステータスを表示するツール</li>
<li><a href="https://github.com/innotop/innotop">innotop/innotop</a></li>
</ul>
</li>
<li>dstat, sar

<ul>
<li>OSレイヤの性能値を取得する</li>
</ul>
</li>
</ul>


<h2>ベンチマークツール</h2>

<ul>
<li>DBT2

<ul>
<li><a href="https://dev.mysql.com/downloads/benchmarks.html">MySQL :: MySQL Benchmark Tool</a></li>
</ul>
</li>
<li>SysBench

<ul>
<li><a href="https://dev.mysql.com/downloads/benchmarks.html">MySQL :: MySQL Benchmark Tool</a></li>
</ul>
</li>
<li>mysqlslap

<ul>
<li>標準の負荷エミュレーションクライアントプログラム</li>
<li><a href="https://dev.mysql.com/doc/refman/5.7/en/mysqlslap.html">MySQL :: MySQL 5.7 Reference Manual :: 5.5.9 mysqlslap — Load Emulation Client</a></li>
</ul>
</li>
<li>flexAsynch

<ul>
<li>MySQL Cluster用のテストツール</li>
</ul>
</li>
</ul>


<h1>参考資料</h1>

<ul>
<li><a href="https://dev.mysql.com/doc/refman/5.7/en/">MySQL :: MySQL 5.7 Reference Manual</a></li>
<li><a href="https://downloads.mysql.com/presentations/20151208_02_MySQL_Tuning_for_Beginners.pdf">20151208_02_MySQL_Tuning_for_Beginners.pdf</a></li>
<li><a href="http://nippondanji.blogspot.jp/2009/02/mysql10.html">漢(オトコ)のコンピュータ道: MySQLを高速化する10の方法</a></li>
<li><a href="https://yakst.com/ja/posts/65">(帰ってきた)InnoDBパフォーマンス最適化の基礎 | Yakst</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ansible ABC]]></title>
    <link href="http://momota.github.io/blog/2016/08/19/ansible-abc/"/>
    <updated>2016-08-19T08:22:00+09:00</updated>
    <id>http://momota.github.io/blog/2016/08/19/ansible-abc</id>
    <content type="html"><![CDATA[<p>チーム内での Ansible 勉強会の資料を公開。</p>

<p><img src="http://momota.github.io/images/20160818_ansible-logo.png" alt="ansible logo" /></p>

<p>公式サイトは以下。</p>

<ul>
<li><a href="http://www.ansible.com">http://www.ansible.com</a></li>
<li><a href="http://docs.ansible.com">http://docs.ansible.com</a></li>
</ul>


<p>前提知識としては、以下。知っていたほうが理解が早い。</p>

<ul>
<li>unix コマンド</li>
<li>YAML

<ul>
<li><a href="http://blog.n-z.jp/blog/2014-06-21-ansible-yaml.html">ansible使いのためのYAML入門 &ndash; @znz blog</a></li>
</ul>
</li>
</ul>


<p>公式から引用すると、Ansible は <strong>simple IT automation engine</strong>。</p>

<blockquote><p>Ansible is a radically <strong>simple IT automation engine</strong> that automates cloud provisioning, configuration management, application deployment, intra-service orchestration, and many other IT needs.</p>

<p>&mdash;&ndash;    <a href="https://www.ansible.com/how-ansible-works">How Ansible Works</a> より</p></blockquote>

<!-- more -->


<h2>Ansible の概要</h2>

<ul>
<li>Ansible は、サーバの構成管理ツールと言われている。

<ul>
<li>サーバ構成管理とは? Ansible が主に対象としているのは以下。

<ul>
<li>サーバのソフトウェアインストール/アップデート</li>
<li>設定ファイルの作成/修正/削除</li>
<li>サービス停止/起動</li>
<li>ファイル (アプリケーション) の配布</li>
</ul>
</li>
<li>類似ツールに、Chef や Puppet がある。</li>
<li>Infrastructure as Code の流れや世の中のクラウド化に伴い、評価されている</li>
<li>Infrastructure as Code: インフラの状態をコード化できる

<ul>
<li>ソフトウェア開発でのナレッジが活かせる

<ul>
<li>バージョン管理: git, subversion, &hellip;</li>
<li>コードレビュー: pull request, other tools, &hellip;</li>
<li>テスト: test framework like serverspec, infrataster, &hellip;</li>
<li>デプロイ、CI &hellip; : jenkins, &hellip;</li>
</ul>
</li>
<li>設計ドキュメントと実装との差分がある程度埋まる</li>
</ul>
</li>
</ul>
</li>
<li>もともとはAnsible, Inc により開発されていたが、2015年10月に Redhat により買収された</li>
</ul>


<p>以下は、Ansible の動作イメージ。(<a href="https://sysadmincasts.com/episodes/46-configuration-management-with-ansible-part-3-4">https://sysadmincasts.com/episodes/46-configuration-management-with-ansible-part-3-4</a> より引用)</p>

<p><img src="http://momota.github.io/images/20160818_ansible_overview.gif" alt="diagram" /></p>

<h1>Ansible の特徴・利点</h1>

<ul>
<li>冪等性

<ul>
<li>何回やっても同じ結果になること。

<ul>
<li>モジュール側でチェック処理などを吸収してくれる。</li>
<li>shell モジュールや rawモジュールなど、一部、冪等性が担保されないものもある。</li>
</ul>
</li>
<li>単純 re-run が可能。</li>
<li>Immutable Infrastructure との相性の良さ。</li>
</ul>
</li>
<li>Python の &ldquo;バッテリー同梱 (Battery Included)&rdquo; という考え方を引き継いでいる。

<ul>
<li>標準モジュール/機能の豊富さ。</li>
</ul>
</li>
<li>Push 型アーキテクチャ

<ul>
<li>管理対象ノード (Managed Node) に SSH さえできれば良い。</li>
<li>エージェントレス。</li>
<li>マルチプロセスで並列実行が可能。</li>
<li>Ansible 実行サーバを Control Machine, 管理対象ノードを Managed Nodeと呼ぶ。</li>
</ul>
</li>
<li>シンプル

<ul>
<li>独自 DSL ではなく、YAML。

<ul>
<li>データ志向の自動化言語である YAML</li>
<li>学習コストが低い。chef や puppet のように Ruby などの独自 DSL を覚える必要がない。</li>
</ul>
</li>
<li>ファイル・ディレクトリ構造の自由度の高さ。決まり事が少ない。</li>
<li>Ansible 自体は Python で書かれているが、プラグインなどの開発が不要であれば、Python を使う必要なし。</li>
</ul>
</li>
</ul>


<h1>Ansible の用途</h1>

<ul>
<li>複数サーバへの……

<ul>
<li>バッチ処理

<ul>
<li>システム全体の設定 (<code>/etc</code> 以下の設定)

<ul>
<li>hosts へのエントリ</li>
</ul>
</li>
<li>ネットワーク設定

<ul>
<li>ルーティングテーブルエントリの追加</li>
<li>SOCKS プロキシ</li>
<li>proxy.pac</li>
</ul>
</li>
<li>ファイル配布

<ul>
<li>SSHキーの配布</li>
</ul>
</li>
</ul>
</li>
<li>ミドルウェアのインストール/アップデート

<ul>
<li>yum</li>
<li>apt</li>
<li>homebrew</li>
<li>gem</li>
</ul>
</li>
<li>アプリケーションデプロイ</li>
</ul>
</li>
</ul>


<p>公式サイトの Use case を直訳すると、以下。</p>

<blockquote><ul>
<li>provisioning (Bootstrapping と呼ぶほうが正しいかも)

<ul>
<li>ベアメタルサーバやVMに対する、PXEブート (遠隔電源操作), キックスタート (linux の自動インストール)</li>
<li>VM (クラウドインスタンス) に対する、テンプレートからの作成</li>
</ul>
</li>
<li>configuration management

<ul>
<li>コンフィグファイルの中央管理</li>
</ul>
</li>
<li>application deployment

<ul>
<li>Ansible でアプリケーションを定義しデプロイすることで、開発環境から本番環境までのアプリケーション全体のライフサイクルを効果的に管理できる</li>
</ul>
</li>
<li>continuous delivery

<ul>
<li>CI/CD のパイプラインはたくさんのチームから依頼を引き受けることになる。だれもが使えるシンプルなAnsible を使うことで適切にアプリケーションのデプロイ管理ができる</li>
</ul>
</li>
<li>security &amp; compliance

<ul>
<li>Ansible でセキュリティポリシを定義することで、サイト全体のセキュリティポリシのスキャンと修復が可能になる。</li>
</ul>
</li>
<li>orchestration

<ul>
<li>管理対象のコンフィグは多種多様に存在し、かつ、それぞれが相互に作用している。Ansible は、この複雑で混沌とした中に秩序をもたらす。</li>
</ul>
</li>
</ul>
</blockquote>

<p>仕事ではあまり OS を扱うことは少なく、以下のようなレイヤの低いやつを raw モジュールを
駆使して構成変更したり情報取得したりしている。</p>

<ul>
<li>ESXi</li>
<li>iLO</li>
<li>BIOS</li>
<li>その他 SSH 可能なノード</li>
</ul>


<h1>Ansible を動かしてみよう</h1>

<h2>Ansible のインストール</h2>

<p><a href="http://docs.ansible.com/ansible/intro_installation.html#getting-ansible">Installation &ndash; Ansible Documentation</a> を参照</p>

<ol>
<li>Control Machine : Ansible 実行サーバ

<ul>
<li>Python 2.6 or 2.7 が必要</li>
<li>yum や rpm, apt などのパッケージ管理システムでインストール可能</li>
</ul>
</li>
<li>Managed Node : 管理対象ノード

<ul>
<li>Control Machine から SSH できればOK</li>
</ul>
</li>
</ol>


<h2>Ansible 実行してみる</h2>

<p>ansile を単体実行するコマンド書式は以下。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ansible &lt;host-pattern&gt; [-f forks] [-m module_name] [-a args]</span></code></pre></td></tr></table></div></figure>


<table>
<thead>
<tr>
<th>オプション </th>
<th> 意味</th>
</tr>
</thead>
<tbody>
<tr>
<td>-f         </td>
<td> 実行多重度。デフォルトは5 (ansible.cfg で規定)</td>
</tr>
<tr>
<td>-m         </td>
<td> モジュール名</td>
</tr>
<tr>
<td>-a         </td>
<td> モジュール引数</td>
</tr>
</tbody>
</table>


<p><a href="http://docs.ansible.com/ansible/modules_by_category.html">モジュールはこちらを参照。</a></p>

<p>以下はローカルで動くモジュールの一部を紹介。</p>

<table>
<thead>
<tr>
<th>モジュール </th>
<th> 機能</th>
</tr>
</thead>
<tbody>
<tr>
<td>ping       </td>
<td> その名の通り ping</td>
</tr>
<tr>
<td>shell      </td>
<td> コマンドを引数に渡して shell 実行可能</td>
</tr>
<tr>
<td>file       </td>
<td> ファイルのパーミション設定とか、ディレクトリ作成とか</td>
</tr>
<tr>
<td>template   </td>
<td> Control Machine のテンプレートファイル (テンプレートエンジンは jinja2 ) を Managed Node に配布</td>
</tr>
<tr>
<td>service    </td>
<td> init system のサービスを制御</td>
</tr>
<tr>
<td>sysctrl    </td>
<td> カーネルパラメータの操作</td>
</tr>
<tr>
<td>raw        </td>
<td> ssh でナマの文字列をそのまま流し込む</td>
</tr>
</tbody>
</table>


<p>インターネットに接続していれば、以下も有用。</p>

<table>
<thead>
<tr>
<th>モジュール </th>
<th> 機能</th>
</tr>
</thead>
<tbody>
<tr>
<td>yum        </td>
<td> yum によるソフトウェアパッケージ管理</td>
</tr>
<tr>
<td>get_url    </td>
<td> HTTP でのダウンロード (curl, wget 的な)</td>
</tr>
<tr>
<td>git        </td>
<td> git リポジトリからの clone</td>
</tr>
</tbody>
</table>


<p>バージョンが 2 系からJunos とか Cisco, ESXi 用のモジュールもある。</p>

<p><code>&lt;host-pattern&gt;</code> でホストを指定する。
all とすると、<code>/etc/ansible/hosts</code> で定義しているすべてのホストが対象となる。</p>

<p>以下は <code>ping</code> モジュールを利用したコマンド。
localhost に ping する ansible コマンド。
<code>-m</code> オプションのあとに <code>ping</code> モジュールを指定する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>ansible localhost -m ping
</span><span class='line'>localhost | success &gt;&gt; <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;changed&quot;</span>: <span class="nb">false</span>,
</span><span class='line'>    <span class="s2">&quot;ping&quot;</span>: <span class="s2">&quot;pong&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>以下は、<code>shell</code> モジュールを利用したコマンド。
<code>-a</code> オプションのあとにモジュール引数を渡す。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>ansible localhost -m shell -a <span class="s2">&quot;uname -a; date; id; ifconfig&quot;</span>
</span><span class='line'>localhost | success | <span class="nv">rc</span><span class="o">=</span>0 &gt;&gt;
</span><span class='line'>Linux m 3.13.0-32-generic <span class="c">#57-Ubuntu SMP Tue Jul 15 03:51:12 UTC 2014 i686 i686 i686 GNU/Linux</span>
</span><span class='line'>Thu Aug  4 17:37:49 JST 2016
</span><span class='line'><span class="nv">uid</span><span class="o">=</span>1000<span class="o">(</span>momota<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1000<span class="o">(</span>momota<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1000<span class="o">(</span>momota<span class="o">)</span>,4<span class="o">(</span>adm<span class="o">)</span>,24<span class="o">(</span>cdrom<span class="o">)</span>,27<span class="o">(</span>sudo<span class="o">)</span>,30<span class="o">(</span>dip<span class="o">)</span>,33<span class="o">(</span>www-data<span class="o">)</span>,46<span class="o">(</span>plugdev<span class="o">)</span>,108<span class="o">(</span>lpadmin<span class="o">)</span>,124<span class="o">(</span>sambashare<span class="o">)</span>
</span><span class='line'>docker0   Link encap:Ethernet  HWaddr 56:84:7a:fe:97:99
</span><span class='line'>          inet addr:172.*.*.*  Bcast:0.0.0.0  Mask:255.255.0.0
</span><span class='line'>          UP BROADCAST MULTICAST  MTU:1500  Metric:1
</span><span class='line'>          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
</span><span class='line'>          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
</span><span class='line'>          collisions:0 txqueuelen:0
</span><span class='line'>          RX bytes:0 <span class="o">(</span>0.0 B<span class="o">)</span>  TX bytes:0 <span class="o">(</span>0.0 B<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>eth0      Link encap:Ethernet  HWaddr 00:1e:c9:80:66:c6
</span><span class='line'>          inet addr:172.*.*.*  Bcast:172.104.43.255  Mask:255.255.254.0
</span><span class='line'>          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
</span><span class='line'>          RX packets:40670341 errors:0 dropped:0 overruns:0 frame:0
</span><span class='line'>          TX packets:1099217 errors:0 dropped:0 overruns:0 carrier:0
</span><span class='line'>          collisions:0 txqueuelen:1000
</span><span class='line'>          RX bytes:4490922632 <span class="o">(</span>4.4 GB<span class="o">)</span>  TX bytes:329019625 <span class="o">(</span>329.0 MB<span class="o">)</span>
</span><span class='line'>          Interrupt:21 Memory:febe0000-fec00000
</span><span class='line'>
</span><span class='line'>lo        Link encap:Local Loopback
</span><span class='line'>          inet addr:127.0.0.1  Mask:255.0.0.0
</span><span class='line'>          UP LOOPBACK RUNNING  MTU:65536  Metric:1
</span><span class='line'>          RX packets:47797 errors:0 dropped:0 overruns:0 frame:0
</span><span class='line'>          TX packets:47797 errors:0 dropped:0 overruns:0 carrier:0
</span><span class='line'>          collisions:0 txqueuelen:0
</span><span class='line'>          RX bytes:5233688 <span class="o">(</span>5.2 MB<span class="o">)</span>  TX bytes:5233688 <span class="o">(</span>5.2 MB<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>ただし、実際には <code>ansible</code> コマンドを使うことはめったにない。</p>

<p>複数のノードに対してタスクを実行したり、複雑なタスクを実行する場合は、
Inventory ファイルや Playbook ファイルを利用する。</p>

<p>Ansible の主なファイルは以下。</p>

<ul>
<li>ansible.cfg

<ul>
<li>ansible に関するデフォルト設定ファイル。<code>/etc/ansible/ansible.cfg</code></li>
</ul>
</li>
<li>Inventory

<ul>
<li>ansible で管理対象ノードを定義するファイル</li>
</ul>
</li>
<li>Playbook

<ul>
<li>タスク (実行手順) を定義するファイル</li>
</ul>
</li>
</ul>


<h1>Inventory</h1>

<p>Inventory ファイルは、ansible 用の hosts ファイル。
ホストやグルーピングの設定、変数などの定義が可能。
ホストや IP アドレスはレンジでの指定も可能。</p>

<ul>
<li>ホストとグループの定義</li>
<li>ホスト変数とグループ変数</li>
<li>グループのグループ</li>
</ul>


<p>以下は、デフォルト設定 <code>/etc/ansible/hosts</code>。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'><span class="c1">#   - Comments begin with the &#39;#&#39; character</span>
</span><span class='line'><span class="c1">#   - Blank lines are ignored</span>
</span><span class='line'><span class="c1">#   - Groups of hosts are delimited by [header] elements</span>
</span><span class='line'><span class="c1">#   - You can enter hostnames or ip addresses</span>
</span><span class='line'><span class="c1">#   - A hostname/ip can be a member of multiple groups</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Ex 1: Ungrouped hosts, specify before any group headers.</span>
</span><span class='line'>
</span><span class='line'><span class="err">green.example.com</span>
</span><span class='line'><span class="err">blue.example.com</span>
</span><span class='line'><span class="err">192.168.100.1</span>
</span><span class='line'><span class="err">192.168.100.10</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Ex 2: A collection of hosts belonging to the &#39;webservers&#39; group</span>
</span><span class='line'>
</span><span class='line'><span class="k">[webservers]</span>
</span><span class='line'><span class="err">alpha.example.org</span>
</span><span class='line'><span class="err">beta.example.org</span>
</span><span class='line'><span class="err">192.168.1.100</span>
</span><span class='line'><span class="err">192.168.1.110</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># If you have multiple hosts following a pattern you can specify</span>
</span><span class='line'><span class="c1"># them like this:</span>
</span><span class='line'>
</span><span class='line'><span class="err">www[001:006].example.com</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Ex 3: A collection of database servers in the &#39;dbservers&#39; group</span>
</span><span class='line'>
</span><span class='line'><span class="k">[dbservers]</span>
</span><span class='line'>
</span><span class='line'><span class="err">db01.intranet.mydomain.net</span>
</span><span class='line'><span class="err">db02.intranet.mydomain.net</span>
</span><span class='line'><span class="err">10.25.1.56</span>
</span><span class='line'><span class="err">10.25.1.57</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Here&#39;s another example of host ranges, this time there are no</span>
</span><span class='line'><span class="c1"># leading 0s:</span>
</span><span class='line'>
</span><span class='line'><span class="err">db-[99:101]-node.example.com</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Playbook</h1>

<p>Playbook はタスクをまとめて、1つのファイルに記述したもの。
実行順序や依存関係、変数を利用した処理、ループ処理などが表現できる。</p>

<p>Playbookの基本的なフォーマットは以下。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">hosts</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">&lt;対象とするホスト/グループ&gt;</span>
</span><span class='line'>  <span class="l-Scalar-Plain">var</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">&lt;変数名1&gt;</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">&lt;値&gt;</span>
</span><span class='line'>    <span class="l-Scalar-Plain">&lt;変数名2&gt;</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">&lt;値&gt;</span>
</span><span class='line'>      <span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">remote_user</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">&lt;処理を実行するユーザー名&gt;</span>
</span><span class='line'>  <span class="l-Scalar-Plain">become</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">yes</span>   <span class="c1"># sudo するか</span>
</span><span class='line'>  <span class="l-Scalar-Plain">tasks</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">&lt;タスク1&gt;</span>
</span><span class='line'>    <span class="l-Scalar-Plain">&lt;タスク2&gt;</span>
</span><span class='line'>      <span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">handlers</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">&lt;ハンドラ1&gt;</span>
</span><span class='line'>    <span class="l-Scalar-Plain">&lt;ハンドラ2&gt;</span>
</span><span class='line'>      <span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">:</span>
</span></code></pre></td></tr></table></div></figure>


<h2>タスク</h2>

<p>ansible ではホストに対する処理をタスクという単位で管理する。
通常、1つのタスクには1つのモジュールを指定する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">&lt;タスクの説明&gt;</span>
</span><span class='line'>    <span class="l-Scalar-Plain">&lt;モジュール名&gt;</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">&lt;実行時に与えるパラメータ&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>name は description なので省略可能だが、メンテナンス性や playbook 実行時にわかりやすいので絶対書いたほうが良い。</p>

<p>name は日本語でも記載可能。 (文字コードは注意)</p>

<h2>ハンドラ</h2>

<p>ハンドラは、特定のタスクの実行後に、予め指定した処理を実行するための仕組み。
以下のように記述する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">tasks</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">be sure httpd is installed</span>
</span><span class='line'>    <span class="l-Scalar-Plain">yum</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">name=httpd state=installed</span>
</span><span class='line'>    <span class="l-Scalar-Plain">notify</span><span class="p-Indicator">:</span>
</span><span class='line'>      <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">restart httpd</span>
</span><span class='line'><span class="l-Scalar-Plain">handlers</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">restart httpd</span>
</span><span class='line'>    <span class="l-Scalar-Plain">service</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">name=httpd state=restarted</span>
</span></code></pre></td></tr></table></div></figure>


<p>この場合、「be sure httpd is installed」というタスクが実行されると、続いて「notify」で指定された「restart httpd」というハンドラが実行される。</p>

<h2>ループ</h2>

<p><code>with_items</code> で列挙した項目に対してループ処理が可能。</p>

<p><a href="http://docs.ansible.com/ansible/playbooks_loops.html">Loops &ndash; Ansible Documentation</a></p>

<p>リモートのコマンド結果 (標準出力)に対して、一行ずつ処理するタスクが以下。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="s">&quot;リモートのコマンド結果を使ったループの例&quot;</span>
</span><span class='line'>  <span class="l-Scalar-Plain">shell</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/usr/bin/something</span>
</span><span class='line'>  <span class="l-Scalar-Plain">register</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">command_result</span>
</span><span class='line'>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="s">&quot;結果を受け取って何かするタスク&quot;</span>
</span><span class='line'>  <span class="l-Scalar-Plain">shell</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/usr/bin/something_else --param {{ item }}</span>
</span><span class='line'>  <span class="l-Scalar-Plain">with_items</span><span class="p-Indicator">:</span> <span class="s">&quot;{{</span><span class="nv"> </span><span class="s">command_result.stdout_lines</span><span class="nv"> </span><span class="s">}}&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>こんな感じで直接リストを書いてもOK。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="s">&quot;リストからパッケージをインストールしていく&quot;</span>
</span><span class='line'>  <span class="l-Scalar-Plain">yum</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">name={{ item }} state=latest</span>
</span><span class='line'>  <span class="l-Scalar-Plain">with_items</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">httpd</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">zsh</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">tmux</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">vim</span>
</span></code></pre></td></tr></table></div></figure>


<h1>playbook のサンプル</h1>

<p>まずはインベントリファイル <code>sample_hosts</code> を作成する</p>

<p>&ldquo;fujiko&rdquo; グループに所属しているホストのリスト (計3台分) を記述している。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'><span class="k">[fujiko]</span>
</span><span class='line'><span class="err">doraemon</span>
</span><span class='line'><span class="err">nobita</span>
</span><span class='line'><span class="err">shizuka</span>
</span></code></pre></td></tr></table></div></figure>


<p>次にplaybook ファイル <code>sample_playbook.yml</code> を作成する。</p>

<p>計 3 つのタスクを記述している。</p>

<p><code>register: &lt;変数名1&gt;</code> という書式でタスク実行結果を変数に保存する。 この変数を Registered Variable と呼ぶ。</p>

<p><code>debug: var=&lt;変数名1&gt;/stdout_lines</code> により、変数に保存したタスク実行結果 (の標準出力) を表示している。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="nn">---</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">hosts</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">fujiko</span>
</span><span class='line'>  <span class="l-Scalar-Plain">tasks</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="s">&quot;死活&quot;</span>
</span><span class='line'>      <span class="l-Scalar-Plain">ping</span><span class="p-Indicator">:</span>
</span><span class='line'>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="s">&quot;ホスト名&quot;</span>
</span><span class='line'>      <span class="l-Scalar-Plain">shell</span><span class="p-Indicator">:</span>    <span class="l-Scalar-Plain">hostname</span>
</span><span class='line'>      <span class="l-Scalar-Plain">register</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">host</span>
</span><span class='line'>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">debug</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">var=host.stdout_lines</span>
</span><span class='line'>      <span class="l-Scalar-Plain">when</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">host | success</span>
</span><span class='line'>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="s">&quot;ユーザ名&quot;</span>
</span><span class='line'>      <span class="l-Scalar-Plain">shell</span><span class="p-Indicator">:</span>    <span class="l-Scalar-Plain">whoami</span>
</span><span class='line'>      <span class="l-Scalar-Plain">register</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">user</span>
</span><span class='line'>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">debug</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">var=user.stdout_lines</span>
</span><span class='line'>      <span class="l-Scalar-Plain">when</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">user | success</span>
</span></code></pre></td></tr></table></div></figure>


<p>playbook の実行前に syntax check (構文の確認)をする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>ansible-playbook -i sample_hosts sample_playbook.yml --syntax-check
</span><span class='line'>
</span><span class='line'>playbook: sample-playbook.yml
</span></code></pre></td></tr></table></div></figure>


<p>次に playbook を dry-run。
実行する前に何が変更されるか、特に、実行時に消えてしまうリソースや入れ替わるリソースを知りたい場合に有効。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>ansible-playbook -i sample_hosts sample_playbook.yml --check
</span><span class='line'>--- snip ---
</span></code></pre></td></tr></table></div></figure>


<p>Playbook を実行する。<code>--step</code> オプションを付けると、タスク単位にステップ実行もできる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>ansible-playbook -i sample_hosts sample_playbook.yml
</span><span class='line'>
</span><span class='line'>PLAY <span class="o">[</span>fujiko<span class="o">]</span> ********************************************************************
</span><span class='line'>
</span><span class='line'>GATHERING FACTS ***************************************************************
</span><span class='line'>ok: <span class="o">[</span>doraemon<span class="o">]</span>
</span><span class='line'>ok: <span class="o">[</span>nobita<span class="o">]</span>
</span><span class='line'>ok: <span class="o">[</span>shizuka<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>TASK: <span class="o">[</span>死活確認<span class="o">]</span> **********************************************************
</span><span class='line'>ok: <span class="o">[</span>nobita<span class="o">]</span>
</span><span class='line'>ok: <span class="o">[</span>doraemon<span class="o">]</span>
</span><span class='line'>ok: <span class="o">[</span>shizuka<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>TASK: <span class="o">[</span>ホスト名<span class="o">]</span> **********************************************************
</span><span class='line'>changed: <span class="o">[</span>nobita<span class="o">]</span>
</span><span class='line'>changed: <span class="o">[</span>doraemon<span class="o">]</span>
</span><span class='line'>changed: <span class="o">[</span>shizuka<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>TASK: <span class="o">[</span>debug <span class="nv">var</span><span class="o">=</span>host.stdout_lines<span class="o">]</span> *******************************************
</span><span class='line'>ok: <span class="o">[</span>nobita<span class="o">]</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;var&quot;</span>: <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;host.stdout_lines&quot;</span>: <span class="o">[</span>
</span><span class='line'>            <span class="s2">&quot;nobita&quot;</span>
</span><span class='line'>        <span class="o">]</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>ok: <span class="o">[</span>doraemon<span class="o">]</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;var&quot;</span>: <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;host.stdout_lines&quot;</span>: <span class="o">[</span>
</span><span class='line'>            <span class="s2">&quot;doraemon&quot;</span>
</span><span class='line'>        <span class="o">]</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>ok: <span class="o">[</span>shizuka<span class="o">]</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;var&quot;</span>: <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;host.stdout_lines&quot;</span>: <span class="o">[</span>
</span><span class='line'>            <span class="s2">&quot;shizuka&quot;</span>
</span><span class='line'>        <span class="o">]</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>TASK: <span class="o">[</span>ユーザ名<span class="o">]</span> **********************************************************
</span><span class='line'>changed: <span class="o">[</span>nobita<span class="o">]</span>
</span><span class='line'>changed: <span class="o">[</span>doraemon<span class="o">]</span>
</span><span class='line'>changed: <span class="o">[</span>shizuka<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>TASK: <span class="o">[</span>debug <span class="nv">var</span><span class="o">=</span>user.stdout_lines<span class="o">]</span> *******************************************
</span><span class='line'>ok: <span class="o">[</span>nobita<span class="o">]</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;var&quot;</span>: <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;user.stdout_lines&quot;</span>: <span class="o">[</span>
</span><span class='line'>            <span class="s2">&quot;momota&quot;</span>
</span><span class='line'>        <span class="o">]</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>ok: <span class="o">[</span>doraemon<span class="o">]</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;var&quot;</span>: <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;user.stdout_lines&quot;</span>: <span class="o">[</span>
</span><span class='line'>            <span class="s2">&quot;momota&quot;</span>
</span><span class='line'>        <span class="o">]</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>ok: <span class="o">[</span>shizuka<span class="o">]</span> <span class="o">=</span>&gt; <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;var&quot;</span>: <span class="o">{</span>
</span><span class='line'>        <span class="s2">&quot;user.stdout_lines&quot;</span>: <span class="o">[</span>
</span><span class='line'>            <span class="s2">&quot;momota&quot;</span>
</span><span class='line'>        <span class="o">]</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>PLAY RECAP ********************************************************************
</span><span class='line'>doraemon                   : <span class="nv">ok</span><span class="o">=</span>6    <span class="nv">changed</span><span class="o">=</span>2    <span class="nv">unreachable</span><span class="o">=</span>0    <span class="nv">failed</span><span class="o">=</span>0
</span><span class='line'>nobita                     : <span class="nv">ok</span><span class="o">=</span>6    <span class="nv">changed</span><span class="o">=</span>2    <span class="nv">unreachable</span><span class="o">=</span>0    <span class="nv">failed</span><span class="o">=</span>0
</span><span class='line'>shizuka                    : <span class="nv">ok</span><span class="o">=</span>6    <span class="nv">changed</span><span class="o">=</span>2    <span class="nv">unreachable</span><span class="o">=</span>0    <span class="nv">failed</span><span class="o">=</span>0
</span></code></pre></td></tr></table></div></figure>


<p>playbook は role という単位で分割可能。再利用性が高くなり、1 つ 1 つの playbook の
見通しも良くなるなるので、相互に関係のないタスクは分離していくほうが望ましい。</p>

<p>大規模な環境用に、<a href="http://docs.ansible.com/ansible/playbooks_best_practices.html">Best practices</a> が示されているので、ご参考に。</p>

<h1>システム情報を利用する: Facts</h1>

<p>Playbook 実行結果に「GATHERING FACTS」と出力されている。
これは対象サーバから情報を収集する処理。たとえば、リモートサーバのIPアドレスや
OS名などのシステム情報を、Playbook 中で変数として扱うことができる。</p>

<p>次のように <code>setup</code> モジュールにより、どんな変数が利用可能かを確認することができる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="err">$</span> <span class="err">ansible</span> <span class="err">some-host</span> <span class="err">-m</span> <span class="err">setup</span>
</span><span class='line'><span class="s2">&quot;ansible_all_ipv4_addresses&quot;</span><span class="err">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="s2">&quot;REDACTED IP ADDRESS&quot;</span>
</span><span class='line'><span class="p">]</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_all_ipv6_addresses&quot;</span><span class="err">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="s2">&quot;REDACTED IPV6 ADDRESS&quot;</span>
</span><span class='line'><span class="p">]</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_architecture&quot;</span><span class="err">:</span> <span class="s2">&quot;x86_64&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_bios_date&quot;</span><span class="err">:</span> <span class="s2">&quot;09/20/2012&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_bios_version&quot;</span><span class="err">:</span> <span class="s2">&quot;6.00&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_cmdline&quot;</span><span class="err">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;BOOT_IMAGE&quot;</span><span class="p">:</span> <span class="s2">&quot;/boot/vmlinuz-3.5.0-23-generic&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;quiet&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;ro&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;root&quot;</span><span class="p">:</span> <span class="s2">&quot;UUID=4195bff4-e157-4e41-8701-e93f0aec9e22&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;splash&quot;</span><span class="p">:</span> <span class="kc">true</span>
</span><span class='line'><span class="p">}</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_date_time&quot;</span><span class="err">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;date&quot;</span><span class="p">:</span> <span class="s2">&quot;2013-10-02&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;day&quot;</span><span class="p">:</span> <span class="s2">&quot;02&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;epoch&quot;</span><span class="p">:</span> <span class="s2">&quot;1380756810&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;hour&quot;</span><span class="p">:</span> <span class="s2">&quot;19&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;iso8601&quot;</span><span class="p">:</span> <span class="s2">&quot;2013-10-02T23:33:30Z&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;iso8601_micro&quot;</span><span class="p">:</span> <span class="s2">&quot;2013-10-02T23:33:30.036070Z&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;minute&quot;</span><span class="p">:</span> <span class="s2">&quot;33&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;month&quot;</span><span class="p">:</span> <span class="s2">&quot;10&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;second&quot;</span><span class="p">:</span> <span class="s2">&quot;30&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;time&quot;</span><span class="p">:</span> <span class="s2">&quot;19:33:30&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;tz&quot;</span><span class="p">:</span> <span class="s2">&quot;EDT&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;year&quot;</span><span class="p">:</span> <span class="s2">&quot;2013&quot;</span>
</span><span class='line'><span class="p">}</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_default_ipv4&quot;</span><span class="err">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;address&quot;</span><span class="p">:</span> <span class="s2">&quot;REDACTED&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;alias&quot;</span><span class="p">:</span> <span class="s2">&quot;eth0&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;gateway&quot;</span><span class="p">:</span> <span class="s2">&quot;REDACTED&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;interface&quot;</span><span class="p">:</span> <span class="s2">&quot;eth0&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;macaddress&quot;</span><span class="p">:</span> <span class="s2">&quot;REDACTED&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;mtu&quot;</span><span class="p">:</span> <span class="mi">1500</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;netmask&quot;</span><span class="p">:</span> <span class="s2">&quot;255.255.255.0&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;network&quot;</span><span class="p">:</span> <span class="s2">&quot;REDACTED&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;ether&quot;</span>
</span><span class='line'><span class="p">}</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_default_ipv6&quot;</span><span class="err">:</span> <span class="p">{}</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_devices&quot;</span><span class="err">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;fd0&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;holders&quot;</span><span class="p">:</span> <span class="p">[],</span>
</span><span class='line'>        <span class="nt">&quot;host&quot;</span><span class="p">:</span> <span class="s2">&quot;&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;model&quot;</span><span class="p">:</span> <span class="kc">null</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;partitions&quot;</span><span class="p">:</span> <span class="p">{},</span>
</span><span class='line'>        <span class="nt">&quot;removable&quot;</span><span class="p">:</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;rotational&quot;</span><span class="p">:</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;scheduler_mode&quot;</span><span class="p">:</span> <span class="s2">&quot;deadline&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;sectors&quot;</span><span class="p">:</span> <span class="s2">&quot;0&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;sectorsize&quot;</span><span class="p">:</span> <span class="s2">&quot;512&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;size&quot;</span><span class="p">:</span> <span class="s2">&quot;0.00 Bytes&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;support_discard&quot;</span><span class="p">:</span> <span class="s2">&quot;0&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;vendor&quot;</span><span class="p">:</span> <span class="kc">null</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;sda&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;holders&quot;</span><span class="p">:</span> <span class="p">[],</span>
</span><span class='line'>        <span class="nt">&quot;host&quot;</span><span class="p">:</span> <span class="s2">&quot;SCSI storage controller: LSI Logic / Symbios Logic 53c1030 PCI-X Fusion-MPT Dual Ultra320 SCSI (rev 01)&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;model&quot;</span><span class="p">:</span> <span class="s2">&quot;VMware Virtual S&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;partitions&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;sda1&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="nt">&quot;sectors&quot;</span><span class="p">:</span> <span class="s2">&quot;39843840&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="nt">&quot;sectorsize&quot;</span><span class="p">:</span> <span class="mi">512</span><span class="p">,</span>
</span><span class='line'>                <span class="nt">&quot;size&quot;</span><span class="p">:</span> <span class="s2">&quot;19.00 GB&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="nt">&quot;start&quot;</span><span class="p">:</span> <span class="s2">&quot;2048&quot;</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>            <span class="nt">&quot;sda2&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="nt">&quot;sectors&quot;</span><span class="p">:</span> <span class="s2">&quot;2&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="nt">&quot;sectorsize&quot;</span><span class="p">:</span> <span class="mi">512</span><span class="p">,</span>
</span><span class='line'>                <span class="nt">&quot;size&quot;</span><span class="p">:</span> <span class="s2">&quot;1.00 KB&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="nt">&quot;start&quot;</span><span class="p">:</span> <span class="s2">&quot;39847934&quot;</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>            <span class="nt">&quot;sda5&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>                <span class="nt">&quot;sectors&quot;</span><span class="p">:</span> <span class="s2">&quot;2093056&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="nt">&quot;sectorsize&quot;</span><span class="p">:</span> <span class="mi">512</span><span class="p">,</span>
</span><span class='line'>                <span class="nt">&quot;size&quot;</span><span class="p">:</span> <span class="s2">&quot;1022.00 MB&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="nt">&quot;start&quot;</span><span class="p">:</span> <span class="s2">&quot;39847936&quot;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nt">&quot;removable&quot;</span><span class="p">:</span> <span class="s2">&quot;0&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;rotational&quot;</span><span class="p">:</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;scheduler_mode&quot;</span><span class="p">:</span> <span class="s2">&quot;deadline&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;sectors&quot;</span><span class="p">:</span> <span class="s2">&quot;41943040&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;sectorsize&quot;</span><span class="p">:</span> <span class="s2">&quot;512&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;size&quot;</span><span class="p">:</span> <span class="s2">&quot;20.00 GB&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;support_discard&quot;</span><span class="p">:</span> <span class="s2">&quot;0&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;vendor&quot;</span><span class="p">:</span> <span class="s2">&quot;VMware,&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;sr0&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;holders&quot;</span><span class="p">:</span> <span class="p">[],</span>
</span><span class='line'>        <span class="nt">&quot;host&quot;</span><span class="p">:</span> <span class="s2">&quot;IDE interface: Intel Corporation 82371AB/EB/MB PIIX4 IDE (rev 01)&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;model&quot;</span><span class="p">:</span> <span class="s2">&quot;VMware IDE CDR10&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;partitions&quot;</span><span class="p">:</span> <span class="p">{},</span>
</span><span class='line'>        <span class="nt">&quot;removable&quot;</span><span class="p">:</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;rotational&quot;</span><span class="p">:</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;scheduler_mode&quot;</span><span class="p">:</span> <span class="s2">&quot;deadline&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;sectors&quot;</span><span class="p">:</span> <span class="s2">&quot;2097151&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;sectorsize&quot;</span><span class="p">:</span> <span class="s2">&quot;512&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;size&quot;</span><span class="p">:</span> <span class="s2">&quot;1024.00 MB&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;support_discard&quot;</span><span class="p">:</span> <span class="s2">&quot;0&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;vendor&quot;</span><span class="p">:</span> <span class="s2">&quot;NECVMWar&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_distribution&quot;</span><span class="err">:</span> <span class="s2">&quot;Ubuntu&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_distribution_release&quot;</span><span class="err">:</span> <span class="s2">&quot;precise&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_distribution_version&quot;</span><span class="err">:</span> <span class="s2">&quot;12.04&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_domain&quot;</span><span class="err">:</span> <span class="s2">&quot;&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_env&quot;</span><span class="err">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;COLORTERM&quot;</span><span class="p">:</span> <span class="s2">&quot;gnome-terminal&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;DISPLAY&quot;</span><span class="p">:</span> <span class="s2">&quot;:0&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;HOME&quot;</span><span class="p">:</span> <span class="s2">&quot;/home/mdehaan&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;LANG&quot;</span><span class="p">:</span> <span class="s2">&quot;C&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;LESSCLOSE&quot;</span><span class="p">:</span> <span class="s2">&quot;/usr/bin/lesspipe %s %s&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;LESSOPEN&quot;</span><span class="p">:</span> <span class="s2">&quot;| /usr/bin/lesspipe %s&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;LOGNAME&quot;</span><span class="p">:</span> <span class="s2">&quot;root&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;LS_COLORS&quot;</span><span class="p">:</span> <span class="s2">&quot;rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lz=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;MAIL&quot;</span><span class="p">:</span> <span class="s2">&quot;/var/mail/root&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;OLDPWD&quot;</span><span class="p">:</span> <span class="s2">&quot;/root/ansible/docsite&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;PATH&quot;</span><span class="p">:</span> <span class="s2">&quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;PWD&quot;</span><span class="p">:</span> <span class="s2">&quot;/root/ansible&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;SHELL&quot;</span><span class="p">:</span> <span class="s2">&quot;/bin/bash&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;SHLVL&quot;</span><span class="p">:</span> <span class="s2">&quot;1&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;SUDO_COMMAND&quot;</span><span class="p">:</span> <span class="s2">&quot;/bin/bash&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;SUDO_GID&quot;</span><span class="p">:</span> <span class="s2">&quot;1000&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;SUDO_UID&quot;</span><span class="p">:</span> <span class="s2">&quot;1000&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;SUDO_USER&quot;</span><span class="p">:</span> <span class="s2">&quot;mdehaan&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;TERM&quot;</span><span class="p">:</span> <span class="s2">&quot;xterm&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;USER&quot;</span><span class="p">:</span> <span class="s2">&quot;root&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;USERNAME&quot;</span><span class="p">:</span> <span class="s2">&quot;root&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;XAUTHORITY&quot;</span><span class="p">:</span> <span class="s2">&quot;/home/mdehaan/.Xauthority&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;_&quot;</span><span class="p">:</span> <span class="s2">&quot;/usr/local/bin/ansible&quot;</span>
</span><span class='line'><span class="p">}</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_eth0&quot;</span><span class="err">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;active&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;device&quot;</span><span class="p">:</span> <span class="s2">&quot;eth0&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;ipv4&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;address&quot;</span><span class="p">:</span> <span class="s2">&quot;REDACTED&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;netmask&quot;</span><span class="p">:</span> <span class="s2">&quot;255.255.255.0&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;network&quot;</span><span class="p">:</span> <span class="s2">&quot;REDACTED&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;ipv6&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;address&quot;</span><span class="p">:</span> <span class="s2">&quot;REDACTED&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;prefix&quot;</span><span class="p">:</span> <span class="s2">&quot;64&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;scope&quot;</span><span class="p">:</span> <span class="s2">&quot;link&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">],</span>
</span><span class='line'>    <span class="nt">&quot;macaddress&quot;</span><span class="p">:</span> <span class="s2">&quot;REDACTED&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;module&quot;</span><span class="p">:</span> <span class="s2">&quot;e1000&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;mtu&quot;</span><span class="p">:</span> <span class="mi">1500</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;ether&quot;</span>
</span><span class='line'><span class="p">}</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_form_factor&quot;</span><span class="err">:</span> <span class="s2">&quot;Other&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_fqdn&quot;</span><span class="err">:</span> <span class="s2">&quot;ubuntu2.example.com&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_hostname&quot;</span><span class="err">:</span> <span class="s2">&quot;ubuntu2&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_interfaces&quot;</span><span class="err">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="s2">&quot;lo&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;eth0&quot;</span>
</span><span class='line'><span class="p">]</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_kernel&quot;</span><span class="err">:</span> <span class="s2">&quot;3.5.0-23-generic&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_lo&quot;</span><span class="err">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;active&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;device&quot;</span><span class="p">:</span> <span class="s2">&quot;lo&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;ipv4&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;address&quot;</span><span class="p">:</span> <span class="s2">&quot;127.0.0.1&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;netmask&quot;</span><span class="p">:</span> <span class="s2">&quot;255.0.0.0&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;network&quot;</span><span class="p">:</span> <span class="s2">&quot;127.0.0.0&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nt">&quot;ipv6&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="nt">&quot;address&quot;</span><span class="p">:</span> <span class="s2">&quot;::1&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;prefix&quot;</span><span class="p">:</span> <span class="s2">&quot;128&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="nt">&quot;scope&quot;</span><span class="p">:</span> <span class="s2">&quot;host&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">],</span>
</span><span class='line'>    <span class="nt">&quot;mtu&quot;</span><span class="p">:</span> <span class="mi">16436</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;loopback&quot;</span>
</span><span class='line'><span class="p">}</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_lsb&quot;</span><span class="err">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;codename&quot;</span><span class="p">:</span> <span class="s2">&quot;precise&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;description&quot;</span><span class="p">:</span> <span class="s2">&quot;Ubuntu 12.04.2 LTS&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;id&quot;</span><span class="p">:</span> <span class="s2">&quot;Ubuntu&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;major_release&quot;</span><span class="p">:</span> <span class="s2">&quot;12&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;release&quot;</span><span class="p">:</span> <span class="s2">&quot;12.04&quot;</span>
</span><span class='line'><span class="p">}</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_machine&quot;</span><span class="err">:</span> <span class="s2">&quot;x86_64&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_memfree_mb&quot;</span><span class="err">:</span> <span class="mi">74</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_memtotal_mb&quot;</span><span class="err">:</span> <span class="mi">991</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_mounts&quot;</span><span class="err">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;device&quot;</span><span class="p">:</span> <span class="s2">&quot;/dev/sda1&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;fstype&quot;</span><span class="p">:</span> <span class="s2">&quot;ext4&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;mount&quot;</span><span class="p">:</span> <span class="s2">&quot;/&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;options&quot;</span><span class="p">:</span> <span class="s2">&quot;rw,errors=remount-ro&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;size_available&quot;</span><span class="p">:</span> <span class="mi">15032406016</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;size_total&quot;</span><span class="p">:</span> <span class="mi">20079898624</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">]</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_nodename&quot;</span><span class="err">:</span> <span class="s2">&quot;ubuntu2.example.com&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_os_family&quot;</span><span class="err">:</span> <span class="s2">&quot;Debian&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_pkg_mgr&quot;</span><span class="err">:</span> <span class="s2">&quot;apt&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_processor&quot;</span><span class="err">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="s2">&quot;Intel(R) Core(TM) i7 CPU         860  @ 2.80GHz&quot;</span>
</span><span class='line'><span class="p">]</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_processor_cores&quot;</span><span class="err">:</span> <span class="mi">1</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_processor_count&quot;</span><span class="err">:</span> <span class="mi">1</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_processor_threads_per_core&quot;</span><span class="err">:</span> <span class="mi">1</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_processor_vcpus&quot;</span><span class="err">:</span> <span class="mi">1</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_product_name&quot;</span><span class="err">:</span> <span class="s2">&quot;VMware Virtual Platform&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_product_serial&quot;</span><span class="err">:</span> <span class="s2">&quot;REDACTED&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_product_uuid&quot;</span><span class="err">:</span> <span class="s2">&quot;REDACTED&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_product_version&quot;</span><span class="err">:</span> <span class="s2">&quot;None&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_python_version&quot;</span><span class="err">:</span> <span class="s2">&quot;2.7.3&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_selinux&quot;</span><span class="err">:</span> <span class="kc">false</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_ssh_host_key_dsa_public&quot;</span><span class="err">:</span> <span class="s2">&quot;REDACTED KEY VALUE&quot;</span>
</span><span class='line'><span class="s2">&quot;ansible_ssh_host_key_ecdsa_public&quot;</span><span class="err">:</span> <span class="s2">&quot;REDACTED KEY VALUE&quot;</span>
</span><span class='line'><span class="s2">&quot;ansible_ssh_host_key_rsa_public&quot;</span><span class="err">:</span> <span class="s2">&quot;REDACTED KEY VALUE&quot;</span>
</span><span class='line'><span class="s2">&quot;ansible_swapfree_mb&quot;</span><span class="err">:</span> <span class="mi">665</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_swaptotal_mb&quot;</span><span class="err">:</span> <span class="mi">1021</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_system&quot;</span><span class="err">:</span> <span class="s2">&quot;Linux&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_system_vendor&quot;</span><span class="err">:</span> <span class="s2">&quot;VMware, Inc.&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_user_id&quot;</span><span class="err">:</span> <span class="s2">&quot;root&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_userspace_architecture&quot;</span><span class="err">:</span> <span class="s2">&quot;x86_64&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_userspace_bits&quot;</span><span class="err">:</span> <span class="s2">&quot;64&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_virtualization_role&quot;</span><span class="err">:</span> <span class="s2">&quot;guest&quot;</span><span class="err">,</span>
</span><span class='line'><span class="s2">&quot;ansible_virtualization_type&quot;</span><span class="err">:</span> <span class="s2">&quot;VMware&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>たとえば、IPアドレスは <code>{{ ansible_eth0["ipv4"]["address"] }}</code> のように、Playbook の中で変数として
扱うことができる。</p>

<p>その他、<code>facter</code> や <code>ohai</code> がリモートホストにインストールされていればそれらも利用可能。
facts よりも詳細な情報が取得できる。</p>

<p>この facts は、いまのところリモートホストが Linux でのみ動作する。
リモートホストが windows やネットワーク機器の場合は以下のように無効化できる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">hosts</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">whatever</span>
</span><span class='line'>  <span class="l-Scalar-Plain">gather_facts</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">no</span>
</span></code></pre></td></tr></table></div></figure>


<p>また、システム情報を利用しない場合も無効化することで実行時間短縮が図れる。</p>

<h1>links</h1>

<ul>
<li><a href="http(//yteraoka.github.io/ansible-tutorial/">Ansible Tutorial</a></li>
<li><a href="https(//github.com/yteraoka/ansible-tutorial/wiki/ansible-playbook%20%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89">ansible playbook コマンド オプション</a></li>
<li><a href="https(//www.ansible.com/blog/ansible-performance-tuning">Ansible Performance Tuning (for Fun and Profit)</a></li>
<li><a href="http(//tdoc.info/blog/2014/01/20/ansible_beyond_configuration.html">Ansibleのアーキテクチャー( 構成管理を超えて</a></li>
<li><a href="http(//qiita.com/yteraoka/items/5ed2bddefff32e1b9faf">Ansible オレオレベストプラクティス</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ansible で MacBook Pro をセットアップ]]></title>
    <link href="http://momota.github.io/blog/2016/08/10/ansible-mac/"/>
    <updated>2016-08-10T15:15:00+09:00</updated>
    <id>http://momota.github.io/blog/2016/08/10/ansible-mac</id>
    <content type="html"><![CDATA[<p>MacBook Pro 2700/13.3 MF839J/A を購入したので (わーい) 、構成管理ツール ansible を使ってセットアップした。</p>

<p><img src="http://momota.github.io/images/20160810_macbookpro.jpg" alt="macbook pro" /></p>

<p>t-wada さんのエントリ <a href="http://t-wada.hatenablog.jp/entry/mac-provisioning-by-ansible">Mac の開発環境構築を自動化する (2015 年初旬編) &ndash; t-wadaのブログ変更する</a>
を見れば事足りると思われるので、本稿は自分用のメモ(t-wada さんのを少しだけカスタマイズ &amp; 補足)。</p>

<p>実行環境は以下。</p>

<table>
<thead>
<tr>
<th>what    </th>
<th> version</th>
</tr>
</thead>
<tbody>
<tr>
<td>laptop  </td>
<td> MacBook Pro (Retina 13-inch, Early 2015)</td>
</tr>
<tr>
<td>OS      </td>
<td> OS X El Capitan 10.11.6</td>
</tr>
<tr>
<td>ansible </td>
<td> 2.1.1.0</td>
</tr>
</tbody>
</table>


<!-- more -->


<h1>1. 事前準備</h1>

<h2>1.1. SSH</h2>

<p>ansible では、コントローラ (Control Machine) から SSH 越しで管理対象ノード (Managed Node) を操作する。
今回は Control Machine も Managed Node も同一マシン (Macbook) なので、localhost に SSH できるようにする。</p>

<p>まず SSH の許可設定。
Mac で「システム環境設定」 > 「共有」 > 「リモートログイン」にチェック。</p>

<p>次にパスなしログインするために公開鍵を設定する。
<a href="http://momota.github.io/blog/2016/02/08/ansible/">こちらでも紹介したとおり</a>、以下のようにする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># no-pass SSH key を生成</span>
</span><span class='line'><span class="nv">$ </span>ssh-keygen -t rsa
</span><span class='line'>
</span><span class='line'><span class="c"># authorized_keysの登録</span>
</span><span class='line'><span class="nv">$ </span>cat ~/.ssh/id_dsa.pub &gt;&gt; ~/.ssh/authorized_keys
</span><span class='line'><span class="nv">$ </span>chmod 600 ~/.ssh/authorized_keys
</span><span class='line'>
</span><span class='line'><span class="c"># SSH アクセス確認</span>
</span><span class='line'><span class="nv">$ </span>ssh 127.0.0.1
</span></code></pre></td></tr></table></div></figure>


<h2>1.2. Xcode</h2>

<p>Homebrew をインストールするために必要なので、App Store から XCode をインストールする。
XCode インストール後、ライセンス同意する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo xcode build -license
</span></code></pre></td></tr></table></div></figure>


<p>ライセンス規約みたいな文章がつらつらと出てくるので、最後に「agree」と入力する。</p>

<p>XCode のコマンドラインツールもインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>xcode-select --install
</span></code></pre></td></tr></table></div></figure>


<h2>1.3. Homebrew</h2>

<p>Homebrew は Mac 用のパッケージマネージャ (yum とか apt 的なやつ。
Homebrew って、ホームブリューと読んでいるけどホームブルーのほうが正しい発音ぽい)。</p>

<p><a href="http://brew.sh/index_ja.html">公式サイト</a>の案内に従い、以下のワンライナーで Homebrew をインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>/usr/bin/ruby -e <span class="s2">&quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記ワンライナーでインストールするとたぶん最新版がインストールされるが、インストール後 <code>brew doctor</code> で古いと出力されたらアップデートする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>brew doctor
</span><span class='line'><span class="nv">$ </span>brew update
</span></code></pre></td></tr></table></div></figure>


<h2>1.4. Ansible</h2>

<p>Ansible に必要な python はすでに 2.7 系がプリインストールされていたので、
そのまま Homebrew で Ansible をインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>brew install ansible
</span><span class='line'><span class="nv">$ </span>ansible --version
</span></code></pre></td></tr></table></div></figure>


<h1>2. Ansible Playbook を開発する</h1>

<p>前回の <a href="http://momota.github.io/blog/2016/02/08/ansible/">Ansible でノート PC をセットアップ</a> で作った仕組みにのせる。</p>

<p>t-wada さんの場合、1 枚の Playbook に変数やタスクを記述していたが、ありものは活用したいという思いがあり。</p>

<p>今回は以下のようなアレンジをした。</p>

<ul>
<li>インストールするパッケージを列挙した変数を <code>vars/common.yml</code> に切り出す</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="c1"># for MacOSX</span>
</span><span class='line'><span class="l-Scalar-Plain">homebrew_taps</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">homebrew/versions</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">homebrew/binary</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">homebrew/dupes</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">caskroom/cask</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">sanemat/font</span>
</span><span class='line'><span class="l-Scalar-Plain">homebrew_packages</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="p-Indicator">{</span> <span class="nv">name</span><span class="p-Indicator">:</span> <span class="nv">readline</span> <span class="p-Indicator">}</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="p-Indicator">{</span> <span class="nv">name</span><span class="p-Indicator">:</span> <span class="nv">openssl</span> <span class="p-Indicator">}</span>
</span><span class='line'>  <span class="c1"># (略)</span>
</span><span class='line'><span class="l-Scalar-Plain">homebrew_cask_packages</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="p-Indicator">{</span> <span class="nv">name</span><span class="p-Indicator">:</span> <span class="nv">iterm2</span> <span class="p-Indicator">}</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="p-Indicator">{</span> <span class="nv">name</span><span class="p-Indicator">:</span> <span class="nv">firefox</span> <span class="p-Indicator">}</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="p-Indicator">{</span> <span class="nv">name</span><span class="p-Indicator">:</span> <span class="nv">google-chrome</span> <span class="p-Indicator">}</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="p-Indicator">{</span> <span class="nv">name</span><span class="p-Indicator">:</span> <span class="nv">google-japanese-ime</span> <span class="p-Indicator">}</span>
</span><span class='line'>  <span class="c1"># (略)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>CentOS などへもインストールするような共通のパッケージは <code>common/</code> 以下の role を利用する

<ul>
<li>今回は tmux とzsh のみ</li>
</ul>
</li>
<li>Mac 固有のタスクは、<code>mac/</code> 以下に切り出す

<ul>
<li>brew (cask も) 用のrole を作る</li>
<li>ricty フォントインストールは個別の処理が多かったため別の role で切り出す</li>
</ul>
</li>
<li>インベントリファイル <code>hosts</code> に mac 用グループ <code>[mac]</code> を作る</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'><span class="k">[mac]</span>
</span><span class='line'><span class="err">127.0.0.1</span>
</span></code></pre></td></tr></table></div></figure>


<p>ディレクトリ構造は以下のようになった。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'><span class="err">└──</span> <span class="err">laptop-build</span>
</span><span class='line'>    <span class="err">├──</span> <span class="err">centos</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">├──</span> <span class="err">docker</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">│  </span> <span class="err">├──</span> <span class="err">files</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">│  </span> <span class="err">└──</span> <span class="err">tasks</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">└──</span> <span class="err">yum</span>
</span><span class='line'>    <span class="err">│  </span>     <span class="err">└──</span> <span class="err">tasks</span>
</span><span class='line'>    <span class="err">├──</span> <span class="err">common</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">├──</span> <span class="err">dotfiles</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">│  </span> <span class="err">├──</span> <span class="err">meta</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">│  </span> <span class="err">└──</span> <span class="err">tasks</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">├──</span> <span class="err">dstat</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">│  </span> <span class="err">└──</span> <span class="err">tasks</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">├──</span> <span class="err">guest_account</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">│  </span> <span class="err">└──</span> <span class="err">tasks</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">├──</span> <span class="err">ruby</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">│  </span> <span class="err">├──</span> <span class="err">meta</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">│  </span> <span class="err">└──</span> <span class="err">tasks</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">├──</span> <span class="err">tmux</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">│  </span> <span class="err">└──</span> <span class="err">tasks</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">├──</span> <span class="err">vim</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">│  </span> <span class="err">└──</span> <span class="err">tasks</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">└──</span> <span class="err">zsh</span>
</span><span class='line'>    <span class="err">│  </span>     <span class="err">└──</span> <span class="err">tasks</span>
</span><span class='line'>    <span class="err">├──</span> <span class="err">mac</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">├──</span> <span class="err">brew</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">│  </span> <span class="err">└──</span> <span class="err">tasks</span>
</span><span class='line'>    <span class="err">│  </span> <span class="err">└──</span> <span class="err">ricty</span>
</span><span class='line'>    <span class="err">│  </span>     <span class="err">├──</span> <span class="err">handlers</span>
</span><span class='line'>    <span class="err">│  </span>     <span class="err">└──</span> <span class="err">tasks</span>
</span><span class='line'>    <span class="err">└──</span> <span class="err">vars</span>
</span></code></pre></td></tr></table></div></figure>


<p>できあがった Playbook は Github にあげた。 <a href="https://github.com/momota/laptop-build">momota/laptop-build</a></p>

<h1>3. Ansible を実行する</h1>

<h2>3.1. ansible のログ出力設定</h2>

<p><code>tee</code> とかを使って Playbook の実行出力結果をファイルに保存しようと思ったが、ansible のログ機能を使った。
<code>ansible.cfg</code> に以下を記述。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'><span class="k">[defaults]</span>
</span><span class='line'><span class="na">log_path</span><span class="o">=</span><span class="s">/var/log/ansible.log</span>
</span></code></pre></td></tr></table></div></figure>


<p>mac の場合、<code>/etc/ansible/ansible.cfg</code> がなかった (ディレクトリごとない) ので、<code>~/.ansible.cfg</code> を作成した。</p>

<h2>3.2. ansible の実行</h2>

<p>absible-playbook コマンドで実行する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># git clone</span>
</span><span class='line'><span class="nv">$ </span>git clone https://github.com/momota/laptop-build
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>laptop-build
</span><span class='line'>
</span><span class='line'><span class="c"># execute playbook</span>
</span><span class='line'><span class="nv">$ HOMEBREW_CASK_OPTS</span><span class="o">=</span><span class="s2">&quot;--appdir=/Applications&quot;</span> ansible-playbook -i hosts mac/site.yml -vv -K
</span></code></pre></td></tr></table></div></figure>


<p><code>HOMEBREW_CASK_OPTS="--appdir=/Applications"</code> をつけないと、アプリケーションによって <code>/Applications</code> だったり、 <code>~/Applications</code> だったりにシンボリックリンクリンクが作られてしまうとのこと。</p>

<p>ログインシェルを zsh に変更するタスクで <code>sudo</code> するので、<code>-K</code> オプション付き。</p>

<h1>4. Playbook のトラブルフォロー</h1>

<h2>4.1. shell モジュールでcommand not found</h2>

<p>Playbook をコピペして実行したら、shell モジュールで <code>brew</code> を呼んでいるタスクから
<code>command not found</code> エラーが返ってきた。
フルパスで指定し直す。</p>

<h2>4.2. cask パッケージ名の誤り</h2>

<p><code>/vars/common.yml</code> にインストールしたい cask パッケージ名を定義するが、パッケージ名を謝って途中で処理がこけた。
もちろんググっても良いと思うが、事前に以下のコマンドなどで調べるとよさそう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>brew cask search <span class="o">[</span>探したいパッケージ<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<h2>4.3. cask インストールの処理停止</h2>

<p>Homebrew cask でパッケージインストール途中で処理が止まることがあった。(2, 3回)
どんなに待っても止まったままなので、 <code>Ctrl-c</code> で中断する。</p>

<p>ansible-playbook コマンドに <code>-vvv</code> オプションなどを付けるも、原因はよく分からず。
たぶん、ansible ではなく brew 側に原因がありそう。</p>

<p>インストール処理で止まっているパッケージは、ansible で表示されているパッケージの、<code>vars/common.yml</code> での変数定義上の次のパッケージ。
途中で止まっているパッケージもインストール一覧に出力される。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>brew cask list
</span><span class='line'><span class="c">#=&gt; インストール処理中のパッケージも出力される</span>
</span></code></pre></td></tr></table></div></figure>


<p>リストには表示されるものの、中途半端にインストールされていそうなので、
<code>brew</code> コマンドでインストールし直して Playbook を再実行する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>brew cask install --force <span class="o">[</span>途中で止まったパッケージ<span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="c"># アンインストールして、再インストールしても良いかも</span>
</span><span class='line'><span class="c">#   $ brew cask uninstall [途中で止まったパッケージ]</span>
</span><span class='line'><span class="c">#   $ brew cask install [途中で止まったパッケージ]</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ HOMEBREW_CASK_OPTS</span><span class="o">=</span><span class="s2">&quot;--appdir=/Applications&quot;</span> ansible-playbook -i hosts mac/site.yml -vv -K
</span></code></pre></td></tr></table></div></figure>


<p>なにも考えずに re-run できるのはうれしい。 (これが冪等性のパワーか)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ネットワークエンジニアのための cisco.vim]]></title>
    <link href="http://momota.github.io/blog/2016/06/24/cisco-dot-vim/"/>
    <updated>2016-06-24T16:42:00+09:00</updated>
    <id>http://momota.github.io/blog/2016/06/24/cisco-dot-vim</id>
    <content type="html"><![CDATA[<p>ネットワークエンジニアのみなさん、こんにちは。</p>

<p><a href="http://momota.github.io/blog/2016/06/22/junos-dot-vim/">ネットワークエンジニアのための junos.vim</a> の cisco バージョンです。</p>

<p>cisco の configuration をカラーリングする vim プラグイン
<a href="https://github.com/momota/cisco.vim">momota/cisco.vim</a> を作ったのでご活用下さい。</p>

<p>対象は、cisco ルータと Catalyst スイッチ、Nexus スイッチです。</p>

<p>色を付けることによって、configuration の解釈を手助けしたり、
configuration 作成時のミスに気づきやすくしたりする効果が期待できます。
(誤ったタームを入力すると色が付かないので)</p>

<p>以下のようにカラーリングします。 (colorscheme は molokai)</p>

<h2>before</h2>

<p><img src="http://momota.github.io/images/20160624_cisco-config_before.png" alt="display_before" /></p>

<h2>after</h2>

<p><img src="http://momota.github.io/images/20160624_cisco-config_after.png" alt="display_after" /></p>

<!-- more -->


<h2>インストール</h2>

<p>NeoBundle で vim プラグインを管理している人は以下の行を<code>.vimrc</code> に追加して</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'>NeoBundle <span class="s1">&#39;momota/cisco.vim&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>:NeoBundleInstall</code> でインストールする。</p>

<p>その他は、<a href="https://github.com/momota/cisco.vim#installation">README/Installation</a> を参照。</p>

<h2>使い方</h2>

<p>cisco config ファイルを <code>.cisco</code> という拡張子で保存して vim で開くか、
cisco config ファイルの先頭に以下行を追加して保存し vim で開くと色付けしてくれる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'><span class="p">!</span> <span class="k">vim</span>: <span class="k">set</span> <span class="nb">ft</span><span class="p">=</span>cisco:
</span></code></pre></td></tr></table></div></figure>


<p>もしくは、cisco config ファイルを vim 開いている時に <code>:set ft=cisco</code> を実行する。</p>

<h1>関連</h1>

<ul>
<li><a href="http://momota.github.io/blog/2016/06/22/junos-dot-vim/">ネットワークエンジニアのための junos.vim</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ネットワークエンジニアのための junos.vim]]></title>
    <link href="http://momota.github.io/blog/2016/06/22/junos-dot-vim/"/>
    <updated>2016-06-22T10:57:00+09:00</updated>
    <id>http://momota.github.io/blog/2016/06/22/junos-dot-vim</id>
    <content type="html"><![CDATA[<p>ネットワークエンジニアのみなさん、こんにちは。</p>

<p>Juniper の configuration をカラーリングする vim プラグイン
<a href="https://github.com/momota/junos.vim">momota/junos.vim</a> を作ったのでご活用下さい。</p>

<p>対象は、Juniper EX シリーズとSRX シリーズです。</p>

<p>色を付けることによって、junos configuration の解釈を手助けしたり、
configuration 作成時のミスに気づきやすくしたりする効果が期待できます。
(誤ったタームを入力すると色が付かないので)</p>

<p>以下のようにカラーリングします。 (colorscheme は molokai)</p>

<h2>before</h2>

<p><img src="http://momota.github.io/images/20160622_junos-confg_before.png" alt="display_before" /></p>

<h2>after</h2>

<p><img src="http://momota.github.io/images/20160622_junos-confg_after.png" alt="display_after" /></p>

<h2>before: <code>display set</code> モード</h2>

<p><img src="http://momota.github.io/images/20160622_junos-confg-set_before.png" alt="display-set_before" /></p>

<h2>after: <code>display set</code> モード</h2>

<p><img src="http://momota.github.io/images/20160622_junos-confg-set_after.png" alt="display-set_after" /></p>

<p>cisco 版はこちら <a href="http://momota.github.io/blog/2016/06/24/cisco-dot-vim/">ネットワークエンジニアのための cisco.vim</a></p>

<!-- more -->


<h2>インストール</h2>

<p>NeoBundle で vim プラグインを管理している人は以下の行を<code>.vimrc</code> に追加して</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'>NeoBundle <span class="s1">&#39;momota/junos.vim&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>:NeoBundleInstall</code> でインストールする。</p>

<p>その他は、<a href="https://github.com/momota/junos.vim#installation">README/Installation</a> を参照。</p>

<h2>使い方</h2>

<p>juniper config ファイルを <code>.junos</code> という拡張子で保存して vim で開くか、
juniper config ファイルの先頭に以下行を追加して保存し vim で開くと色付けしてくれる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># vim: set ft=junos:</span>
</span></code></pre></td></tr></table></div></figure>


<p>もしくは、juniper config ファイルを vim 開いている時に <code>:set ft=junos</code> を実行する。</p>

<h1>関連</h1>

<ul>
<li><a href="http://momota.github.io/blog/2016/06/24/cisco-dot-vim/">ネットワークエンジニアのための cisco.vim</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RuboCop でコーディングスタイルを矯正する]]></title>
    <link href="http://momota.github.io/blog/2016/06/17/rubocop/"/>
    <updated>2016-06-17T17:30:00+09:00</updated>
    <id>http://momota.github.io/blog/2016/06/17/rubocop</id>
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/bbatsov/rubocop/master/logo/rubo-logo-horizontal.png" alt="RuboCop Logo" /></p>

<p><a href="http://note103.hateblo.jp/entry/2016/06/13/074744">textlintで日本語テキストの文字校正を試してみた</a> とかで、lint 系の記事を目にしたので
そろそろ導入してみるか、と思い立った。</p>

<p>RuboCop はRuby の静的コードアナライザ。
<a href="https://github.com/bbatsov/rubocop">bbatsov/rubocop</a></p>

<p><a href="https://github.com/bbatsov/ruby-style-guide">The Ruby Style Guide</a> に沿ったコーディングスタイルに矯正(注意)してくれる。
無駄なスペースが入力されている、とか、無駄な改行が入っている、とか、
この変数1度も使われてないよ?とかクラスの中の行数が多すぎる、とか、
1行の文字数が長すぎる、とか。</p>

<p>大人数で開発していると細かなコーディングスタイルを合わせるだけでも面倒なので
こういうツールによって人間が矯正されると AI 時代に思いを馳せることができて良い感じですね。</p>

<!-- more -->


<h2>RuboCop インストール</h2>

<p>gem でインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>gem install rubocop
</span><span class='line'><span class="nv">$ </span>rubocop -v
</span><span class='line'>0.40.0
</span></code></pre></td></tr></table></div></figure>


<p>実行は<code>rubocop</code> コマンドにチェックしたいスクリプトを渡す。
例えば、以下のような Ruby スクリプトを</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># conding: utf-8</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;date&quot;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">SampleRubocop</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span> <span class="n">key</span> <span class="p">)</span>
</span><span class='line'>    <span class="vi">@key</span> <span class="o">=</span> <span class="n">key</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">hey</span>
</span><span class='line'>    <span class="vi">@key</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="bp">__FILE__</span> <span class="o">==</span> <span class="vg">$0</span>
</span><span class='line'>  <span class="n">hoge</span> <span class="o">=</span> <span class="no">SampleRubocop</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;hoge&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">p</span> <span class="n">hoge</span><span class="o">.</span><span class="n">hey</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>RuboCop でチェックすると以下のような感じで注意を受ける。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">rubocop</span> <span class="n">sample_rubocop</span><span class="o">.</span><span class="n">rb</span>
</span><span class='line'><span class="no">Inspecting</span> <span class="mi">1</span> <span class="n">file</span>
</span><span class='line'><span class="n">C</span>
</span><span class='line'>
</span><span class='line'><span class="ss">Offenses</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'><span class="n">sample_rubocop</span><span class="o">.</span><span class="n">rb</span><span class="p">:</span><span class="mi">2</span><span class="p">:</span><span class="mi">9</span><span class="p">:</span> <span class="ss">C</span><span class="p">:</span> <span class="no">Prefer</span> <span class="n">single</span><span class="o">-</span><span class="n">quoted</span> <span class="n">strings</span> <span class="k">when</span> <span class="n">you</span> <span class="n">don</span><span class="s1">&#39;t need string interpolation or special symbols.</span>
</span><span class='line'><span class="s1">require &quot;date&quot;</span>
</span><span class='line'><span class="s1">        ^^^^^^</span>
</span><span class='line'><span class="s1">sample_rubocop.rb:4:1: C: Extra blank line detected.</span>
</span><span class='line'><span class="s1">sample_rubocop.rb:5:1: C: Missing top-level class documentation comment.</span>
</span><span class='line'><span class="s1">class SampleRubocop</span>
</span><span class='line'><span class="s1">^^^^^</span>
</span><span class='line'><span class="s1">sample_rubocop.rb:6:18: C: Space inside parentheses detected.</span>
</span><span class='line'><span class="s1">  def initialize( key )</span>
</span><span class='line'><span class="s1">                 ^</span>
</span><span class='line'><span class="s1">sample_rubocop.rb:6:22: C: Space inside parentheses detected.</span>
</span><span class='line'><span class="s1">  def initialize( key )</span>
</span><span class='line'><span class="s1">                     ^</span>
</span><span class='line'><span class="s1">sample_rubocop.rb:15:1: C: Extra blank line detected.</span>
</span><span class='line'><span class="s1">sample_rubocop.rb:16:16: C: Prefer $PROGRAM_NAME over $0.</span>
</span><span class='line'><span class="s1">if __FILE__ == $0</span>
</span><span class='line'><span class="s1">               ^^</span>
</span><span class='line'><span class="s1">sample_rubocop.rb:17:28: C: Prefer single-quoted strings when you don&#39;</span><span class="n">t</span> <span class="n">need</span> <span class="n">string</span> <span class="n">interpolation</span> <span class="ow">or</span> <span class="n">special</span> <span class="n">symbols</span><span class="o">.</span>
</span><span class='line'>  <span class="n">hoge</span> <span class="o">=</span> <span class="no">SampleRubocop</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;hoge&quot;</span><span class="p">)</span>
</span><span class='line'>                           <span class="o">^^^^^^</span>
</span><span class='line'><span class="n">sample_rubocop</span><span class="o">.</span><span class="n">rb</span><span class="p">:</span><span class="mi">20</span><span class="p">:</span><span class="mi">1</span><span class="p">:</span> <span class="ss">C</span><span class="p">:</span> <span class="mi">1</span> <span class="n">trailing</span> <span class="n">blank</span> <span class="n">lines</span> <span class="n">detected</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>無駄な改行とかスペースを注意されていますね。修正しましょう。</p>

<p><a href="https://github.com/bbatsov/ruby-style-guide">The Ruby Style Guide</a> が自分(たち) の
コーディングスタイルに合わない場合は、カスタマイズが可能。
<code>.rubocop.yml</code> を編集する。</p>

<p>いったん、今書いているものを正しいコーディングスタイルとみなした <code>.rubocop.yml</code> を生成するには
<code>--auto-gen-config</code> オプションをつけて rubocop を実行する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /path/to/project
</span><span class='line'><span class="nv">$ </span>rubocop --auto-gen-config
</span><span class='line'><span class="c"># =&gt; /path/to/project/.rubocp_todo.yml が出力される</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記コマンドにより、プロジェクトディレクトリ(/path/to/project)配下のコードが解析されて、cop と
呼ばれるルール群が <code>.rubocp_todo.yml</code> というファイルで出力される。
<code>.rubocp_todo.yml</code> の中身は、以下のように cop 単位にそのプロジェクトに沿った設定が入ったものが
出力されている。</p>

<p>以下は、出力された <code>.rubocp_todo.yml</code> の一部を抜粋。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1"># -- snip --</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1"># Offense count: 113</span>
</span><span class='line'><span class="c1"># Configuration parameters: AllowHeredoc, AllowURI, URISchemes.</span>
</span><span class='line'><span class="c1"># URISchemes: http, https</span>
</span><span class='line'><span class="l-Scalar-Plain">Metrics/LineLength</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">Max</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">137</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1"># -- snip --</span>
</span><span class='line'><span class="c1">#</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記は、以下を示している。</p>

<ul>
<li>デフォルト 1 行 80 文字までがコーディング規約となっているが最大 137 文字の行がある

<ul>
<li>1 行あたり最大 137 文字まで許容する、という設定</li>
</ul>
</li>
<li>1 行 80 文字以上 (違反: offense) に該当する箇所が 113 件</li>
</ul>


<p><code>.rubocp_todo.yml</code> の修正不可能・修正困難部分のみを残したりチューニングして、<code>.rubocop.yml</code> に
リネームしたら自分たちのコーディングスタイルに沿った現実的なルールを適用できる。</p>

<p>標準のコーディング規約に沿ってコードを修正していく場合は、<code>.rubocop.yml</code> に以下の行を追加するか</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">inherit_from</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">.rubocop-todo.yml</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>rubocop --config .rubocop_todo.yml</code> を実行して、違反をつぶしていく。</p>

<p>コードの自動修正機能もある。
<code>.rubocop_todo.yml</code> に <code># Cop supports --auto-correct.</code> と記述されている cop については、以下の
コマンドにより自動修正が可能。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rubocop -a
</span><span class='line'><span class="c"># $ rubocop --auto-correct でもOK</span>
</span></code></pre></td></tr></table></div></figure>


<h2>vim と RuboCop を連携する</h2>

<p>コーディングしながら RuboCop に注意されたいので、vim と連携する。</p>

<p>vim プラグインの <a href="https://github.com/scrooloose/syntastic">scrooloose/syntastic</a> を入れる。</p>

<p>NeoBundle を使っているので、手持ちの <code>vimrc</code> を以下のように修正し、<code>:NeoBundleInstall</code> してインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gi">+ NeoBundle &#39;scrooloose/syntastic&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="gi">+ &quot; ----------------------------------------------------------------------</span>
</span><span class='line'><span class="gi">+ &quot; syntastic</span>
</span><span class='line'><span class="gi">+ let g:syntastic_mode_map = { &#39;mode&#39;: &#39;active&#39; }</span>
</span><span class='line'><span class="gi">+ let g:syntastic_ruby_checkers = [&#39;rubocop&#39;]</span>
</span></code></pre></td></tr></table></div></figure>


<p>そうすると、<code>:SyntaxCheck</code> を実行するか、保存<code>:w</code> のタイミングで RuboCop が動いてくれる。
以下のように指摘してくれる。</p>

<p><img src="http://momota.github.io/images/syntastic_ss.png" alt="syntastic_ss" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[seleniumノウハウ]]></title>
    <link href="http://momota.github.io/blog/2016/05/28/selenium-know-how/"/>
    <updated>2016-05-28T16:57:00+09:00</updated>
    <id>http://momota.github.io/blog/2016/05/28/selenium-know-how</id>
    <content type="html"><![CDATA[<p><img src="http://momota.github.io/images/selenium.png" alt="selenium" /></p>

<p><a href="http://momota.github.io/blog/2016/02/26/selenium/">ブラウザ操作の自動化: Selenium と Ruby</a> でも書いたが、
selenium が便利すぎて、最近よくスクリプトを書くようになった。</p>

<p>以下のようなノウハウが溜まってきたので、ここらで放出する。</p>

<ul>
<li>ウィンドウサイズのリサイズ</li>
<li>ウィンドウ位置の移動</li>
<li>スクリーンショットの取得</li>
<li>要素セレクタメソッドの使い分け</li>
<li>ドロップダウンリストの選択</li>
<li>マウスオーバ (hover)</li>
<li>フレーム移動</li>
<li>ポップアップダイアログの扱い</li>
<li>コード量を減らすためのモンキーパッチ</li>
<li>よく採るプログラム構造</li>
</ul>


<p>インストール方法などは <a href="http://momota.github.io/blog/2016/02/26/selenium/">ブラウザ操作の自動化: Selenium と Ruby</a>
を参照。</p>

<p>selenium用スクリプト開発のノウハウというべきかコツといういべきかアレな感じだが、結局、
スクレイピングと同様にHTML構造を理解することが必要なのでブラウザ付属の開発ツールが
手離せない。</p>

<ul>
<li><a href="https://developer.mozilla.org/ja/docs/Tools">Firefox 開発ツール</a></li>
<li><a href="https://developer.chrome.com/devtools">chrome devtools</a></li>
</ul>


<!-- more -->


<p>これ以降のサンプルコードは以下を定義しているものとする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s2">&quot;selenium-webdriver&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">driver</span> <span class="o">=</span> <span class="ss">Selenium</span><span class="p">:</span><span class="ss">:WebDriver</span><span class="o">.</span><span class="n">for</span> <span class="ss">:firefox</span>
</span></code></pre></td></tr></table></div></figure>


<h2>ウィンドウサイズのリサイズ</h2>

<p><code>driver.manage.window.resize_to</code>の引数にリサイズするサイズ情報(width, height)を渡す。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">width</span>  <span class="o">=</span> <span class="mi">100</span>
</span><span class='line'><span class="n">height</span> <span class="o">=</span> <span class="mi">100</span>
</span><span class='line'><span class="n">driver</span><span class="o">.</span><span class="n">manage</span><span class="o">.</span><span class="n">window</span><span class="o">.</span><span class="n">resize_to</span><span class="p">(</span><span class="n">width</span><span class="p">,</span> <span class="n">height</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>現在のサイズを取得して、相対的にリサイズしたい場合は以下のようにする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">size</span> <span class="o">=</span> <span class="n">driver</span><span class="o">.</span><span class="n">manage</span><span class="o">.</span><span class="n">window</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'><span class="n">size</span><span class="o">.</span><span class="n">width</span>  <span class="o">+=</span> <span class="mi">100</span>
</span><span class='line'><span class="n">size</span><span class="o">.</span><span class="n">height</span> <span class="o">+=</span> <span class="mi">100</span>
</span><span class='line'><span class="n">driver</span><span class="o">.</span><span class="n">manage</span><span class="o">.</span><span class="n">window</span><span class="o">.</span><span class="n">size</span> <span class="o">=</span> <span class="n">size</span>
</span></code></pre></td></tr></table></div></figure>


<h2>ウィンドウ位置の移動</h2>

<p><code>driver.manage.window.move_to</code>の引数に移動したい場所の座標情報(x, y)を渡す。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">x</span> <span class="o">=</span> <span class="mi">100</span>
</span><span class='line'><span class="n">y</span> <span class="o">=</span> <span class="mi">100</span>
</span><span class='line'><span class="n">driver</span><span class="o">.</span><span class="n">manage</span><span class="o">.</span><span class="n">window</span><span class="o">.</span><span class="n">move_to</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>現在のウィンドウ位置を取得して、相対的にリサイズしたい場合は以下のようにする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">pos</span> <span class="o">=</span> <span class="n">driver</span><span class="o">.</span><span class="n">manage</span><span class="o">.</span><span class="n">window</span><span class="o">.</span><span class="n">position</span>
</span><span class='line'><span class="n">pos</span><span class="o">.</span><span class="n">x</span> <span class="o">+=</span> <span class="mi">100</span>
</span><span class='line'><span class="n">pos</span><span class="o">.</span><span class="n">y</span> <span class="o">+=</span> <span class="mi">100</span>
</span><span class='line'><span class="n">driver</span><span class="o">.</span><span class="n">manage</span><span class="o">.</span><span class="n">window</span><span class="o">.</span><span class="n">position</span> <span class="o">=</span> <span class="n">pos</span>
</span></code></pre></td></tr></table></div></figure>


<h2>スクリーンショットの取得</h2>

<p>開いているページのスクリーンショットを撮りたい場合は、<code>driver.save_screenshot</code> に保存先のファイル名を指定するだけ。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">driver</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">&quot;https://www.google.co.jp/&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">driver</span><span class="o">.</span><span class="n">save_screenshot</span><span class="p">(</span><span class="s2">&quot;/path/to/save/screenshot.png&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>ページ全体を撮りたいのに、frame 構造が邪魔をして、スクロールしなければ全体が撮れない場合がある。
ちょっと、調べたところ <code>driver.execute_script("some script")</code> で javascript を利用してスクロールをしている人がいたり、
<code>Selenium::WebDriver::Element.location_once_scrolled_into_view</code> を使ってスクロールしている人がいたり。
どちらにしても、コンテンツ表示上の高さを取得して、1スクロール分の長さをデクリメントしていっているような処理。</p>

<p>自分の場合は、めんどくさかったので、上述したリサイズ方法を使ってスクロールがいらないくらいウィンドウサイズを大きくして、
スクリーンショットを撮るという荒業を繰り広げている。</p>

<h2>要素セレクタメソッドの使い分け</h2>

<p>要素セレクタメソッドは <code>find_element</code> と <code>find_elements</code> の2種類。
そのメソッド名の単数形・複数形の通りなのだが、以下のような違いがある</p>

<ul>
<li><code>find_element</code>

<ul>
<li>指定した引数にマッチする最初の要素 (<code>WebDriver::Element</code>) を <strong>1つ</strong> 返す。</li>
<li>マッチする要素がなければ例外 (<code>NoSuchElementError</code>) を投げる。</li>
</ul>
</li>
<li><code>find_elements</code>

<ul>
<li>指定した引数にマッチする要素を詰めた配列 (<code>Array&lt;WebDriver::Element&gt;</code>) を返す。</li>
<li>マッチする要素がなければ、空の配列 (<code>Array</code>) を返す。</li>
</ul>
</li>
</ul>


<p>テーブルの <code>&lt;tr&gt;</code> 要素やリストの <code>&lt;li&gt;</code> 要素に対してイテレーション処理するときには <code>find_elements</code> が便利。
以下は、例。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># リストのリンクをクリックしていくイテレーションの例</span>
</span><span class='line'><span class="n">elements</span> <span class="o">=</span> <span class="n">driver</span><span class="o">.</span><span class="n">find_elements</span><span class="p">(</span><span class="ss">:css</span><span class="p">,</span> <span class="s2">&quot;#some-list &gt; li&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">elements</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span>
</span><span class='line'>  <span class="n">link</span> <span class="o">=</span> <span class="n">e</span><span class="o">.</span><span class="n">find_element</span><span class="p">(</span><span class="ss">:tag_name</span><span class="p">,</span> <span class="s2">&quot;a&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">link</span><span class="o">.</span><span class="n">click</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>要素セレクタメソッドの引数には、<code>find_element(:how, "what")</code> のように symbol と文字列を渡す。
渡す引数は、<code>find_elements</code> も同じ。</p>

<p>指定できるsymbolの種類は以下。</p>

<table>
<thead>
<tr>
<th>symbol             </th>
<th> 対象</th>
</tr>
</thead>
<tbody>
<tr>
<td>:class             </td>
<td> クラス名 (属性名 class)</td>
</tr>
<tr>
<td>:class_name        </td>
<td> 上記 :class と同じ</td>
</tr>
<tr>
<td>:id                </td>
<td> ID (属性名 id)</td>
</tr>
<tr>
<td>:link_text         </td>
<td> <code>&lt;a&gt;</code> タグのテキスト</td>
</tr>
<tr>
<td>:link              </td>
<td> 上記 :link_text と同じ</td>
</tr>
<tr>
<td>:partial_link_text </td>
<td> <code>&lt;a&gt;</code> タグのテキストの部分文字列</td>
</tr>
<tr>
<td>:name              </td>
<td> name (属性名 name)</td>
</tr>
<tr>
<td>:tag_name          </td>
<td> タグ名</td>
</tr>
<tr>
<td>:xpath             </td>
<td> xpath で指定</td>
</tr>
<tr>
<td>:css               </td>
<td> css セレクタ で指定</td>
</tr>
</tbody>
</table>


<p><a href="http://www.rubydoc.info/gems/selenium-webdriver/0.0.28/Selenium/WebDriver/Find">参考 Module: Selenium::WebDriver::Find</a></p>

<h2>ドロップダウンリストの選択</h2>

<p>Selenium IDEでRubyコードの出力をしようとすると、ドロップダウンリストの選択をする処理部分がERRORに
なってコメントアウトされることがある。(今のSelenium IDEバージョンでは大丈夫そう)</p>

<p>ドロップダウンリストの選択は以下のように書けばOK。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="ss">Selenium</span><span class="p">:</span><span class="ss">:WebDriver</span><span class="o">::</span><span class="ss">Support</span><span class="p">:</span><span class="ss">:Select</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">driver</span><span class="o">.</span><span class="n">find_element</span><span class="p">(</span><span class="ss">:tag_name</span><span class="p">,</span> <span class="s2">&quot;select&quot;</span><span class="p">))</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">select_by</span><span class="p">(</span><span class="ss">:text</span><span class="p">,</span> <span class="s2">&quot;ほげほげ&quot;</span><span class="p">)</span>  <span class="c1"># 表示テキストで選択</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">select_by</span><span class="p">(</span><span class="ss">:value</span><span class="p">,</span> <span class="s2">&quot;value1&quot;</span><span class="p">)</span>   <span class="c1"># valueの値で選択</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">select_by</span><span class="p">(</span><span class="ss">:index</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>          <span class="c1"># index(0, 1, 2, ...)で選択</span>
</span></code></pre></td></tr></table></div></figure>


<h2>マウスオーバ (hover)</h2>

<p>例えば、ナビゲーションメニューなどが、通常時には折りたたまれていて、メニュー上にマウスオーバした場合に、
子メニューが展開されるようなページがある。
折りたたまれているときに、子メニューHTMLをロードできていないようなページのときは、ユーザ操作と同じように
マウスオーバしてあげる必要がある。</p>

<p>以下のようにマウスオーバしたい要素を指定して、<code>driver.mouse.move_to</code> を呼べば良い。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">e</span> <span class="o">=</span> <span class="n">driver</span><span class="o">.</span><span class="n">find_element</span><span class="p">(</span><span class="ss">:id</span><span class="p">,</span> <span class="s2">&quot;menu&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">driver</span><span class="o">.</span><span class="n">mouse</span><span class="o">.</span><span class="n">move_to</span><span class="p">(</span><span class="n">e</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>フレーム移動</h2>

<p>frame や iframe 要素を使っているサイトで、そのフレーム内の要素に対して操作したい場合、当該フレームへ切り替える操作が必要となる。</p>

<p>以下のようにスイッチしたいフレーム要素を指定して、<code>driver.switch_to.frame</code> を呼べば良い。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">frame</span> <span class="o">=</span> <span class="n">driver</span><span class="o">.</span><span class="n">find_element</span><span class="p">(</span><span class="ss">:id</span><span class="p">,</span> <span class="s2">&quot;frame&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">driver</span><span class="o">.</span><span class="n">switch_to</span><span class="o">.</span><span class="n">frame</span><span class="p">(</span><span class="n">frame</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>フレームを移動してから、いったん最上位のフレームにに戻りたい場合は、以下。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">driver</span><span class="o">.</span><span class="n">switch_to</span><span class="o">.</span><span class="n">window</span><span class="p">(</span><span class="n">driver</span><span class="o">.</span><span class="n">window_handle</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">frame</span> <span class="o">=</span> <span class="n">driver</span><span class="o">.</span><span class="n">find_element</span><span class="p">(</span><span class="ss">:id</span><span class="p">,</span> <span class="s2">&quot;top-frame&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">driver</span><span class="o">.</span><span class="n">switch_to</span><span class="o">.</span><span class="n">frame</span><span class="p">(</span><span class="n">frame</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>ポップアップダイアログの扱い</h2>

<p>「マジでこのページから移動する?」的なjavascriptによるポップアップダイアログを表示するページがある。
このポップアップダイアログを強制的に閉じるには以下のようにする。</p>

<p><code>.accept</code> ではい、<code>.dismiss</code>でいいえを押して閉じる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">begin</span>
</span><span class='line'>  <span class="n">alert_box</span> <span class="o">=</span> <span class="n">driver</span><span class="o">.</span><span class="n">switch_to</span><span class="o">.</span><span class="n">alert</span>
</span><span class='line'>  <span class="n">alert_box</span><span class="o">.</span><span class="n">accept</span>     <span class="c1"># 「はい」「OK」ボタンクリック</span>
</span><span class='line'>  <span class="c1"># alert_box.dismiss  # 「いいえ」「cancel」ボタンクリック</span>
</span><span class='line'><span class="k">rescue</span> <span class="ss">Selenium</span><span class="p">:</span><span class="ss">:WebDriver</span><span class="o">::</span><span class="ss">Error</span><span class="p">:</span><span class="ss">:NoSuchAlertError</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>  <span class="c1"># ダイアログがポップアップしない場合、例外を投げるので、何もせずにスルー</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>コード量を減らすためのモンキーパッチ</h2>

<p>たとえば、ログインなどの処理の際、フォームへ文字列を送る <code>send_keys</code> 前にいつも <code>.clear</code> しているので
もう <code>send_keys</code> の中に <code>.clear</code> 処理を入れ込んでしまえと思った。</p>

<p>また、<code>input</code> タグの値を取得するときは、<code>.attribute("value")</code> と長ったらしく書く必要があるので <code>.value</code>メソッドを
定義してしまおうと思った。checkbox のチェック有無も同じく。</p>

<p>そこで、<code>Selenium::WebDriver::Element</code> を拡張するため、以下のようなモンキーパッチを書く。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">ElementExtension</span>
</span><span class='line'>  <span class="n">refine</span> <span class="ss">Selenium</span><span class="p">:</span><span class="ss">:WebDriver</span><span class="o">::</span><span class="no">Element</span> <span class="k">do</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">send_keys</span><span class="p">(</span><span class="n">str</span><span class="p">)</span>
</span><span class='line'>      <span class="n">clear</span>
</span><span class='line'>      <span class="k">super</span><span class="p">(</span><span class="n">str</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">value</span>
</span><span class='line'>      <span class="n">attribute</span><span class="p">(</span><span class="s2">&quot;value&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">checked?</span>
</span><span class='line'>      <span class="n">attribute</span><span class="p">(</span><span class="s2">&quot;checked&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">nil?</span> <span class="p">?</span> <span class="kp">false</span> <span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">url</span>
</span><span class='line'>      <span class="n">attribute</span><span class="p">(</span><span class="s2">&quot;href&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">using</span> <span class="no">ElementExtension</span>
</span></code></pre></td></tr></table></div></figure>


<p>そうすると以下のようにコード量を減らせる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'># たとえば、ログイン処理
</span><span class='line'>user     = &quot;USER&quot;
</span><span class='line'>password = &quot;PASSWORD&quot;
</span><span class='line'>
</span><span class='line'><span class="gd">- driver.find_element(:id, &quot;loginuser&quot;).clear</span>
</span><span class='line'>driver.find_element(:id, &quot;loginuser&quot;).send_keys(user)
</span><span class='line'><span class="gd">- driver.find_element(:id, &quot;loginpass&quot;).clear</span>
</span><span class='line'>driver.find_element(:id, &quot;loginpass&quot;).send_keys(password)
</span><span class='line'>driver.find_element(:id, &quot;submit&quot;).click
</span><span class='line'>
</span><span class='line'>
</span><span class='line'># &lt;input&gt;の値を取得する処理
</span><span class='line'><span class="gd">- hostname = driver.find_element(:id, &quot;hostname&quot;).attribute(&quot;value&quot;)</span>
</span><span class='line'><span class="gi">+ hostname = driver.find_element(:id, &quot;hostname&quot;).value</span>
</span><span class='line'>
</span><span class='line'># チェックボックスがチェックされているかどうか
</span><span class='line'>checkbox = driver.find_element(:id, &quot;some-checkbox&quot;)
</span><span class='line'><span class="gd">- do_something if checkbox.attribute(&quot;checked&quot;).nil?</span>
</span><span class='line'><span class="gi">+ do_something if checkbox.checked?</span>
</span><span class='line'>
</span><span class='line'># URLの取得
</span><span class='line'><span class="gd">- url = driver.find_element(:tag_namem &quot;a&quot;).attribute(&quot;href&quot;)</span>
</span><span class='line'><span class="gi">+ url = driver.find_element(:tag_namem &quot;a&quot;).url</span>
</span></code></pre></td></tr></table></div></figure>


<p>モンキーパッチの書き方は以下を参考にした。</p>

<ul>
<li><a href="http://melborne.github.io/2013/08/30/monkey-patching-for-prudent-rubyists/">分別のあるRubyモンキーパッチャーになるために</a></li>
</ul>


<h2>よく採るプログラム構造</h2>

<p>よく採るプログラム構造は以下。</p>

<ul>
<li>操作ターゲットとなるサイト単位にクラスを作る</li>
<li>処理の内容にしたがって、メソッドを作る。以下の様な粒度。

<ul>
<li>サインイン</li>
<li>リスト表示</li>
<li>自動入力と申請</li>
</ul>
</li>
<li>アカウント情報や入力データはYAMLファイルなどに書き出しておく</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># conding: utf-8</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;selenium-webdriver&quot;</span>
</span><span class='line'><span class="c1"># その他必要に応じてrequire</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1"># Selenium::WebDriver::Element の拡張</span>
</span><span class='line'><span class="k">module</span> <span class="nn">Elementextension</span>
</span><span class='line'>  <span class="c1"># 上記モンキーパッチの章を参照</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">using</span> <span class="no">Elementextension</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1"># 本体</span>
</span><span class='line'><span class="k">class</span> <span class="nc">SomeSite</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span>
</span><span class='line'>    <span class="c1"># 初期化処理</span>
</span><span class='line'>    <span class="c1"># 定数をセットしたり、webdriverを生成してアクセスしたり。</span>
</span><span class='line'>    <span class="vi">@ss_dir</span>  <span class="o">=</span> <span class="s2">&quot;./screenshot/&quot;</span>
</span><span class='line'>    <span class="no">FileUtils</span><span class="o">.</span><span class="n">mkdir_p</span><span class="p">(</span><span class="vi">@ss_dir</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="vi">@driver</span>  <span class="o">=</span> <span class="ss">Selenium</span><span class="p">:</span><span class="ss">:WebDriver</span><span class="o">.</span><span class="n">for</span> <span class="ss">:firefox</span>
</span><span class='line'>    <span class="n">base_url</span> <span class="o">=</span> <span class="s2">&quot;http://somesite.com&quot;</span>
</span><span class='line'>    <span class="vi">@driver</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">base_url</span> <span class="o">+</span> <span class="s2">&quot;/index.html&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">sign_in</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">password</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># サインイン処理</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">do_something</span>
</span><span class='line'>    <span class="c1"># やりたいことを書く</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">close</span>
</span><span class='line'>    <span class="c1"># 終了時に実行する処理を書く</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>  <span class="c1"># privat method を定義する</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">get_screenshot</span><span class="p">(</span><span class="n">str</span><span class="p">)</span>
</span><span class='line'>    <span class="n">now</span> <span class="o">=</span> <span class="no">DateTime</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s2">&quot;%Y%m%d%H%M%S&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@driver</span><span class="o">.</span><span class="n">save_screenshot</span><span class="p">(</span><span class="vi">@ss_dir</span> <span class="o">+</span> <span class="s2">&quot;_&quot;</span> <span class="o">+</span> <span class="n">str</span> <span class="o">+</span> <span class="s2">&quot;_&quot;</span> <span class="o">+</span> <span class="n">now</span> <span class="o">+</span> <span class="s2">&quot;.png&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1"># ----------------------------------------------------------------------</span>
</span><span class='line'><span class="c1"># main</span>
</span><span class='line'><span class="c1"># ----------------------------------------------------------------------</span>
</span><span class='line'><span class="k">if</span> <span class="bp">__FILE__</span> <span class="o">==</span> <span class="vg">$0</span>
</span><span class='line'>  <span class="c1"># サインインに必要なアカウント情報はYAMLなどに書いておいて、それを読む</span>
</span><span class='line'>  <span class="n">y</span>        <span class="o">=</span> <span class="no">YAML</span><span class="o">.</span><span class="n">load_file</span><span class="p">(</span><span class="s2">&quot;/path/to/yaml.yml&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">user</span>     <span class="o">=</span>  <span class="n">y</span><span class="o">[</span><span class="s2">&quot;account&quot;</span><span class="o">][</span><span class="s2">&quot;user&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="n">password</span> <span class="o">=</span>  <span class="n">y</span><span class="o">[</span><span class="s2">&quot;account&quot;</span><span class="o">][</span><span class="s2">&quot;password&quot;</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">hoge</span> <span class="o">=</span> <span class="no">SomeSite</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>  <span class="n">hoge</span><span class="o">.</span><span class="n">sign_in</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">password</span><span class="p">)</span>
</span><span class='line'>  <span class="n">hoge</span><span class="o">.</span><span class="n">do_something</span>
</span><span class='line'>  <span class="n">hoge</span><span class="o">.</span><span class="n">close</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>関連</h2>

<ul>
<li><a href="http://momota.github.io/blog/2016/02/26/selenium/">ブラウザ操作の自動化: Selenium と Ruby</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ブラウザ操作の自動化: selenium と ruby]]></title>
    <link href="http://momota.github.io/blog/2016/02/26/selenium/"/>
    <updated>2016-02-26T10:41:00+09:00</updated>
    <id>http://momota.github.io/blog/2016/02/26/selenium</id>
    <content type="html"><![CDATA[<p>selenium と ruby を使ってブラウザ GUI 操作を自動化する。</p>

<p><a href="http://www.seleniumhq.org/">selenium</a> は、Web アプリケーションの自動テストのためのツール。
レグレッションテストによく使われているようだ。</p>

<p>selenium は、ブラウザ操作シナリオを事前に設定して、シナリオ通りに実行してくれる。
シナリオ設定といっても、Firefoxプラグインの Selenium IDE などを使うと操作を
記録してくれる機能があるのでそこまで大変ではない。
詳細は、<a href="http://www.ruby.or.jp/ja/tech/development_tool/reg_test/">Ruby アソシエーション &ndash; selenium</a> の &ldquo;1.2 テストの作成&rdquo;
あたりを参照してほしい</p>

<p>selenium は、クロスブラウザのツールで、IE を使って IE限定みたいなサイトでも使える。
IE や Chrome で使うには各 Selenium WebDriver が必要となる。</p>

<p>テスト用と言いつつ、使い道はいろいろとある。</p>

<ul>
<li>社内のもろもろの web 申請は、入力項目が多いのに、毎回ほぼ同じ内容を入力させるので
フォーム入力の省力化として利用している。</li>
<li>hp さんの iLO や日立さんストレージ、F5 さんのBIG-IP みたいな web 画面から設定変更するような機器の
自動構築なんかもできそう。

<ul>
<li>スクリーンショットも撮れるので、エビデンスもついでに取得可能。</li>
<li>vCenter とかも操作できないかという思惑はある。</li>
<li>AWS とかも操作できるけど、そもそも API が豊富に備わっているから不要か。</li>
</ul>
</li>
<li>あえて selenium を使わなくてもいいけど、クローリングやスクレイピングとかもできる</li>
</ul>


<p>この selenium は、Java や Python, Ruby などのプログラミング言語からシナリオ操作が可能で
ループ処理などするにはめちゃくちゃ便利。</p>

<p>いままでは Firefox プラグインだけで利用していたが、Ruby と絡めると便利すぎて感謝しかなかった。
ここでは、サンプルとして、はてなブックマークのホットエントリトップ5を一括で開くことを
やってみたい。</p>

<p>ちなみに似たツールに iMacro がある。</p>

<p>関連記事: <a href="http://momota.github.io/blog/2016/05/28/selenium-know-how/">seleniumノウハウ</a></p>

<!-- more -->


<p>環境は、以下。</p>

<table>
<thead>
<tr>
<th>モノ         </th>
<th> バージョン</th>
</tr>
</thead>
<tbody>
<tr>
<td>OS           </td>
<td> Windows 8.1 Pro</td>
</tr>
<tr>
<td>ブラウザ     </td>
<td> Firefox ESR 38.6.1</td>
</tr>
<tr>
<td>Selenium IDE </td>
<td> 2.9.0</td>
</tr>
<tr>
<td>Ruby         </td>
<td> 2.2.4p230 (2015-12-16 revision 53155) [x64-mingw32]</td>
</tr>
<tr>
<td>gem          </td>
<td> selenium-webdriver (2.52.0)</td>
</tr>
</tbody>
</table>


<h1>準備</h1>

<p>Windows に Rubyをインストールする。</p>

<p><a href="http://rubyinstaller.org/downloads/">RubyInstaller</a> の RubyInstallers からインストーラをダウンロードし、実行する。
インストール時、 PATH を通すチェックボックスにチェックを入れる。</p>

<p>続いてDevelopment Kitをインストールする。<a href="http://www.rubylife.jp/railsinstall/rails/index4.html">この辺を参考に。</a>
これも RubyInstaller の Development Kit からダウンロードして、解凍する。
解答したファイルに <code>dk.rb</code> があるのでコマンドプロンプトから以下のように実行する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>&gt; <span class="nb">cd</span> <span class="o">{</span>DEVELOPMENT KIT の解凍ディレクトリ<span class="o">}</span>
</span><span class='line'>&gt; ruby dk.rb init
</span><span class='line'>&gt; ruby dk.rb install
</span></code></pre></td></tr></table></div></figure>


<p>次に、<code>selenium-webdriver</code> をインストールする。
Ruby をインストールしたことで、一緒に gem も使えるようになっているはずなので、
コマンドプロンプトから以下を打鍵。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>&gt; gem install selenium-webdriver
</span></code></pre></td></tr></table></div></figure>


<p>インストールの確認。irb (もしくは pry) とかで require できることを確認する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>&gt;irb
</span><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:001:0&gt; require <span class="s2">&quot;selenium-webdriver&quot;</span>
</span><span class='line'><span class="o">=</span>&gt; <span class="nb">true</span>
</span></code></pre></td></tr></table></div></figure>


<h1>はてなホットエントリのトップ5エントリーを開く</h1>

<p>ここではサンプルとして、はてなブックマークのホットエントリからトップ5 をブラウザで
次々に開くよう <code>hatena.rb</code> を書く。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s2">&quot;selenium-webdriver&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Hatena</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span>
</span><span class='line'>    <span class="c1"># ブラウザの起動</span>
</span><span class='line'>    <span class="vi">@driver</span> <span class="o">=</span> <span class="ss">Selenium</span><span class="p">:</span><span class="ss">:WebDriver</span><span class="o">.</span><span class="n">for</span> <span class="ss">:firefox</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># ベース URL</span>
</span><span class='line'>    <span class="vi">@base_url</span> <span class="o">=</span> <span class="s2">&quot;http://b.hatena.ne.jp&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">open_top5</span>
</span><span class='line'>    <span class="c1"># ベースURL を開く</span>
</span><span class='line'>    <span class="vi">@driver</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="vi">@base_url</span> <span class="o">+</span> <span class="s2">&quot;/hotentry&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># CSS セレクタで要素を特定してクリックする</span>
</span><span class='line'>    <span class="mi">5</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>      <span class="vi">@driver</span><span class="o">.</span><span class="n">find_element</span><span class="p">(</span><span class="ss">:css</span><span class="p">,</span> <span class="s2">&quot;a[data-entryrank=&#39;</span><span class="si">#{</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="si">}</span><span class="s2">&#39;]&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">click</span>
</span><span class='line'>      <span class="nb">sleep</span> <span class="mi">1</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="bp">__FILE__</span> <span class="o">==</span> <span class="vg">$0</span>
</span><span class='line'>  <span class="n">hatena</span> <span class="o">=</span> <span class="no">Hatena</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>  <span class="n">hatena</span><span class="o">.</span><span class="n">open_top5</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>コマンドプロンプトからこのスクリプトを実行すると次々とブラウザが起動してくる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>&gt; ruby hatena.rb
</span></code></pre></td></tr></table></div></figure>


<p>こんな感じ。</p>

<p><img src="http://momota.github.io/images/20160226_selenium.gif" alt="hatena_screenshot" /></p>

<p><code>find_element</code> メソッドは、CSSセレクタやxpath、タグ名、タグのID、class名などを指定できる。</p>

<p>フォームになにか値を突っ込みたいときは、<code>@driver.find_element(~~~~~).send_keys "VALUE"</code> みたいな感じで
要素を特定したあと、<code>send_keys</code> で文字列を渡してあげればよい。
POST は、ボタンを find_element してあげて<code>.click</code> (<code>.submit</code> でも良さ気) でOK。</p>

<p>スクリーンショットを撮るときは、<code>@driver.save_screenshot "./screenshot.png"</code> みたいな感じ。</p>

<h1>参考</h1>

<ul>
<li><a href="http://www.ruby.or.jp/ja/tech/development_tool/reg_test/">Ruby アソシエーション &ndash; selenium</a></li>
<li><a href="http://qiita.com/kkakizaki/items/5a0e6f753193f2a1514f">Selenium 入門 &ndash; Qiita</a></li>
<li>関連記事: <a href="http://momota.github.io/blog/2016/05/28/selenium-know-how/">seleniumノウハウ</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ansible でノートPCをセットアップ]]></title>
    <link href="http://momota.github.io/blog/2016/02/08/ansible/"/>
    <updated>2016-02-08T09:42:00+09:00</updated>
    <id>http://momota.github.io/blog/2016/02/08/ansible</id>
    <content type="html"><![CDATA[<p><a href="http://momota.github.io/blog/2015/11/15/centos-install/">CentOS 7 を USB メモリからインストール</a> で書いたが、まっさらなCentOSが手元にあったので
<a href="http://www.ansible.com/">ansible</a> を使っていろいろインストールしてみた。</p>

<p>ちょっと前に、<a href="http://www.ansible.com/blog/ansible-2.0-launch">Ansible 2.0 Has Arrived</a> という記事も話題になってたし。</p>

<p>ansible は Chef のような構成管理ツール。
システムの設定や、ソフトウェアのデプロイ、オーケストレーションなどが可能なIT自動化ツール。
管理対象ノードが多いほどメリットが大きい。</p>

<p>Chef と比較すると、エージェントレスのアーキテクチャで、Chefのように特定言語(Ruby)を学ぶ必要はなく、YAMLで構成を表現する。
これは、Playbookと呼ばれる。Chef でいうレシピ。</p>

<p>マネージャ側は最近は大抵プリインストールされている python とansible さえインストールすればよい。
クライアント側は、マネージャから SSH アクセスさえできればよい。</p>

<p>これを1回やってファイル群をリポジトリで管理しておけば、環境の複製が楽になるし、Infrastructure as a Code ですね。</p>

<!-- more -->


<p>まず、環境の説明。</p>

<p><img src="http://momota.github.io/images/ansible.png" alt="ansible_diag" /></p>

<p>本稿では、ansible実行サーバをコントローラ (Control Machine)、ansibleによる
管理対象ノードを管理ノード (Managed Node) と呼ぶことにする。</p>

<table>
<thead>
<tr>
<th>役割                           </th>
<th> ホスト名     </th>
<th> 物理マシン     </th>
<th> IPアドレス</th>
</tr>
</thead>
<tbody>
<tr>
<td>コントローラ (Control Machine) </td>
<td> controller   </td>
<td> mac mini       </td>
<td> 192.168.11.9/24</td>
</tr>
<tr>
<td>管理ノード   (Managed Node)    </td>
<td> managed_node </td>
<td> TOSHIBA laptop </td>
<td> 192.168.11.14/24</td>
</tr>
</tbody>
</table>


<p>ansible のバージョンは <code>2.0.0.2</code>。</p>

<h1>0. 準備</h1>

<h2>0-1. コントローラ</h2>

<ol>
<li>ansible をインストールする</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>controller<span class="nv">$ </span>brew install ansible
</span></code></pre></td></tr></table></div></figure>


<h2>0-2. 管理ノード</h2>

<p>コントローラ～管理ノード間は、ネットワークを介して管理される。
コントローラから管理ノードへSSHアクセスできる必要があるので、以下の設定を事前に行っておく。</p>

<ol>
<li>管理ノードのネットワーク設定</li>
<li>コントローラのSSH公開鍵の登録</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># コントローラ側no-pass SSH key を生成</span>
</span><span class='line'>controller<span class="nv">$ </span>ssh-keygen -t rsa
</span><span class='line'><span class="c"># mac には ssh-copy-id がないので、scpで公開鍵をコピー</span>
</span><span class='line'>controller<span class="nv">$ </span>scp ~/.ssh/id_dsa.pub 192.168.11.14:/home/momota
</span><span class='line'>
</span><span class='line'><span class="c"># 管理ノード側でauthorized_keysの登録</span>
</span><span class='line'>managed_node<span class="nv">$ </span>mkdir ~/.ssh
</span><span class='line'>managed_node<span class="nv">$ </span>chmod 700 ~/.ssh
</span><span class='line'>managed_node<span class="nv">$ </span>cat id_dsa.pub &gt;&gt; ~/.ssh/authorized_keys
</span><span class='line'>managed_node<span class="nv">$ </span>chmod 600 ~/.ssh/authorized_keys
</span><span class='line'>
</span><span class='line'><span class="c"># SSH アクセス確認</span>
</span><span class='line'>controller<span class="nv">$ </span>ssh 192.168.11.14
</span></code></pre></td></tr></table></div></figure>


<h1>1. ansible 設定</h1>

<p>まずは、管理ノードへOSアカウント (guestユーザ) を追加作成してみる。</p>

<p>ディレクトリ構成は、<a href="http://qiita.com/yteraoka/items/5ed2bddefff32e1b9faf">Ansible オレオレベストプラクティス</a> を参考にして以下のように作成。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>controller<span class="nv">$ </span>tree laptop_build
</span><span class='line'>laptop_build
</span><span class='line'>|-- centos
</span><span class='line'>|   |-- hosts
</span><span class='line'>|   <span class="sb">`</span>-- site.yml
</span><span class='line'>|-- common
</span><span class='line'>|   |-- guest_account
</span><span class='line'>|   |   <span class="sb">`</span>-- tasks
</span><span class='line'>|   |       <span class="sb">`</span>-- main.yml
</span><span class='line'>|-- private_vars
</span><span class='line'>|   <span class="sb">`</span>-- common.yml
</span><span class='line'><span class="sb">`</span>-- vars
</span><span class='line'>    <span class="sb">`</span>-- common.yml
</span></code></pre></td></tr></table></div></figure>


<p>それぞれのディレクトリの位置づけは、<a href="http://yteraoka.github.io/ansible-tutorial/">Ansibleチュートリアル</a>とかを参照するとわかりやすい。</p>

<p>まずは、<code>centos/hosts</code> へ管理ノードのIPアドレスを登録する。
クライアントが複数ある場合は、このエントリーで複数のアドレスを列挙すればよい。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="p-Indicator">[</span><span class="nv">laptops</span><span class="p-Indicator">]</span>
</span><span class='line'><span class="l-Scalar-Plain">192.168.11.14</span>
</span></code></pre></td></tr></table></div></figure>


<p>次に、メイン処理を <code>centos/site.yml</code> に記述する。
外部ファイルをインクルードして、roleの実行順序を指定するだけ。
<code>hosts</code> のところで、対象を絞れるが、今回は all。うまく使えば、production用とdevelopment用を使い分けたりグループ単位で実行できる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">hosts</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">all</span>
</span><span class='line'>  <span class="l-Scalar-Plain">vars_files</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">../vars/common.yml</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">../private_vars/common.yml</span>
</span><span class='line'>  <span class="l-Scalar-Plain">roles</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">../common/guest_account</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>vars/common.yml</code> には Playbook 共通で使いたい変数を設定している。</p>

<p><code>private_vars/common.yml</code> には公開したくない変数を設定している。ここでは、guestユーザのパスワードを以下のように指定している。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="nn">---</span>
</span><span class='line'><span class="l-Scalar-Plain">guest_password</span><span class="p-Indicator">:</span> <span class="s">&quot;hogehoge&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>こういうパスワードみたいな情報をgithubに上げたくないので、.gitignoreには
private_vars/ を追加しておく。</p>

<p><code>roles</code> には、実際のアカウント追加処理を指定している role ディレクトリ<code>common/guest_account</code>を指定する。</p>

<p><code>common/guest_account/tasks/main.yml</code> には、userモジュールを使って、以下のようにタスクを記述する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="nn">---</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">add the user &quot;guest&quot;</span>
</span><span class='line'>  <span class="l-Scalar-Plain">user</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">name=guest shell=/bin/bash password=</span>
</span><span class='line'>  <span class="l-Scalar-Plain">become</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">yes</span>
</span><span class='line'>  <span class="l-Scalar-Plain">become_method</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">sudo</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>name</code> は任意。タスク内容をコメントとして記述する。</p>

<p><code>user</code> がモジュール名、それに続いて各モジュールのオプション。</p>

<p><code>become</code>, <code>become_method</code> で管理ノードで sudo を使って実行することを許可している。</p>

<h1>2. ansible 実行</h1>

<p>クライアント側で事前にユーザの確認。
guest ユーザは存在しない。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>managed_node<span class="nv">$ </span>grep guest /etc/passwd
</span></code></pre></td></tr></table></div></figure>


<p>まずは、<code>--check</code> オプションを付けてテスト実行(dry run)。実際の構成変更はせず、
Playbook のシンタックスチェックなどを実施する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>controller<span class="nv">$ </span>ansible-playbook -i centos/hosts centos/site.yml -K --check
</span><span class='line'>SUDO password:
</span><span class='line'>
</span><span class='line'>PLAY ***************************************************************************
</span><span class='line'>
</span><span class='line'>TASK <span class="o">[</span>setup<span class="o">]</span> *******************************************************************
</span><span class='line'>ok: <span class="o">[</span>192.168.11.14<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>TASK <span class="o">[</span>../common/guest_account : add the user <span class="s2">&quot;guest&quot;</span><span class="o">]</span> **************************
</span><span class='line'>changed: <span class="o">[</span>192.168.11.14<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>PLAY RECAP *********************************************************************
</span><span class='line'>192.168.11.14              : <span class="nv">ok</span><span class="o">=</span>1    <span class="nv">changed</span><span class="o">=</span>1    <span class="nv">unreachable</span><span class="o">=</span>0    <span class="nv">failed</span><span class="o">=</span>0
</span></code></pre></td></tr></table></div></figure>


<p>問題ないようなので実行してみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>controller<span class="nv">$ </span>ansible-playbook -i centos/hosts centos/site.yml -K
</span><span class='line'>SUDO password:
</span><span class='line'>
</span><span class='line'>PLAY ***************************************************************************
</span><span class='line'>
</span><span class='line'>TASK <span class="o">[</span>setup<span class="o">]</span> *******************************************************************
</span><span class='line'>ok: <span class="o">[</span>192.168.11.14<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>TASK <span class="o">[</span>../common/guest_account : add the user <span class="s2">&quot;guest&quot;</span><span class="o">]</span> **************************
</span><span class='line'>changed: <span class="o">[</span>192.168.11.14<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>PLAY RECAP *********************************************************************
</span><span class='line'>192.168.11.14              : <span class="nv">ok</span><span class="o">=</span>2    <span class="nv">changed</span><span class="o">=</span>2    <span class="nv">unreachable</span><span class="o">=</span>0    <span class="nv">failed</span><span class="o">=</span>0
</span></code></pre></td></tr></table></div></figure>


<p>クライアント側で事後確認してみると、ユーザができている。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>managed_node<span class="nv">$ </span>grep guest /etc/passwd
</span><span class='line'>guest:x:1001:1001::/home/guest:/bin/bash
</span></code></pre></td></tr></table></div></figure>


<h1>3. 他にもいろいろとインストールする</h1>

<p>ruby や zsh などもインストールする。
インストール対象のプロダクト毎に role を作っている。</p>

<p>role の粒度がいまいちどれくらいにしたらよいのかが分からない。</p>

<p>たとえば、ruby role には ruby のインストールだけにとどめておくべきか、
rbenv のような関連ツールまで 1 セットで記述するのが良いか。</p>

<p>まあ、使いながらやりやすい粒度を模索する、でも良いと思う。</p>

<p>また、OS 毎の差異を吸収するため、<code>common/role/HOGE/tasks/</code> 以下に <code>main.yml</code>を置いて、
それぞれのOS毎のymlをインクルードした。
ただ、<code>centos/</code>的な大本からディレクトリを分けて、<code>main.yml</code>でOS判定と
条件分岐しないような配置でも良かったかもなとも思っている。</p>

<p>以下のようなディレクトリ構成となった。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>controller<span class="nv">$ </span>tree laptop_build
</span><span class='line'>laptop_build
</span><span class='line'>|-- centos
</span><span class='line'>|   |-- hosts
</span><span class='line'>|   <span class="sb">`</span>-- site.yml
</span><span class='line'>|-- common
</span><span class='line'>|   |-- dotfiles
</span><span class='line'>|   |   |-- meta
</span><span class='line'>|   |   |   <span class="sb">`</span>-- main.yml
</span><span class='line'>|   |   <span class="sb">`</span>-- tasks
</span><span class='line'>|   |       <span class="sb">`</span>-- main.yml
</span><span class='line'>|   |-- guest_account
</span><span class='line'>|   |   <span class="sb">`</span>-- tasks
</span><span class='line'>|   |       <span class="sb">`</span>-- main.yml
</span><span class='line'>|   |-- ruby
</span><span class='line'>|   |   |-- meta
</span><span class='line'>|   |   |   <span class="sb">`</span>-- main.yml
</span><span class='line'>|   |   <span class="sb">`</span>-- tasks
</span><span class='line'>|   |       <span class="sb">`</span>-- main.yml
</span><span class='line'>|   |-- tmux
</span><span class='line'>|   |   <span class="sb">`</span>-- tasks
</span><span class='line'>|   |       |-- centos.yml
</span><span class='line'>|   |       |-- main.yml
</span><span class='line'>|   |       <span class="sb">`</span>-- ubuntu.yml
</span><span class='line'>|   |-- vim
</span><span class='line'>|   |   <span class="sb">`</span>-- tasks
</span><span class='line'>|   |       <span class="sb">`</span>-- main.yml
</span><span class='line'>|   <span class="sb">`</span>-- zsh
</span><span class='line'>|       <span class="sb">`</span>-- tasks
</span><span class='line'>|           |-- centos.yml
</span><span class='line'>|           |-- main.yml
</span><span class='line'>|           <span class="sb">`</span>-- ubuntu.yml
</span><span class='line'>|-- private_vars
</span><span class='line'>|   <span class="sb">`</span>-- common.yml
</span><span class='line'><span class="sb">`</span>-- vars
</span><span class='line'>    <span class="sb">`</span>-- common.yml
</span></code></pre></td></tr></table></div></figure>


<p>公式ドキュメントを見つつ、yum や git モジュールを利用した。</p>

<p>中身の説明は、体力が切れたので割愛。
詳細は、<a href="https://github.com/momota/laptop-build">momota/laptop-build</a> を参照。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[複数の環境で octopress を使ってブログを書く]]></title>
    <link href="http://momota.github.io/blog/2016/01/29/octopress/"/>
    <updated>2016-01-29T19:03:00+09:00</updated>
    <id>http://momota.github.io/blog/2016/01/29/octopress</id>
    <content type="html"><![CDATA[<p>最近、自宅の Mac Mini が重くなってきたので、別環境でブログを書くべく環境を整備した。
5年目選手くらいなので、そろそろ買い換えたいな…</p>

<p>結論としては、以下を参考にやればOK。deploy のとこでちょいハマりしたのでメモ。</p>

<ul>
<li><a href="http://blog.zerosharp.com/clone-your-octopress-to-blog-from-two-places/">Clone your Octopess to blog From Two Places</a></li>
</ul>


<!-- more -->


<h2>1. 新しいマシンで git cloneする</h2>

<p>octopress のレポジトリは、<code>source</code> と <code>master</code> の 2 つのブランチがある。</p>

<p><code>source</code> はその名の通り、編集する markdown ファイルや scss ファイルなどを管
理するブランチ。</p>

<p><code>master</code> は、公開用のHTMLファイルなどを管理するブランチ。<code>rake generate</code> で
生成されるファイル群を管理するブランチ。</p>

<p>まずは、任意の場所で <code>source</code> ブランチをクローンする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git clone -b <span class="nb">source </span>https://github.com/YOU/YOU.github.io.git blog
</span></code></pre></td></tr></table></div></figure>


<p>次に、<code>master</code> ブランチを <code>_deploy</code> というディレクトリ名でクローンする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>blog
</span><span class='line'><span class="nv">$ </span>git clone https://github.com/YOU/YOU.github.io.git _deploy
</span></code></pre></td></tr></table></div></figure>


<h2>2. インストールする</h2>

<p>octopress をビルドするため、bundler をインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>gem install bundler
</span></code></pre></td></tr></table></div></figure>


<p>別の環境とシェアするので、 rbenv で ruby バージョンを合わせておく。
シェアしなければ octopress が動くバージョンで <code>.ruby-version</code> を上書けばよいと思う。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rbenv install X.X.X-pXXX
</span><span class='line'><span class="nv">$ </span>rbenv <span class="nb">local </span>X.X.X-pXXX
</span><span class='line'><span class="nv">$ </span>rbenv rehash
</span></code></pre></td></tr></table></div></figure>


<p>ビルドする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle install
</span><span class='line'><span class="nv">$ </span>rake setup_github_pages
</span><span class='line'>Enter the <span class="nb">read</span>/write url <span class="k">for </span>your repository
</span><span class='line'><span class="o">(</span>For example, <span class="err">&#39;</span>git@github.com:your_username/your_username.github.com<span class="o">)</span>:
</span></code></pre></td></tr></table></div></figure>


<p>自分の github pages のやつを入力すればOK。</p>

<h2>3. お試しポストしてみる</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rake new_post<span class="se">\[</span><span class="s1">&#39;test&#39;</span><span class="se">\]</span>
</span><span class='line'><span class="c">#=&gt; source/_post/YYYY-MM-DD-test.markdown が生成される</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span><span class="nb">source</span>/_post/YYYY-MM-DD-test.markdown
</span><span class='line'><span class="c">#=&gt; 記事を編集する</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>rake generate
</span><span class='line'><span class="nv">$ </span>rake preview
</span><span class='line'><span class="c">#=&gt; http://localhost:4000/にアクセスして記事が生成できていることを確認する</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>rake deploy
</span></code></pre></td></tr></table></div></figure>


<p>自分の場合、<code>rake deploy</code> でコケた。
<code>git push</code> するところでコケたようだ。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'> ! <span class="o">[</span>rejected<span class="o">]</span>        master -&gt; master <span class="o">(</span>non-fast-forward<span class="o">)</span>
</span><span class='line'> error: failed to push some refs to <span class="s1">&#39;*******************&#39;</span>
</span><span class='line'> hint: Updates were rejected because the tip of your current branch is behind
</span><span class='line'> hint: its remote counterpart. Merge the remote changes <span class="o">(</span>e.g. <span class="s1">&#39;git pull&#39;</span><span class="o">)</span>
</span><span class='line'> hint: before pushing again.
</span><span class='line'> hint: See the <span class="s1">&#39;Note about fast-forwards&#39;</span> in <span class="s1">&#39;git push --help&#39;</span> <span class="k">for </span>details.
</span></code></pre></td></tr></table></div></figure>


<p>認証プロキシを通してる環境だったので、そのせいかなーと疑ったけどちがった。
単純に <code>master</code> ブランチが conflict してるだけだった。</p>

<p><code>git pull</code> して解決した。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>_deploy
</span><span class='line'><span class="nv">$ </span>git pull origin master
</span><span class='line'><span class="c">#=&gt; master ブランチを pull</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> ../
</span><span class='line'><span class="nv">$ </span>rake deploy
</span></code></pre></td></tr></table></div></figure>


<p>あとは、<code>source</code> のほうもcommitしておく。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git add .
</span><span class='line'><span class="nv">$ </span>git commit -m <span class="s2">&quot;posted&quot;</span>
</span><span class='line'><span class="nv">$ </span>git push origin sorce
</span><span class='line'><span class="c">#=&gt; source ブランチも更新する</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CentOS 7 を USB メモリからインストール]]></title>
    <link href="http://momota.github.io/blog/2015/11/15/centos-install/"/>
    <updated>2015-11-15T21:15:00+09:00</updated>
    <id>http://momota.github.io/blog/2015/11/15/centos-install</id>
    <content type="html"><![CDATA[<p>新しい PC が来たので、もともと使ってた東芝 Dynabook R731/B (windows 7)に CentOS7 をインストールした。
今までは DVD-R に ISO を焼いていたけど、自前の PC の DVD ドライブが壊れていたので
USB メモリを使ってインストールしてみた。</p>

<!-- more -->


<h2>1. USB メモリをフォーマットする</h2>

<p>MAC で USB メモリをフォーマット (初期化) しておく。</p>

<ol>
<li>ディスクユーティリティを起動する (アプリケーション > ディスクユーティリティ)</li>
<li>左側のペインからフォーマットしたいデバイスを選択し、<code>消去</code> タブをクリックする</li>
<li>容量や、ドライブ名などから判断</li>
<li>フォーマット形式は MS-DOS (FAT) を選択し、消去をクリックする</li>
</ol>


<h2>2. インストールイメージをダウンロードする</h2>

<p><a href="https://www.centos.org/download/">CentOS7 の DVD ISO をダウンロードする。</a></p>

<p><a href="http://ftp.jaist.ac.jp/pub/Linux/CentOS/7/isos/x86_64/md5sum.txt">md5 ハッシュもチェックしておく。</a></p>

<p>ダウンロードされた ISO イメージが正しくダウンロードされていることを確認する。(linux だと <code>md5sum</code> コマンド)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ md5 CentOS-7-x86_64-DVD-1503-01.iso | grep 99e450fb1b22d2e528757653fcbf5fdc</span></code></pre></td></tr></table></div></figure>


<h2>3. USB メモリにインストールイメージを書き込む</h2>

<p>USB メモリにインストールイメージを書き込む
ターミナルから<code>.iso</code> を <code>.img</code> へ変換する。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ hdiutil convert -format UDRW -o centos7.img DOWNLOADED_ISO.iso
</span><span class='line'>#=&gt; centos7.img.dmg が出力される
</span><span class='line'>$ mv centos7.img.dmg centos7.img</span></code></pre></td></tr></table></div></figure>


<p>USB メモリをアンマウントする。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># USB メモリがどう認識されているかを確認する (/dev/diskXX)
</span><span class='line'>$ diskutil list
</span><span class='line'># USB メモリをアンマウントする (/dev/disk1の場合)
</span><span class='line'>$ diskutil unMountDisk /dev/disk1
</span><span class='line'>$ diskutil list</span></code></pre></td></tr></table></div></figure>


<p>dd で USB メモリにインストールイメージを書き込む。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo dd if=centos.img of=/dev/disk1 bs=1m
</span><span class='line'>$ echo $?
</span><span class='line'>#=&gt;0</span></code></pre></td></tr></table></div></figure>


<p>書き込みは結構時間がかかる。
完了後、「この Mac では読めない形式だ」的なダイアログが出るが無視。</p>

<p>USB メモリをイジェクトして取り外す。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo diskutil eject /dev/disk1</span></code></pre></td></tr></table></div></figure>


<h2>4. ノート PC にインストールする</h2>

<p>※ USB メモリをノートPC側で使える前提。USBメモリのドライバがインストールされた状態からスタート。</p>

<p>BIOS設定画面から起動デバイスの優先順位を変更する。
USB デバイスを最優先にしておく。</p>

<p>インストールイメージを焼いた USB メモリを刺したままノート PC を起動してみて「CentOSをインストール？それともお試しインストール？」みたいな画面が出てくる。
お試しインストールしてみて、キーボードやタッチパッドが使えることを確認する。
確認ができたら再起動し、インストールする。</p>
]]></content>
  </entry>
  
</feed>
