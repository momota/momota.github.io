<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[momota.txt]]></title>
  <link href="http://momota.github.io/atom.xml" rel="self"/>
  <link href="http://momota.github.io/"/>
  <updated>2016-06-24T16:58:27+09:00</updated>
  <id>http://momota.github.io/</id>
  <author>
    <name><![CDATA[momota]]></name>
    <email><![CDATA[makoto.momota@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ネットワークエンジニアのための cisco.vim]]></title>
    <link href="http://momota.github.io/blog/2016/06/24/cisco-dot-vim/"/>
    <updated>2016-06-24T16:42:00+09:00</updated>
    <id>http://momota.github.io/blog/2016/06/24/cisco-dot-vim</id>
    <content type="html"><![CDATA[<p>ネットワークエンジニアのみなさん、こんにちは。</p>

<p><a href="http://momota.github.io/blog/2016/06/22/junos-dot-vim/">ネットワークエンジニアのための junos.vim</a> の cisco バージョンです。</p>

<p>cisco の configuration をカラーリングする vim プラグイン
<a href="https://github.com/momota/cisco.vim">momota/cisco.vim</a> を作ったのでご活用下さい。</p>

<p>対象は、cisco ルータと Catalyst スイッチ、Nexus スイッチです。</p>

<p>色を付けることによって、configuration の解釈を手助けしたり、
configuration 作成時のミスに気づきやすくしたりする効果が期待できます。
(誤ったタームを入力すると色が付かないので)</p>

<p>以下のようにカラーリングします。 (colorscheme は molokai)</p>

<h2>before</h2>

<p><img src="http://momota.github.io/images/20160624_cisco-config_before.png" alt="display_before" /></p>

<h2>after</h2>

<p><img src="http://momota.github.io/images/20160624_cisco-config_after.png" alt="display_after" /></p>

<!-- more -->


<h2>インストール</h2>

<p>NeoBundle で vim プラグインを管理している人は以下の行を<code>.vimrc</code> に追加して</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'>NeoBundle <span class="s1">&#39;momota/cisco.vim&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>:NeoBundleInstall</code> でインストールする。</p>

<p>その他は、<a href="https://github.com/momota/cisco.vim#installation">README/Installation</a> を参照。</p>

<h2>使い方</h2>

<p>cisco config ファイルを <code>.cisco</code> という拡張子で保存して vim で開くか、
cisco config ファイルの先頭に以下行を追加して保存し vim で開くと色付けしてくれる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'><span class="p">!</span> <span class="k">vim</span>: <span class="k">set</span> <span class="nb">ft</span><span class="p">=</span>cisco:
</span></code></pre></td></tr></table></div></figure>


<p>もしくは、cisco config ファイルを vim 開いている時に <code>:set ft=cisco</code> を実行する。</p>

<h1>関連</h1>

<ul>
<li><a href="http://momota.github.io/blog/2016/06/22/junos-dot-vim/">ネットワークエンジニアのための junos.vim</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ネットワークエンジニアのための junos.vim]]></title>
    <link href="http://momota.github.io/blog/2016/06/22/junos-dot-vim/"/>
    <updated>2016-06-22T10:57:00+09:00</updated>
    <id>http://momota.github.io/blog/2016/06/22/junos-dot-vim</id>
    <content type="html"><![CDATA[<p>ネットワークエンジニアのみなさん、こんにちは。</p>

<p>Juniper の configuration をカラーリングする vim プラグイン
<a href="https://github.com/momota/junos.vim">momota/junos.vim</a> を作ったのでご活用下さい。</p>

<p>対象は、Juniper EX シリーズとSRX シリーズです。</p>

<p>色を付けることによって、junos configuration の解釈を手助けしたり、
configuration 作成時のミスに気づきやすくしたりする効果が期待できます。
(誤ったタームを入力すると色が付かないので)</p>

<p>以下のようにカラーリングします。 (colorscheme は molokai)</p>

<h2>before</h2>

<p><img src="http://momota.github.io/images/20160622_junos-confg_before.png" alt="display_before" /></p>

<h2>after</h2>

<p><img src="http://momota.github.io/images/20160622_junos-confg_after.png" alt="display_after" /></p>

<h2>before: <code>display set</code> モード</h2>

<p><img src="http://momota.github.io/images/20160622_junos-confg-set_before.png" alt="display-set_before" /></p>

<h2>after: <code>display set</code> モード</h2>

<p><img src="http://momota.github.io/images/20160622_junos-confg-set_after.png" alt="display-set_after" /></p>

<p>cisco 版はこちら <a href="http://momota.github.io/blog/2016/06/24/cisco-dot-vim/">ネットワークエンジニアのための cisco.vim</a></p>

<!-- more -->


<h2>インストール</h2>

<p>NeoBundle で vim プラグインを管理している人は以下の行を<code>.vimrc</code> に追加して</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'>NeoBundle <span class="s1">&#39;momota/junos.vim&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>:NeoBundleInstall</code> でインストールする。</p>

<p>その他は、<a href="https://github.com/momota/junos.vim#installation">README/Installation</a> を参照。</p>

<h2>使い方</h2>

<p>juniper config ファイルを <code>.junos</code> という拡張子で保存して vim で開くか、
juniper config ファイルの先頭に以下行を追加して保存し vim で開くと色付けしてくれる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># vim: set ft=junos:</span>
</span></code></pre></td></tr></table></div></figure>


<p>もしくは、juniper config ファイルを vim 開いている時に <code>:set ft=junos</code> を実行する。</p>

<h1>関連</h1>

<ul>
<li><a href="http://momota.github.io/blog/2016/06/24/cisco-dot-vim/">ネットワークエンジニアのための cisco.vim</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RuboCop でコーディングスタイルを矯正する]]></title>
    <link href="http://momota.github.io/blog/2016/06/17/rubocop/"/>
    <updated>2016-06-17T17:30:00+09:00</updated>
    <id>http://momota.github.io/blog/2016/06/17/rubocop</id>
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/bbatsov/rubocop/master/logo/rubo-logo-horizontal.png" alt="RuboCop Logo" /></p>

<p><a href="http://note103.hateblo.jp/entry/2016/06/13/074744">textlintで日本語テキストの文字校正を試してみた</a> とかで、lint 系の記事を目にしたので
そろそろ導入してみるか、と思い立った。</p>

<p>RuboCop はRuby の静的コードアナライザ。
<a href="https://github.com/bbatsov/rubocop">bbatsov/rubocop</a></p>

<p><a href="https://github.com/bbatsov/ruby-style-guide">The Ruby Style Guide</a> に沿ったコーディングスタイルに矯正(注意)してくれる。
無駄なスペースが入力されている、とか、無駄な改行が入っている、とか、
この変数1度も使われてないよ?とかクラスの中の行数が多すぎる、とか、
1行の文字数が長すぎる、とか。</p>

<p>大人数で開発していると細かなコーディングスタイルを合わせるだけでも面倒なので
こういうツールによって人間が矯正されると AI 時代に思いを馳せることができて良い感じですね。</p>

<!-- more -->


<h2>RuboCop インストール</h2>

<p>gem でインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>gem install rubocop
</span><span class='line'><span class="nv">$ </span>rubocop -v
</span><span class='line'>0.40.0
</span></code></pre></td></tr></table></div></figure>


<p>実行は<code>rubocop</code> コマンドにチェックしたいスクリプトを渡す。
例えば、以下のような Ruby スクリプトを</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># conding: utf-8</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;date&quot;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">SampleRubocop</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span> <span class="n">key</span> <span class="p">)</span>
</span><span class='line'>    <span class="vi">@key</span> <span class="o">=</span> <span class="n">key</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">hey</span>
</span><span class='line'>    <span class="vi">@key</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="bp">__FILE__</span> <span class="o">==</span> <span class="vg">$0</span>
</span><span class='line'>  <span class="n">hoge</span> <span class="o">=</span> <span class="no">SampleRubocop</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;hoge&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">p</span> <span class="n">hoge</span><span class="o">.</span><span class="n">hey</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>RuboCop でチェックすると以下のような感じで注意を受ける。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">rubocop</span> <span class="n">sample_rubocop</span><span class="o">.</span><span class="n">rb</span>
</span><span class='line'><span class="no">Inspecting</span> <span class="mi">1</span> <span class="n">file</span>
</span><span class='line'><span class="n">C</span>
</span><span class='line'>
</span><span class='line'><span class="ss">Offenses</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'><span class="n">sample_rubocop</span><span class="o">.</span><span class="n">rb</span><span class="p">:</span><span class="mi">2</span><span class="p">:</span><span class="mi">9</span><span class="p">:</span> <span class="ss">C</span><span class="p">:</span> <span class="no">Prefer</span> <span class="n">single</span><span class="o">-</span><span class="n">quoted</span> <span class="n">strings</span> <span class="k">when</span> <span class="n">you</span> <span class="n">don</span><span class="s1">&#39;t need string interpolation or special symbols.</span>
</span><span class='line'><span class="s1">require &quot;date&quot;</span>
</span><span class='line'><span class="s1">        ^^^^^^</span>
</span><span class='line'><span class="s1">sample_rubocop.rb:4:1: C: Extra blank line detected.</span>
</span><span class='line'><span class="s1">sample_rubocop.rb:5:1: C: Missing top-level class documentation comment.</span>
</span><span class='line'><span class="s1">class SampleRubocop</span>
</span><span class='line'><span class="s1">^^^^^</span>
</span><span class='line'><span class="s1">sample_rubocop.rb:6:18: C: Space inside parentheses detected.</span>
</span><span class='line'><span class="s1">  def initialize( key )</span>
</span><span class='line'><span class="s1">                 ^</span>
</span><span class='line'><span class="s1">sample_rubocop.rb:6:22: C: Space inside parentheses detected.</span>
</span><span class='line'><span class="s1">  def initialize( key )</span>
</span><span class='line'><span class="s1">                     ^</span>
</span><span class='line'><span class="s1">sample_rubocop.rb:15:1: C: Extra blank line detected.</span>
</span><span class='line'><span class="s1">sample_rubocop.rb:16:16: C: Prefer $PROGRAM_NAME over $0.</span>
</span><span class='line'><span class="s1">if __FILE__ == $0</span>
</span><span class='line'><span class="s1">               ^^</span>
</span><span class='line'><span class="s1">sample_rubocop.rb:17:28: C: Prefer single-quoted strings when you don&#39;</span><span class="n">t</span> <span class="n">need</span> <span class="n">string</span> <span class="n">interpolation</span> <span class="ow">or</span> <span class="n">special</span> <span class="n">symbols</span><span class="o">.</span>
</span><span class='line'>  <span class="n">hoge</span> <span class="o">=</span> <span class="no">SampleRubocop</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;hoge&quot;</span><span class="p">)</span>
</span><span class='line'>                           <span class="o">^^^^^^</span>
</span><span class='line'><span class="n">sample_rubocop</span><span class="o">.</span><span class="n">rb</span><span class="p">:</span><span class="mi">20</span><span class="p">:</span><span class="mi">1</span><span class="p">:</span> <span class="ss">C</span><span class="p">:</span> <span class="mi">1</span> <span class="n">trailing</span> <span class="n">blank</span> <span class="n">lines</span> <span class="n">detected</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>無駄な改行とかスペースを注意されていますね。修正しましょう。</p>

<p><a href="https://github.com/bbatsov/ruby-style-guide">The Ruby Style Guide</a> が自分(たち) の
コーディングスタイルに合わない場合は、カスタマイズが可能。
<code>.rubocop.yml</code> を編集する。</p>

<p>いったん、今書いているものを正しいコーディングスタイルとみなした <code>.rubocop.yml</code> を生成するには
<code>--auto-gen-config</code> オプションをつけて rubocop を実行する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /path/to/project
</span><span class='line'><span class="nv">$ </span>rubocop --auto-gen-config
</span><span class='line'><span class="c"># =&gt; /path/to/project/.rubocp_todo.yml が出力される</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記コマンドにより、プロジェクトディレクトリ(/path/to/project)配下のコードが解析されて、cop と
呼ばれるルール群が <code>.rubocp_todo.yml</code> というファイルで出力される。
<code>.rubocp_todo.yml</code> の中身は、以下のように cop 単位にそのプロジェクトに沿った設定が入ったものが
出力されている。</p>

<p>以下は、出力された <code>.rubocp_todo.yml</code> の一部を抜粋。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1"># -- snip --</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1"># Offense count: 113</span>
</span><span class='line'><span class="c1"># Configuration parameters: AllowHeredoc, AllowURI, URISchemes.</span>
</span><span class='line'><span class="c1"># URISchemes: http, https</span>
</span><span class='line'><span class="l-Scalar-Plain">Metrics/LineLength</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">Max</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">137</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1"># -- snip --</span>
</span><span class='line'><span class="c1">#</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記は、以下を示している。</p>

<ul>
<li>デフォルト 1 行 80 文字までがコーディング規約となっているが最大 137 文字の行がある

<ul>
<li>1 行あたり最大 137 文字まで許容する、という設定</li>
</ul>
</li>
<li>1 行 80 文字以上 (違反: offense) に該当する箇所が 113 件</li>
</ul>


<p><code>.rubocp_todo.yml</code> の修正不可能・修正困難部分のみを残したりチューニングして、<code>.rubocop.yml</code> に
リネームしたら自分たちのコーディングスタイルに沿った現実的なルールを適用できる。</p>

<p>標準のコーディング規約に沿ってコードを修正していく場合は、<code>.rubocop.yml</code> に以下の行を追加するか</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">inherit_from</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">.rubocop-todo.yml</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>rubocop --config .rubocop_todo.yml</code> を実行して、違反をつぶしていく。</p>

<p>コードの自動修正機能もある。
<code>.rubocop_todo.yml</code> に <code># Cop supports --auto-correct.</code> と記述されている cop については、以下の
コマンドにより自動修正が可能。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rubocop -a
</span><span class='line'><span class="c"># $ rubocop --auto-correct でもOK</span>
</span></code></pre></td></tr></table></div></figure>


<h2>vim と RuboCop を連携する</h2>

<p>コーディングしながら RuboCop に注意されたいので、vim と連携する。</p>

<p>vim プラグインの <a href="https://github.com/scrooloose/syntastic">scrooloose/syntastic</a> を入れる。</p>

<p>NeoBundle を使っているので、手持ちの <code>vimrc</code> を以下のように修正し、<code>:NeoBundleInstall</code> してインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gi">+ NeoBundle &#39;scrooloose/syntastic&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="gi">+ &quot; ----------------------------------------------------------------------</span>
</span><span class='line'><span class="gi">+ &quot; syntastic</span>
</span><span class='line'><span class="gi">+ let g:syntastic_mode_map = { &#39;mode&#39;: &#39;active&#39; }</span>
</span><span class='line'><span class="gi">+ let g:syntastic_ruby_checkers = [&#39;rubocop&#39;]</span>
</span></code></pre></td></tr></table></div></figure>


<p>そうすると、<code>:SyntaxCheck</code> を実行するか、保存<code>:w</code> のタイミングで RuboCop が動いてくれる。
以下のように指摘してくれる。</p>

<p><img src="http://momota.github.io/images/syntastic_ss.png" alt="syntastic_ss" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[seleniumノウハウ]]></title>
    <link href="http://momota.github.io/blog/2016/05/28/selenium-know-how/"/>
    <updated>2016-05-28T16:57:00+09:00</updated>
    <id>http://momota.github.io/blog/2016/05/28/selenium-know-how</id>
    <content type="html"><![CDATA[<p><img src="http://momota.github.io/images/selenium.png" alt="selenium" /></p>

<p><a href="http://momota.github.io/blog/2016/02/26/selenium/">ブラウザ操作の自動化: Selenium と Ruby</a> でも書いたが、
selenium が便利すぎて、最近よくスクリプトを書くようになった。</p>

<p>以下のようなノウハウが溜まってきたので、ここらで放出する。</p>

<ul>
<li>ウィンドウサイズのリサイズ</li>
<li>ウィンドウ位置の移動</li>
<li>スクリーンショットの取得</li>
<li>要素セレクタメソッドの使い分け</li>
<li>ドロップダウンリストの選択</li>
<li>マウスオーバ (hover)</li>
<li>フレーム移動</li>
<li>ポップアップダイアログの扱い</li>
<li>コード量を減らすためのモンキーパッチ</li>
<li>よく採るプログラム構造</li>
</ul>


<p>インストール方法などは <a href="http://momota.github.io/blog/2016/02/26/selenium/">ブラウザ操作の自動化: Selenium と Ruby</a>
を参照。</p>

<p>selenium用スクリプト開発のノウハウというべきかコツといういべきかアレな感じだが、結局、
スクレイピングと同様にHTML構造を理解することが必要なのでブラウザ付属の開発ツールが
手離せない。</p>

<ul>
<li><a href="https://developer.mozilla.org/ja/docs/Tools">Firefox 開発ツール</a></li>
<li><a href="https://developer.chrome.com/devtools">chrome devtools</a></li>
</ul>


<!-- more -->


<p>これ以降のサンプルコードは以下を定義しているものとする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s2">&quot;selenium-webdriver&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">driver</span> <span class="o">=</span> <span class="ss">Selenium</span><span class="p">:</span><span class="ss">:WebDriver</span><span class="o">.</span><span class="n">for</span> <span class="ss">:firefox</span>
</span></code></pre></td></tr></table></div></figure>


<h2>ウィンドウサイズのリサイズ</h2>

<p><code>driver.manage.window.resize_to</code>の引数にリサイズするサイズ情報(width, height)を渡す。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">width</span>  <span class="o">=</span> <span class="mi">100</span>
</span><span class='line'><span class="n">height</span> <span class="o">=</span> <span class="mi">100</span>
</span><span class='line'><span class="n">driver</span><span class="o">.</span><span class="n">manage</span><span class="o">.</span><span class="n">window</span><span class="o">.</span><span class="n">resize_to</span><span class="p">(</span><span class="n">width</span><span class="p">,</span> <span class="n">height</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>現在のサイズを取得して、相対的にリサイズしたい場合は以下のようにする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">size</span> <span class="o">=</span> <span class="n">driver</span><span class="o">.</span><span class="n">manage</span><span class="o">.</span><span class="n">window</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'><span class="n">size</span><span class="o">.</span><span class="n">width</span>  <span class="o">+=</span> <span class="mi">100</span>
</span><span class='line'><span class="n">size</span><span class="o">.</span><span class="n">height</span> <span class="o">+=</span> <span class="mi">100</span>
</span><span class='line'><span class="n">driver</span><span class="o">.</span><span class="n">manage</span><span class="o">.</span><span class="n">window</span><span class="o">.</span><span class="n">size</span> <span class="o">=</span> <span class="n">size</span>
</span></code></pre></td></tr></table></div></figure>


<h2>ウィンドウ位置の移動</h2>

<p><code>driver.manage.window.move_to</code>の引数に移動したい場所の座標情報(x, y)を渡す。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">x</span> <span class="o">=</span> <span class="mi">100</span>
</span><span class='line'><span class="n">y</span> <span class="o">=</span> <span class="mi">100</span>
</span><span class='line'><span class="n">driver</span><span class="o">.</span><span class="n">manage</span><span class="o">.</span><span class="n">window</span><span class="o">.</span><span class="n">move_to</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>現在のウィンドウ位置を取得して、相対的にリサイズしたい場合は以下のようにする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">pos</span> <span class="o">=</span> <span class="n">driver</span><span class="o">.</span><span class="n">manage</span><span class="o">.</span><span class="n">window</span><span class="o">.</span><span class="n">position</span>
</span><span class='line'><span class="n">pos</span><span class="o">.</span><span class="n">x</span> <span class="o">+=</span> <span class="mi">100</span>
</span><span class='line'><span class="n">pos</span><span class="o">.</span><span class="n">y</span> <span class="o">+=</span> <span class="mi">100</span>
</span><span class='line'><span class="n">driver</span><span class="o">.</span><span class="n">manage</span><span class="o">.</span><span class="n">window</span><span class="o">.</span><span class="n">position</span> <span class="o">=</span> <span class="n">pos</span>
</span></code></pre></td></tr></table></div></figure>


<h2>スクリーンショットの取得</h2>

<p>開いているページのスクリーンショットを撮りたい場合は、<code>driver.save_screenshot</code> に保存先のファイル名を指定するだけ。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">driver</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">&quot;https://www.google.co.jp/&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">driver</span><span class="o">.</span><span class="n">save_screenshot</span><span class="p">(</span><span class="s2">&quot;/path/to/save/screenshot.png&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>ページ全体を撮りたいのに、frame 構造が邪魔をして、スクロールしなければ全体が撮れない場合がある。
ちょっと、調べたところ <code>driver.execute_script("some script")</code> で javascript を利用してスクロールをしている人がいたり、
<code>Selenium::WebDriver::Element.location_once_scrolled_into_view</code> を使ってスクロールしている人がいたり。
どちらにしても、コンテンツ表示上の高さを取得して、1スクロール分の長さをデクリメントしていっているような処理。</p>

<p>自分の場合は、めんどくさかったので、上述したリサイズ方法を使ってスクロールがいらないくらいウィンドウサイズを大きくして、
スクリーンショットを撮るという荒業を繰り広げている。</p>

<h2>要素セレクタメソッドの使い分け</h2>

<p>要素セレクタメソッドは <code>find_element</code> と <code>find_elements</code> の2種類。
そのメソッド名の単数形・複数形の通りなのだが、以下のような違いがある</p>

<ul>
<li><code>find_element</code>

<ul>
<li>指定した引数にマッチする最初の要素 (<code>WebDriver::Element</code>) を <strong>1つ</strong> 返す。</li>
<li>マッチする要素がなければ例外 (<code>NoSuchElementError</code>) を投げる。</li>
</ul>
</li>
<li><code>find_elements</code>

<ul>
<li>指定した引数にマッチする要素を詰めた配列 (<code>Array&lt;WebDriver::Element&gt;</code>) を返す。</li>
<li>マッチする要素がなければ、空の配列 (<code>Array</code>) を返す。</li>
</ul>
</li>
</ul>


<p>テーブルの <code>&lt;tr&gt;</code> 要素やリストの <code>&lt;li&gt;</code> 要素に対してイテレーション処理するときには <code>find_elements</code> が便利。
以下は、例。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># リストのリンクをクリックしていくイテレーションの例</span>
</span><span class='line'><span class="n">elements</span> <span class="o">=</span> <span class="n">driver</span><span class="o">.</span><span class="n">find_elements</span><span class="p">(</span><span class="ss">:css</span><span class="p">,</span> <span class="s2">&quot;#some-list &gt; li&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">elements</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span>
</span><span class='line'>  <span class="n">link</span> <span class="o">=</span> <span class="n">e</span><span class="o">.</span><span class="n">find_element</span><span class="p">(</span><span class="ss">:tag_name</span><span class="p">,</span> <span class="s2">&quot;a&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">link</span><span class="o">.</span><span class="n">click</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>要素セレクタメソッドの引数には、<code>find_element(:how, "what")</code> のように symbol と文字列を渡す。
渡す引数は、<code>find_elements</code> も同じ。</p>

<p>指定できるsymbolの種類は以下。</p>

<table>
<thead>
<tr>
<th>symbol             </th>
<th> 対象</th>
</tr>
</thead>
<tbody>
<tr>
<td>:class             </td>
<td> クラス名 (属性名 class)</td>
</tr>
<tr>
<td>:class_name        </td>
<td> 上記 :class と同じ</td>
</tr>
<tr>
<td>:id                </td>
<td> ID (属性名 id)</td>
</tr>
<tr>
<td>:link_text         </td>
<td> <code>&lt;a&gt;</code> タグのテキスト</td>
</tr>
<tr>
<td>:link              </td>
<td> 上記 :link_text と同じ</td>
</tr>
<tr>
<td>:partial_link_text </td>
<td> <code>&lt;a&gt;</code> タグのテキストの部分文字列</td>
</tr>
<tr>
<td>:name              </td>
<td> name (属性名 name)</td>
</tr>
<tr>
<td>:tag_name          </td>
<td> タグ名</td>
</tr>
<tr>
<td>:xpath             </td>
<td> xpath で指定</td>
</tr>
<tr>
<td>:css               </td>
<td> css セレクタ で指定</td>
</tr>
</tbody>
</table>


<p><a href="http://www.rubydoc.info/gems/selenium-webdriver/0.0.28/Selenium/WebDriver/Find">参考 Module: Selenium::WebDriver::Find</a></p>

<h2>ドロップダウンリストの選択</h2>

<p>Selenium IDEでRubyコードの出力をしようとすると、ドロップダウンリストの選択をする処理部分がERRORに
なってコメントアウトされることがある。(今のSelenium IDEバージョンでは大丈夫そう)</p>

<p>ドロップダウンリストの選択は以下のように書けばOK。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="ss">Selenium</span><span class="p">:</span><span class="ss">:WebDriver</span><span class="o">::</span><span class="ss">Support</span><span class="p">:</span><span class="ss">:Select</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">driver</span><span class="o">.</span><span class="n">find_element</span><span class="p">(</span><span class="ss">:tag_name</span><span class="p">,</span> <span class="s2">&quot;select&quot;</span><span class="p">))</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">select_by</span><span class="p">(</span><span class="ss">:text</span><span class="p">,</span> <span class="s2">&quot;ほげほげ&quot;</span><span class="p">)</span>  <span class="c1"># 表示テキストで選択</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">select_by</span><span class="p">(</span><span class="ss">:value</span><span class="p">,</span> <span class="s2">&quot;value1&quot;</span><span class="p">)</span>   <span class="c1"># valueの値で選択</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">select_by</span><span class="p">(</span><span class="ss">:index</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>          <span class="c1"># index(0, 1, 2, ...)で選択</span>
</span></code></pre></td></tr></table></div></figure>


<h2>マウスオーバ (hover)</h2>

<p>例えば、ナビゲーションメニューなどが、通常時には折りたたまれていて、メニュー上にマウスオーバした場合に、
子メニューが展開されるようなページがある。
折りたたまれているときに、子メニューHTMLをロードできていないようなページのときは、ユーザ操作と同じように
マウスオーバしてあげる必要がある。</p>

<p>以下のようにマウスオーバしたい要素を指定して、<code>driver.mouse.move_to</code> を呼べば良い。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">e</span> <span class="o">=</span> <span class="n">driver</span><span class="o">.</span><span class="n">find_element</span><span class="p">(</span><span class="ss">:id</span><span class="p">,</span> <span class="s2">&quot;menu&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">driver</span><span class="o">.</span><span class="n">mouse</span><span class="o">.</span><span class="n">move_to</span><span class="p">(</span> <span class="n">e</span> <span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>フレーム移動</h2>

<p>frame や iframe 要素を使っているサイトで、そのフレーム内の要素に対して操作したい場合、当該フレームへ切り替える操作が必要となる。</p>

<p>以下のようにスイッチしたいフレーム要素を指定して、<code>driver.switch_to.frame</code> を呼べば良い。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">frame</span> <span class="o">=</span> <span class="n">driver</span><span class="o">.</span><span class="n">find_element</span><span class="p">(</span><span class="ss">:id</span><span class="p">,</span> <span class="s2">&quot;frame&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">driver</span><span class="o">.</span><span class="n">switch_to</span><span class="o">.</span><span class="n">frame</span><span class="p">(</span> <span class="n">frame</span> <span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>フレームを移動してから、いったん最上位のフレームにに戻りたい場合は、以下。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">driver</span><span class="o">.</span><span class="n">switch_to</span><span class="o">.</span><span class="n">window</span><span class="p">(</span> <span class="n">driver</span><span class="o">.</span><span class="n">window_handle</span> <span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">frame</span> <span class="o">=</span> <span class="n">driver</span><span class="o">.</span><span class="n">find_element</span><span class="p">(</span><span class="ss">:id</span><span class="p">,</span> <span class="s2">&quot;top-frame&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">driver</span><span class="o">.</span><span class="n">switch_to</span><span class="o">.</span><span class="n">frame</span><span class="p">(</span> <span class="n">frame</span> <span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>ポップアップダイアログの扱い</h2>

<p>「マジでこのページから移動する?」的なjavascriptによるポップアップダイアログを表示するページがある。
このポップアップダイアログを強制的に閉じるには以下のようにする。</p>

<p><code>.accept</code> ではい、<code>.dismiss</code>でいいえを押して閉じる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">begin</span>
</span><span class='line'>  <span class="n">alert_box</span> <span class="o">=</span> <span class="n">driver</span><span class="o">.</span><span class="n">switch_to</span><span class="o">.</span><span class="n">alert</span>
</span><span class='line'>  <span class="n">alert_box</span><span class="o">.</span><span class="n">accept</span>     <span class="c1"># 「はい」「OK」ボタンクリック</span>
</span><span class='line'>  <span class="c1"># alert_box.dismiss  # 「いいえ」「cancel」ボタンクリック</span>
</span><span class='line'><span class="k">rescue</span> <span class="ss">Selenium</span><span class="p">:</span><span class="ss">:WebDriver</span><span class="o">::</span><span class="ss">Error</span><span class="p">:</span><span class="ss">:NoSuchAlertError</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>  <span class="c1"># ダイアログがポップアップしない場合、例外を投げるので、何もせずにスルー</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>コード量を減らすためのモンキーパッチ</h2>

<p>たとえば、ログインなどの処理の際、フォームへ文字列を送る <code>send_keys</code> 前にいつも <code>.clear</code> しているので
もう <code>send_keys</code> の中に <code>.clear</code> 処理を入れ込んでしまえと思った。</p>

<p>また、<code>input</code> タグの値を取得するときは、<code>.attribute("value")</code> と長ったらしく書く必要があるので <code>.value</code>メソッドを
定義してしまおうと思った。checkbox のチェック有無も同じく。</p>

<p>そこで、<code>Selenium::WebDriver::Element</code> を拡張するため、以下のようなモンキーパッチを書く。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">ElementExtension</span>
</span><span class='line'>  <span class="n">refine</span> <span class="ss">Selenium</span><span class="p">:</span><span class="ss">:WebDriver</span><span class="o">::</span><span class="no">Element</span> <span class="k">do</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">send_keys</span><span class="p">(</span> <span class="n">str</span> <span class="p">)</span>
</span><span class='line'>      <span class="nb">self</span><span class="o">.</span><span class="n">clear</span>
</span><span class='line'>      <span class="k">super</span><span class="p">(</span> <span class="n">str</span> <span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">value</span>
</span><span class='line'>      <span class="nb">self</span><span class="o">.</span><span class="n">attribute</span><span class="p">(</span><span class="s2">&quot;value&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">checked?</span>
</span><span class='line'>      <span class="nb">self</span><span class="o">.</span><span class="n">attribute</span><span class="p">(</span><span class="s2">&quot;checked&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">nil?</span> <span class="p">?</span> <span class="kp">false</span> <span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">using</span> <span class="no">ElementExtension</span>
</span></code></pre></td></tr></table></div></figure>


<p>そうすると以下のようにコード量を減らせる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'># たとえば、ログイン処理
</span><span class='line'>user     = &quot;USER&quot;
</span><span class='line'>password = &quot;PASSWORD&quot;
</span><span class='line'>
</span><span class='line'><span class="gd">- driver.find_element(:id, &quot;loginuser&quot;).clear</span>
</span><span class='line'>driver.find_element(:id, &quot;loginuser&quot;).send_keys( user )
</span><span class='line'><span class="gd">- driver.find_element(:id, &quot;loginpass&quot;).clear</span>
</span><span class='line'>driver.find_element(:id, &quot;loginpass&quot;).send_keys( password )
</span><span class='line'>driver.find_element(:id, &quot;submit&quot;).click
</span><span class='line'>
</span><span class='line'>
</span><span class='line'># &lt;input&gt;の値を取得する処理
</span><span class='line'><span class="gd">- hostname = driver.find_element(:id, &quot;hostname&quot;).attribute(&quot;value&quot;)</span>
</span><span class='line'><span class="gi">+ hostname = driver.find_element(:id, &quot;hostname&quot;).value</span>
</span><span class='line'>
</span><span class='line'># チェックボックスがチェックされているかどうか
</span><span class='line'>checkbox = driver.find_element(:id, &quot;some-checkbox&quot;)
</span><span class='line'><span class="gd">- do_something if checkbox.attribute(&quot;checked&quot;).nil?</span>
</span><span class='line'><span class="gi">+ do_something if checkbox.checked?</span>
</span></code></pre></td></tr></table></div></figure>


<p>モンキーパッチの書き方は以下を参考にした。</p>

<ul>
<li><a href="http://melborne.github.io/2013/08/30/monkey-patching-for-prudent-rubyists/">分別のあるRubyモンキーパッチャーになるために</a></li>
</ul>


<h2>よく採るプログラム構造</h2>

<p>よく採るプログラム構造は以下。</p>

<ul>
<li>操作ターゲットとなるサイト単位にクラスを作る</li>
<li>処理の内容にしたがって、メソッドを作る。以下の様な粒度。

<ul>
<li>サインイン</li>
<li>リスト表示</li>
<li>自動入力と申請</li>
</ul>
</li>
<li>アカウント情報や入力データはYAMLファイルなどに書き出しておく</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># conding: utf-8</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;selenium-webdriver&quot;</span>
</span><span class='line'><span class="c1"># その他必要に応じてrequire</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1"># Selenium::WebDriver::Element の拡張</span>
</span><span class='line'><span class="k">module</span> <span class="nn">Elementextension</span>
</span><span class='line'>  <span class="c1"># 上記モンキーパッチの章を参照</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">using</span> <span class="no">Elementextension</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1"># 本体</span>
</span><span class='line'><span class="k">class</span> <span class="nc">SomeSite</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span>
</span><span class='line'>    <span class="c1"># 初期化処理</span>
</span><span class='line'>    <span class="c1"># 定数をセットしたり、webdriverを生成してアクセスしたり。</span>
</span><span class='line'>    <span class="vi">@ss_dir</span>  <span class="o">=</span> <span class="s2">&quot;./screenshot/&quot;</span>
</span><span class='line'>    <span class="no">FileUtils</span><span class="o">.</span><span class="n">mkdir_p</span><span class="p">(</span> <span class="vi">@ss_dir</span> <span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="vi">@driver</span>  <span class="o">=</span> <span class="ss">Selenium</span><span class="p">:</span><span class="ss">:WebDriver</span><span class="o">.</span><span class="n">for</span> <span class="ss">:firefox</span>
</span><span class='line'>    <span class="n">base_url</span> <span class="o">=</span> <span class="s2">&quot;http://somesite.com&quot;</span>
</span><span class='line'>    <span class="vi">@driver</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">base_url</span> <span class="o">+</span> <span class="s2">&quot;/index.html&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">sign_in</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">password</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># サインイン処理</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">do_something</span>
</span><span class='line'>    <span class="c1"># やりたいことを書く</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">close</span>
</span><span class='line'>    <span class="c1"># 終了時に実行する処理を書く</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>  <span class="c1"># privat method を定義する</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">get_screenshot</span><span class="p">(</span> <span class="n">str</span> <span class="p">)</span>
</span><span class='line'>    <span class="n">now</span> <span class="o">=</span> <span class="no">DateTime</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s2">&quot;%Y%m%d%H%M%S&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@driver</span><span class="o">.</span><span class="n">save_screenshot</span><span class="p">(</span><span class="vi">@ss_dir</span> <span class="o">+</span> <span class="s2">&quot;_&quot;</span> <span class="o">+</span> <span class="n">str</span> <span class="o">+</span> <span class="s2">&quot;_&quot;</span> <span class="o">+</span> <span class="n">now</span> <span class="o">+</span> <span class="s2">&quot;.png&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1"># ----------------------------------------------------------------------</span>
</span><span class='line'><span class="c1"># main</span>
</span><span class='line'><span class="c1"># ----------------------------------------------------------------------</span>
</span><span class='line'><span class="k">if</span> <span class="bp">__FILE__</span> <span class="o">==</span> <span class="vg">$0</span>
</span><span class='line'>  <span class="c1"># サインインに必要なアカウント情報はYAMLなどに書いておいて、それを読む</span>
</span><span class='line'>  <span class="n">y</span>        <span class="o">=</span> <span class="no">YAML</span><span class="o">.</span><span class="n">load_file</span><span class="p">(</span><span class="s2">&quot;/path/to/yaml.yml&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">user</span>     <span class="o">=</span>  <span class="n">y</span><span class="o">[</span><span class="s2">&quot;account&quot;</span><span class="o">][</span><span class="s2">&quot;user&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="n">password</span> <span class="o">=</span>  <span class="n">y</span><span class="o">[</span><span class="s2">&quot;account&quot;</span><span class="o">][</span><span class="s2">&quot;password&quot;</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">hoge</span> <span class="o">=</span> <span class="no">SomeSite</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>  <span class="n">hoge</span><span class="o">.</span><span class="n">sign_in</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">password</span><span class="p">)</span>
</span><span class='line'>  <span class="n">hoge</span><span class="o">.</span><span class="n">do_something</span>
</span><span class='line'>  <span class="n">hoge</span><span class="o">.</span><span class="n">close</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>関連</h2>

<ul>
<li><a href="http://momota.github.io/blog/2016/02/26/selenium/">ブラウザ操作の自動化: Selenium と Ruby</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ブラウザ操作の自動化: selenium と ruby]]></title>
    <link href="http://momota.github.io/blog/2016/02/26/selenium/"/>
    <updated>2016-02-26T10:41:00+09:00</updated>
    <id>http://momota.github.io/blog/2016/02/26/selenium</id>
    <content type="html"><![CDATA[<p>selenium と ruby を使ってブラウザ GUI 操作を自動化する。</p>

<p><a href="http://www.seleniumhq.org/">selenium</a> は、Web アプリケーションの自動テストのためのツール。
レグレッションテストによく使われているようだ。</p>

<p>selenium は、ブラウザ操作シナリオを事前に設定して、シナリオ通りに実行してくれる。
シナリオ設定といっても、Firefoxプラグインの Selenium IDE などを使うと操作を
記録してくれる機能があるのでそこまで大変ではない。
詳細は、<a href="http://www.ruby.or.jp/ja/tech/development_tool/reg_test/">Ruby アソシエーション &ndash; selenium</a> の &ldquo;1.2 テストの作成&rdquo;
あたりを参照してほしい</p>

<p>selenium は、クロスブラウザのツールで、IE を使って IE限定みたいなサイトでも使える。
IE や Chrome で使うには各 Selenium WebDriver が必要となる。</p>

<p>テスト用と言いつつ、使い道はいろいろとある。</p>

<ul>
<li>社内のもろもろの web 申請は、入力項目が多いのに、毎回ほぼ同じ内容を入力させるので
フォーム入力の省力化として利用している。</li>
<li>hp さんの iLO や日立さんストレージ、F5 さんのBIG-IP みたいな web 画面から設定変更するような機器の
自動構築なんかもできそう。

<ul>
<li>スクリーンショットも撮れるので、エビデンスもついでに取得可能。</li>
<li>vCenter とかも操作できないかという思惑はある。</li>
<li>AWS とかも操作できるけど、そもそも API が豊富に備わっているから不要か。</li>
</ul>
</li>
<li>あえて selenium を使わなくてもいいけど、クローリングやスクレイピングとかもできる</li>
</ul>


<p>この selenium は、Java や Python, Ruby などのプログラミング言語からシナリオ操作が可能で
ループ処理などするにはめちゃくちゃ便利。</p>

<p>いままでは Firefox プラグインだけで利用していたが、Ruby と絡めると便利すぎて感謝しかなかった。
ここでは、サンプルとして、はてなブックマークのホットエントリトップ5を一括で開くことを
やってみたい。</p>

<p>ちなみに似たツールに iMacro がある。</p>

<p>関連記事: <a href="http://momota.github.io/blog/2016/05/28/selenium-know-how/">seleniumノウハウ</a></p>

<!-- more -->


<p>環境は、以下。</p>

<table>
<thead>
<tr>
<th>モノ         </th>
<th> バージョン</th>
</tr>
</thead>
<tbody>
<tr>
<td>OS           </td>
<td> Windows 8.1 Pro</td>
</tr>
<tr>
<td>ブラウザ     </td>
<td> Firefox ESR 38.6.1</td>
</tr>
<tr>
<td>Selenium IDE </td>
<td> 2.9.0</td>
</tr>
<tr>
<td>Ruby         </td>
<td> 2.2.4p230 (2015-12-16 revision 53155) [x64-mingw32]</td>
</tr>
<tr>
<td>gem          </td>
<td> selenium-webdriver (2.52.0)</td>
</tr>
</tbody>
</table>


<h1>準備</h1>

<p>Windows に Rubyをインストールする。</p>

<p><a href="http://rubyinstaller.org/downloads/">RubyInstaller</a> の RubyInstallers からインストーラをダウンロードし、実行する。
インストール時、 PATH を通すチェックボックスにチェックを入れる。</p>

<p>続いてDevelopment Kitをインストールする。<a href="http://www.rubylife.jp/railsinstall/rails/index4.html">この辺を参考に。</a>
これも RubyInstaller の Development Kit からダウンロードして、解凍する。
解答したファイルに <code>dk.rb</code> があるのでコマンドプロンプトから以下のように実行する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>&gt; <span class="nb">cd</span> <span class="o">{</span>DEVELOPMENT KIT の解凍ディレクトリ<span class="o">}</span>
</span><span class='line'>&gt; ruby dk.rb init
</span><span class='line'>&gt; ruby dk.rb install
</span></code></pre></td></tr></table></div></figure>


<p>次に、<code>selenium-webdriver</code> をインストールする。
Ruby をインストールしたことで、一緒に gem も使えるようになっているはずなので、
コマンドプロンプトから以下を打鍵。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>&gt; gem install selenium-webdriver
</span></code></pre></td></tr></table></div></figure>


<p>インストールの確認。irb (もしくは pry) とかで require できることを確認する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>&gt;irb
</span><span class='line'>irb<span class="o">(</span>main<span class="o">)</span>:001:0&gt; require <span class="s2">&quot;selenium-webdriver&quot;</span>
</span><span class='line'><span class="o">=</span>&gt; <span class="nb">true</span>
</span></code></pre></td></tr></table></div></figure>


<h1>はてなホットエントリのトップ5エントリーを開く</h1>

<p>ここではサンプルとして、はてなブックマークのホットエントリからトップ5 をブラウザで
次々に開くよう <code>hatena.rb</code> を書く。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s2">&quot;selenium-webdriver&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Hatena</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span>
</span><span class='line'>    <span class="c1"># ブラウザの起動</span>
</span><span class='line'>    <span class="vi">@driver</span> <span class="o">=</span> <span class="ss">Selenium</span><span class="p">:</span><span class="ss">:WebDriver</span><span class="o">.</span><span class="n">for</span> <span class="ss">:firefox</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># ベース URL</span>
</span><span class='line'>    <span class="vi">@base_url</span> <span class="o">=</span> <span class="s2">&quot;http://b.hatena.ne.jp&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">open_top5</span>
</span><span class='line'>    <span class="c1"># ベースURL を開く</span>
</span><span class='line'>    <span class="vi">@driver</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="vi">@base_url</span> <span class="o">+</span> <span class="s2">&quot;/hotentry&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># CSS セレクタで要素を特定してクリックする</span>
</span><span class='line'>    <span class="mi">5</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>      <span class="vi">@driver</span><span class="o">.</span><span class="n">find_element</span><span class="p">(</span><span class="ss">:css</span><span class="p">,</span> <span class="s2">&quot;a[data-entryrank=&#39;</span><span class="si">#{</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="si">}</span><span class="s2">&#39;]&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">click</span>
</span><span class='line'>      <span class="nb">sleep</span> <span class="mi">1</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="bp">__FILE__</span> <span class="o">==</span> <span class="vg">$0</span>
</span><span class='line'>  <span class="n">hatena</span> <span class="o">=</span> <span class="no">Hatena</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>  <span class="n">hatena</span><span class="o">.</span><span class="n">open_top5</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>コマンドプロンプトからこのスクリプトを実行すると次々とブラウザが起動してくる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>&gt; ruby hatena.rb
</span></code></pre></td></tr></table></div></figure>


<p>こんな感じ。</p>

<p><img src="http://momota.github.io/images/20160226_selenium.gif" alt="hatena_screenshot" /></p>

<p><code>find_element</code> メソッドは、CSSセレクタやxpath、タグ名、タグのID、class名などを指定できる。</p>

<p>フォームになにか値を突っ込みたいときは、<code>@driver.find_element(~~~~~).send_keys "VALUE"</code> みたいな感じで
要素を特定したあと、<code>send_keys</code> で文字列を渡してあげればよい。
POST は、ボタンを find_element してあげて<code>.click</code> (<code>.submit</code> でも良さ気) でOK。</p>

<p>スクリーンショットを撮るときは、<code>@driver.save_screenshot "./screenshot.png"</code> みたいな感じ。</p>

<h1>参考</h1>

<ul>
<li><a href="http://www.ruby.or.jp/ja/tech/development_tool/reg_test/">Ruby アソシエーション &ndash; selenium</a></li>
<li><a href="http://qiita.com/kkakizaki/items/5a0e6f753193f2a1514f">Selenium 入門 &ndash; Qiita</a></li>
<li>関連記事: <a href="http://momota.github.io/blog/2016/05/28/selenium-know-how/">seleniumノウハウ</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ansible でノートPCをセットアップ]]></title>
    <link href="http://momota.github.io/blog/2016/02/08/ansible/"/>
    <updated>2016-02-08T09:42:00+09:00</updated>
    <id>http://momota.github.io/blog/2016/02/08/ansible</id>
    <content type="html"><![CDATA[<p><a href="http://momota.github.io/blog/2015/11/15/centos-install/">CentOS 7 を USB メモリからインストール</a> で書いたが、まっさらなCentOSが手元にあったので
<a href="http://www.ansible.com/">ansible</a> を使っていろいろインストールしてみた。</p>

<p>ちょっと前に、<a href="http://www.ansible.com/blog/ansible-2.0-launch">Ansible 2.0 Has Arrived</a> という記事も話題になってたし。</p>

<p>ansible は Chef のような構成管理ツール。
システムの設定や、ソフトウェアのデプロイ、オーケストレーションなどが可能なIT自動化ツール。
管理対象ノードが多いほどメリットが大きい。</p>

<p>Chef と比較すると、エージェントレスのアーキテクチャで、Chefのように特定言語(Ruby)を学ぶ必要はなく、YAMLで構成を表現する。
これは、Playbookと呼ばれる。Chef でいうレシピ。</p>

<p>マネージャ側は最近は大抵プリインストールされている python とansible さえインストールすればよい。
クライアント側は、マネージャから SSH アクセスさえできればよい。</p>

<p>これを1回やってファイル群をリポジトリで管理しておけば、環境の複製が楽になるし、Infrastructure as a Code ですね。</p>

<!-- more -->


<p>まず、環境の説明。</p>

<p><img src="http://momota.github.io/images/ansible.png" alt="ansible_diag" /></p>

<p>本稿では、ansible実行サーバをコントローラ (Control Machine)、ansibleによる
管理対象ノードを管理ノード (Managed Node) と呼ぶことにする。</p>

<table>
<thead>
<tr>
<th>役割                           </th>
<th> ホスト名     </th>
<th> 物理マシン     </th>
<th> IPアドレス</th>
</tr>
</thead>
<tbody>
<tr>
<td>コントローラ (Control Machine) </td>
<td> controller   </td>
<td> mac mini       </td>
<td> 192.168.11.9/24</td>
</tr>
<tr>
<td>管理ノード   (Managed Node)    </td>
<td> managed_node </td>
<td> TOSHIBA laptop </td>
<td> 192.168.11.14/24</td>
</tr>
</tbody>
</table>


<p>ansible のバージョンは <code>2.0.0.2</code>。</p>

<h1>0. 準備</h1>

<h2>0-1. コントローラ</h2>

<ol>
<li>ansible をインストールする</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>controller<span class="nv">$ </span>brew install ansible
</span></code></pre></td></tr></table></div></figure>


<h2>0-2. 管理ノード</h2>

<p>コントローラ～管理ノード間は、ネットワークを介して管理される。
コントローラから管理ノードへSSHアクセスできる必要があるので、以下の設定を事前に行っておく。</p>

<ol>
<li>管理ノードのネットワーク設定</li>
<li>コントローラのSSH公開鍵の登録</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># コントローラ側no-pass SSH key を生成</span>
</span><span class='line'>controller<span class="nv">$ </span>ssh-keygen -t rsa
</span><span class='line'><span class="c"># mac には ssh-copy-id がないので、scpで公開鍵をコピー</span>
</span><span class='line'>controller<span class="nv">$ </span>scp ~/.ssh/id_dsa.pub 192.168.11.14:/home/momota
</span><span class='line'>
</span><span class='line'><span class="c"># 管理ノード側でauthorized_keysの登録</span>
</span><span class='line'>managed_node<span class="nv">$ </span>mkdir ~/.ssh
</span><span class='line'>managed_node<span class="nv">$ </span>chmod 700 ~/.ssh
</span><span class='line'>managed_node<span class="nv">$ </span>cat id_dsa.pub &gt;&gt; ~/.ssh/authorized_keys
</span><span class='line'>managed_node<span class="nv">$ </span>chmod 600 ~/.ssh/authorized_keys
</span><span class='line'>
</span><span class='line'><span class="c"># SSH アクセス確認</span>
</span><span class='line'>controller<span class="nv">$ </span>ssh 192.168.11.14
</span></code></pre></td></tr></table></div></figure>


<h1>1. ansible 設定</h1>

<p>まずは、管理ノードへOSアカウント (guestユーザ) を追加作成してみる。</p>

<p>ディレクトリ構成は、<a href="http://qiita.com/yteraoka/items/5ed2bddefff32e1b9faf">Ansible オレオレベストプラクティス</a> を参考にして以下のように作成。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>controller<span class="nv">$ </span>tree laptop_build
</span><span class='line'>laptop_build
</span><span class='line'>|-- centos
</span><span class='line'>|   |-- hosts
</span><span class='line'>|   <span class="sb">`</span>-- site.yml
</span><span class='line'>|-- common
</span><span class='line'>|   |-- guest_account
</span><span class='line'>|   |   <span class="sb">`</span>-- tasks
</span><span class='line'>|   |       <span class="sb">`</span>-- main.yml
</span><span class='line'>|-- private_vars
</span><span class='line'>|   <span class="sb">`</span>-- common.yml
</span><span class='line'><span class="sb">`</span>-- vars
</span><span class='line'>    <span class="sb">`</span>-- common.yml
</span></code></pre></td></tr></table></div></figure>


<p>それぞれのディレクトリの位置づけは、<a href="http://yteraoka.github.io/ansible-tutorial/">Ansibleチュートリアル</a>とかを参照するとわかりやすい。</p>

<p>まずは、<code>centos/hosts</code> へ管理ノードのIPアドレスを登録する。
クライアントが複数ある場合は、このエントリーで複数のアドレスを列挙すればよい。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="p-Indicator">[</span><span class="nv">laptops</span><span class="p-Indicator">]</span>
</span><span class='line'><span class="l-Scalar-Plain">192.168.11.14</span>
</span></code></pre></td></tr></table></div></figure>


<p>次に、メイン処理を <code>centos/site.yml</code> に記述する。
外部ファイルをインクルードして、roleの実行順序を指定するだけ。
<code>hosts</code> のところで、対象を絞れるが、今回は all。うまく使えば、production用とdevelopment用を使い分けたりグループ単位で実行できる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">hosts</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">all</span>
</span><span class='line'>  <span class="l-Scalar-Plain">vars_files</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">../vars/common.yml</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">../private_vars/common.yml</span>
</span><span class='line'>  <span class="l-Scalar-Plain">roles</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">../common/guest_account</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>vars/common.yml</code> には Playbook 共通で使いたい変数を設定している。</p>

<p><code>private_vars/common.yml</code> には公開したくない変数を設定している。ここでは、guestユーザのパスワードを以下のように指定している。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="nn">---</span>
</span><span class='line'><span class="l-Scalar-Plain">guest_password</span><span class="p-Indicator">:</span> <span class="s">&quot;hogehoge&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>こういうパスワードみたいな情報をgithubに上げたくないので、.gitignoreには
private_vars/ を追加しておく。</p>

<p><code>roles</code> には、実際のアカウント追加処理を指定している role ディレクトリ<code>common/guest_account</code>を指定する。</p>

<p><code>common/guest_account/tasks/main.yml</code> には、userモジュールを使って、以下のようにタスクを記述する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="nn">---</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">add the user &quot;guest&quot;</span>
</span><span class='line'>  <span class="l-Scalar-Plain">user</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">name=guest shell=/bin/bash password=</span>
</span><span class='line'>  <span class="l-Scalar-Plain">become</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">yes</span>
</span><span class='line'>  <span class="l-Scalar-Plain">become_method</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">sudo</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>name</code> は任意。タスク内容をコメントとして記述する。</p>

<p><code>user</code> がモジュール名、それに続いて各モジュールのオプション。</p>

<p><code>become</code>, <code>become_method</code> で管理ノードで sudo を使って実行することを許可している。</p>

<h1>2. ansible 実行</h1>

<p>クライアント側で事前にユーザの確認。
guest ユーザは存在しない。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>managed_node<span class="nv">$ </span>grep guest /etc/passwd
</span></code></pre></td></tr></table></div></figure>


<p>まずは、<code>--check</code> オプションを付けてテスト実行(dry run)。実際の構成変更はせず、
Playbook のシンタックスチェックなどを実施する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>controller<span class="nv">$ </span>ansible-playbook -i centos/hosts centos/site.yml -K --check
</span><span class='line'>SUDO password:
</span><span class='line'>
</span><span class='line'>PLAY ***************************************************************************
</span><span class='line'>
</span><span class='line'>TASK <span class="o">[</span>setup<span class="o">]</span> *******************************************************************
</span><span class='line'>ok: <span class="o">[</span>192.168.11.14<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>TASK <span class="o">[</span>../common/guest_account : add the user <span class="s2">&quot;guest&quot;</span><span class="o">]</span> **************************
</span><span class='line'>changed: <span class="o">[</span>192.168.11.14<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>PLAY RECAP *********************************************************************
</span><span class='line'>192.168.11.14              : <span class="nv">ok</span><span class="o">=</span>1    <span class="nv">changed</span><span class="o">=</span>1    <span class="nv">unreachable</span><span class="o">=</span>0    <span class="nv">failed</span><span class="o">=</span>0
</span></code></pre></td></tr></table></div></figure>


<p>問題ないようなので実行してみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>controller<span class="nv">$ </span>ansible-playbook -i centos/hosts centos/site.yml -K
</span><span class='line'>SUDO password:
</span><span class='line'>
</span><span class='line'>PLAY ***************************************************************************
</span><span class='line'>
</span><span class='line'>TASK <span class="o">[</span>setup<span class="o">]</span> *******************************************************************
</span><span class='line'>ok: <span class="o">[</span>192.168.11.14<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>TASK <span class="o">[</span>../common/guest_account : add the user <span class="s2">&quot;guest&quot;</span><span class="o">]</span> **************************
</span><span class='line'>changed: <span class="o">[</span>192.168.11.14<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>PLAY RECAP *********************************************************************
</span><span class='line'>192.168.11.14              : <span class="nv">ok</span><span class="o">=</span>2    <span class="nv">changed</span><span class="o">=</span>2    <span class="nv">unreachable</span><span class="o">=</span>0    <span class="nv">failed</span><span class="o">=</span>0
</span></code></pre></td></tr></table></div></figure>


<p>クライアント側で事後確認してみると、ユーザができている。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>managed_node<span class="nv">$ </span>grep guest /etc/passwd
</span><span class='line'>guest:x:1001:1001::/home/guest:/bin/bash
</span></code></pre></td></tr></table></div></figure>


<h1>3. 他にもいろいろとインストールする</h1>

<p>ruby や zsh などもインストールする。
インストール対象のプロダクト毎に role を作っている。</p>

<p>role の粒度がいまいちどれくらいにしたらよいのかが分からない。</p>

<p>たとえば、ruby role には ruby のインストールだけにとどめておくべきか、
rbenv のような関連ツールまで 1 セットで記述するのが良いか。</p>

<p>まあ、使いながらやりやすい粒度を模索する、でも良いと思う。</p>

<p>また、OS 毎の差異を吸収するため、<code>common/role/HOGE/tasks/</code> 以下に <code>main.yml</code>を置いて、
それぞれのOS毎のymlをインクルードした。
ただ、<code>centos/</code>的な大本からディレクトリを分けて、<code>main.yml</code>でOS判定と
条件分岐しないような配置でも良かったかもなとも思っている。</p>

<p>以下のようなディレクトリ構成となった。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>controller<span class="nv">$ </span>tree laptop_build
</span><span class='line'>laptop_build
</span><span class='line'>|-- centos
</span><span class='line'>|   |-- hosts
</span><span class='line'>|   <span class="sb">`</span>-- site.yml
</span><span class='line'>|-- common
</span><span class='line'>|   |-- dotfiles
</span><span class='line'>|   |   |-- meta
</span><span class='line'>|   |   |   <span class="sb">`</span>-- main.yml
</span><span class='line'>|   |   <span class="sb">`</span>-- tasks
</span><span class='line'>|   |       <span class="sb">`</span>-- main.yml
</span><span class='line'>|   |-- guest_account
</span><span class='line'>|   |   <span class="sb">`</span>-- tasks
</span><span class='line'>|   |       <span class="sb">`</span>-- main.yml
</span><span class='line'>|   |-- ruby
</span><span class='line'>|   |   |-- meta
</span><span class='line'>|   |   |   <span class="sb">`</span>-- main.yml
</span><span class='line'>|   |   <span class="sb">`</span>-- tasks
</span><span class='line'>|   |       <span class="sb">`</span>-- main.yml
</span><span class='line'>|   |-- tmux
</span><span class='line'>|   |   <span class="sb">`</span>-- tasks
</span><span class='line'>|   |       |-- centos.yml
</span><span class='line'>|   |       |-- main.yml
</span><span class='line'>|   |       <span class="sb">`</span>-- ubuntu.yml
</span><span class='line'>|   |-- vim
</span><span class='line'>|   |   <span class="sb">`</span>-- tasks
</span><span class='line'>|   |       <span class="sb">`</span>-- main.yml
</span><span class='line'>|   <span class="sb">`</span>-- zsh
</span><span class='line'>|       <span class="sb">`</span>-- tasks
</span><span class='line'>|           |-- centos.yml
</span><span class='line'>|           |-- main.yml
</span><span class='line'>|           <span class="sb">`</span>-- ubuntu.yml
</span><span class='line'>|-- private_vars
</span><span class='line'>|   <span class="sb">`</span>-- common.yml
</span><span class='line'><span class="sb">`</span>-- vars
</span><span class='line'>    <span class="sb">`</span>-- common.yml
</span></code></pre></td></tr></table></div></figure>


<p>公式ドキュメントを見つつ、yum や git モジュールを利用した。</p>

<p>中身の説明は、体力が切れたので割愛。
詳細は、<a href="https://github.com/momota/laptop-build">momota/laptop-build</a> を参照。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[複数の環境で octopress を使ってブログを書く]]></title>
    <link href="http://momota.github.io/blog/2016/01/29/octopress/"/>
    <updated>2016-01-29T19:03:00+09:00</updated>
    <id>http://momota.github.io/blog/2016/01/29/octopress</id>
    <content type="html"><![CDATA[<p>最近、自宅の Mac Mini が重くなってきたので、別環境でブログを書くべく環境を整備した。
5年目選手くらいなので、そろそろ買い換えたいな…</p>

<p>結論としては、以下を参考にやればOK。deploy のとこでちょいハマりしたのでメモ。</p>

<ul>
<li><a href="http://blog.zerosharp.com/clone-your-octopress-to-blog-from-two-places/">Clone your Octopess to blog From Two Places</a></li>
</ul>


<!-- more -->


<h2>1. 新しいマシンで git cloneする</h2>

<p>octopress のレポジトリは、<code>source</code> と <code>master</code> の 2 つのブランチがある。</p>

<p><code>source</code> はその名の通り、編集する markdown ファイルや scss ファイルなどを管
理するブランチ。</p>

<p><code>master</code> は、公開用のHTMLファイルなどを管理するブランチ。<code>rake generate</code> で
生成されるファイル群を管理するブランチ。</p>

<p>まずは、任意の場所で <code>source</code> ブランチをクローンする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git clone -b <span class="nb">source </span>https://github.com/YOU/YOU.github.io.git blog
</span></code></pre></td></tr></table></div></figure>


<p>次に、<code>master</code> ブランチを <code>_deploy</code> というディレクトリ名でクローンする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>blog
</span><span class='line'><span class="nv">$ </span>git clone https://github.com/YOU/YOU.github.io.git _deploy
</span></code></pre></td></tr></table></div></figure>


<h2>2. インストールする</h2>

<p>octopress をビルドするため、bundler をインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>gem install bundler
</span></code></pre></td></tr></table></div></figure>


<p>別の環境とシェアするので、 rbenv で ruby バージョンを合わせておく。
シェアしなければ octopress が動くバージョンで <code>.ruby-version</code> を上書けばよいと思う。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rbenv install X.X.X-pXXX
</span><span class='line'><span class="nv">$ </span>rbenv <span class="nb">local </span>X.X.X-pXXX
</span><span class='line'><span class="nv">$ </span>rbenv rehash
</span></code></pre></td></tr></table></div></figure>


<p>ビルドする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle install
</span><span class='line'><span class="nv">$ </span>rake setup_githubpages
</span><span class='line'>Enter the <span class="nb">read</span>/write url <span class="k">for </span>your repository
</span><span class='line'><span class="o">(</span>For example, <span class="err">&#39;</span>git@github.com:your_username/your_username.github.com<span class="o">)</span>:
</span></code></pre></td></tr></table></div></figure>


<p>自分の github pages のやつを入力すればOK。</p>

<h2>3. お試しポストしてみる</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rake new_post<span class="se">\[</span><span class="s1">&#39;test&#39;</span><span class="se">\]</span>
</span><span class='line'><span class="c">#=&gt; source/_post/YYYY-MM-DD-test.markdown が生成される</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span><span class="nb">source</span>/_post/YYYY-MM-DD-test.markdown
</span><span class='line'><span class="c">#=&gt; 記事を編集する</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>rake generate
</span><span class='line'><span class="nv">$ </span>rake preview
</span><span class='line'><span class="c">#=&gt; http://localhost:4000/にアクセスして記事が生成できていることを確認する</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>rake deploy
</span></code></pre></td></tr></table></div></figure>


<p>自分の場合、<code>rake deploy</code> でコケた。
<code>git push</code> するところでコケたようだ。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'> ! <span class="o">[</span>rejected<span class="o">]</span>        master -&gt; master <span class="o">(</span>non-fast-forward<span class="o">)</span>
</span><span class='line'> error: failed to push some refs to <span class="s1">&#39;*******************&#39;</span>
</span><span class='line'> hint: Updates were rejected because the tip of your current branch is behind
</span><span class='line'> hint: its remote counterpart. Merge the remote changes <span class="o">(</span>e.g. <span class="s1">&#39;git pull&#39;</span><span class="o">)</span>
</span><span class='line'> hint: before pushing again.
</span><span class='line'> hint: See the <span class="s1">&#39;Note about fast-forwards&#39;</span> in <span class="s1">&#39;git push --help&#39;</span> <span class="k">for </span>details.
</span></code></pre></td></tr></table></div></figure>


<p>認証プロキシを通してる環境だったので、そのせいかなーと疑ったけどちがった。
単純に <code>master</code> ブランチが conflict してるだけだった。</p>

<p><code>git pull</code> して解決した。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>_deploy
</span><span class='line'><span class="nv">$ </span>git pull origin master
</span><span class='line'><span class="c">#=&gt; master ブランチを pull</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> ../
</span><span class='line'><span class="nv">$ </span>rake deploy
</span></code></pre></td></tr></table></div></figure>


<p>あとは、<code>source</code> のほうもcommitしておく。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git add .
</span><span class='line'><span class="nv">$ </span>git commit -m <span class="s2">&quot;posted&quot;</span>
</span><span class='line'><span class="nv">$ </span>git push origin sorce
</span><span class='line'><span class="c">#=&gt; source ブランチも更新する</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CentOS 7 を USB メモリからインストール]]></title>
    <link href="http://momota.github.io/blog/2015/11/15/centos-install/"/>
    <updated>2015-11-15T21:15:00+09:00</updated>
    <id>http://momota.github.io/blog/2015/11/15/centos-install</id>
    <content type="html"><![CDATA[<p>新しい PC が来たので、もともと使ってた東芝 Dynabook R731/B (windows 7)に CentOS7 をインストールした。
今までは DVD-R に ISO を焼いていたけど、自前の PC の DVD ドライブが壊れていたので
USB メモリを使ってインストールしてみた。</p>

<!-- more -->


<h2>1. USB メモリをフォーマットする</h2>

<p>MAC で USB メモリをフォーマット (初期化) しておく。</p>

<ol>
<li>ディスクユーティリティを起動する (アプリケーション > ディスクユーティリティ)</li>
<li>左側のペインからフォーマットしたいデバイスを選択し、<code>消去</code> タブをクリックする</li>
<li>容量や、ドライブ名などから判断</li>
<li>フォーマット形式は MS-DOS (FAT) を選択し、消去をクリックする</li>
</ol>


<h2>2. インストールイメージをダウンロードする</h2>

<p><a href="https://www.centos.org/download/">CentOS7 の DVD ISO をダウンロードする。</a></p>

<p><a href="http://ftp.jaist.ac.jp/pub/Linux/CentOS/7/isos/x86_64/md5sum.txt">md5 ハッシュもチェックしておく。</a></p>

<p>ダウンロードされた ISO イメージが正しくダウンロードされていることを確認する。(linux だと <code>md5sum</code> コマンド)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ md5 CentOS-7-x86_64-DVD-1503-01.iso | grep 99e450fb1b22d2e528757653fcbf5fdc</span></code></pre></td></tr></table></div></figure>


<h2>3. USB メモリにインストールイメージを書き込む</h2>

<p>USB メモリにインストールイメージを書き込む
ターミナルから<code>.iso</code> を <code>.img</code> へ変換する。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ hdiutil convert -format UDRW -o centos7.img DOWNLOADED_ISO.iso
</span><span class='line'>#=&gt; centos7.img.dmg が出力される
</span><span class='line'>$ mv centos7.img.dmg centos7.img</span></code></pre></td></tr></table></div></figure>


<p>USB メモリをアンマウントする。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># USB メモリがどう認識されているかを確認する (/dev/diskXX)
</span><span class='line'>$ diskutil list
</span><span class='line'># USB メモリをアンマウントする (/dev/disk1の場合)
</span><span class='line'>$ diskutil unMountDisk /dev/disk1
</span><span class='line'>$ diskutil list</span></code></pre></td></tr></table></div></figure>


<p>dd で USB メモリにインストールイメージを書き込む。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo dd if=centos.img of=/dev/disk1 bs=1m
</span><span class='line'>$ echo $?
</span><span class='line'>#=&gt;0</span></code></pre></td></tr></table></div></figure>


<p>書き込みは結構時間がかかる。
完了後、「この Mac では読めない形式だ」的なダイアログが出るが無視。</p>

<p>USB メモリをイジェクトして取り外す。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo diskutil eject /dev/disk1</span></code></pre></td></tr></table></div></figure>


<h2>4. ノート PC にインストールする</h2>

<p>※ USB メモリをノートPC側で使える前提。USBメモリのドライバがインストールされた状態からスタート。</p>

<p>BIOS設定画面から起動デバイスの優先順位を変更する。
USB デバイスを最優先にしておく。</p>

<p>インストールイメージを焼いた USB メモリを刺したままノート PC を起動してみて「CentOSをインストール？それともお試しインストール？」みたいな画面が出てくる。
お試しインストールしてみて、キーボードやタッチパッドが使えることを確認する。
確認ができたら再起動し、インストールする。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[lita で Slack Bot (on heroku) をつくる]]></title>
    <link href="http://momota.github.io/blog/2015/01/11/lita/"/>
    <updated>2015-01-11T21:36:00+09:00</updated>
    <id>http://momota.github.io/blog/2015/01/11/lita</id>
    <content type="html"><![CDATA[<p><img src="https://www.lita.io/assets/lita-94f070fbb79e8ec62cc7a21ca39f8448.png" alt="lita" /></p>

<p>チャットツール <a href="https://slack.com/">slack</a> に常駐する bot をつくったので、そのときの導入メモ。
bot 開発には <a href="https://www.lita.io/">lita</a> を利用した。lita は Ruby で書かれた chat bot フレームワーク。hubot にインスパイアされて開発されたようだ。
js (coffee script) よりも ruby のほうがとっつきやすかったので採用した。</p>

<p>環境は、ubuntu 14.04, ruby 2.1.5, lita 4.0.4.</p>

<p>ゆくゆくは、<a href="http://www.amazon.co.jp/gp/product/B00H91KK26/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B00H91KK26&amp;linkCode=as2&amp;tag=mmtmkt-22">iRKit</a> とか使って家電と連携したりしたい。</p>

<!-- more  -->


<p><img src="https://dl.dropboxusercontent.com/u/28495046/octopress/20150111_lita/lita.png" alt="network" /></p>

<p>今回の構成図を上記に示す。</p>

<h2>1. 事前準備: もろもろインストールする</h2>

<h3>1.1 lita をインストール</h3>

<p>lita は gem でインストールできる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>gem install lita
</span></code></pre></td></tr></table></div></figure>


<h3>1.2 redis をインストール</h3>

<p>lita はデータ永続化ストレージとして redis を使うことが前提となっている。
つまり、ローカル環境で lita を実行するには(開発するには)、redis が必要なため、redis をインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo apt-get update
</span><span class='line'><span class="nv">$ </span>sudo apt-get install redis-server
</span></code></pre></td></tr></table></div></figure>


<p>redis を起動する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo service redis-server start
</span><span class='line'><span class="nv">$ </span>sudo service redis-server status
</span><span class='line'><span class="c">#=&gt; redis の起動状態確認</span>
</span><span class='line'><span class="c">#=&gt; ps aux | grep redis とかで確認してもいい</span>
</span></code></pre></td></tr></table></div></figure>


<h2>2. lita プロジェクト作成、起動</h2>

<p>lita プロジェクト&#8221;sample&#8221;を作成する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>lita new sample
</span><span class='line'><span class="c">#=&gt; sample ディレクトリが生成される</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>sample
</span></code></pre></td></tr></table></div></figure>


<p>ruby のバージョンを rbenv で指定しておく。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rbenv <span class="nb">local </span>2.1.5
</span><span class='line'><span class="nv">$ </span>rbenv rehash
</span><span class='line'><span class="nv">$ </span>ruby -v
</span></code></pre></td></tr></table></div></figure>


<p>bundler でインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle install --path vendor/bundle
</span></code></pre></td></tr></table></div></figure>


<p><code>lita start</code> で lita をローカル環境で起動してみる。
<code>lita help</code> で返ってくればOK。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>lita start
</span><span class='line'>Type <span class="s2">&quot;exit&quot;</span> or <span class="s2">&quot;quit&quot;</span> to end the session.
</span><span class='line'>Lita &gt; lita info
</span><span class='line'>Lita 4.0.4 - https://www.lita.io/
</span><span class='line'>Redis 2.8.4 - Memory used: 414.04K
</span><span class='line'>Lita &gt; lita <span class="nb">help</span>
</span><span class='line'>Lita: <span class="nb">help</span> - Lists <span class="nb">help </span>information <span class="k">for </span>terms and <span class="nb">command </span>the robot will respond to.
</span><span class='line'>Lita: <span class="nb">help </span>COMMAND - Lists <span class="nb">help </span>information <span class="k">for </span>terms or commands that begin with COMMAND.
</span><span class='line'>Lita: info - Replies with the current version of Lita.
</span><span class='line'>Lita &gt; <span class="nb">exit</span>
</span><span class='line'><span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://www.lita.io/plugins">lita プラグイン</a> もたくさんあるので、適当に <code>Gemfile</code> に追加して <code>bundle install</code> するとよい。</p>

<h2>3. herokuへデプロイして Slack と連携する</h2>

<p>lita bot を heroku へデプロイする。
また、アダプタ <a href="https://github.com/kenjij/lita-slack">lita-slack</a> を利用して Slack と連携する。</p>

<h3>3.1 事前準備</h3>

<p>heroku へのデプロイは、git push して行うので、git でバージョン管理を開始する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git init
</span><span class='line'><span class="nv">$ </span>git add .
</span><span class='line'><span class="nv">$ </span>git commit -m <span class="s2">&quot;first commit&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>heroku で ruby バージョンを指定するには、<code>Gemfile</code>で<code>ruby "VERSION"</code>と記述する。
また、Slack と連携するため、<code>lita-slack</code> アダプタもインストールする。
この時点で、<code>Gemfile</code>は以下の通り。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">source</span> <span class="s2">&quot;https://rubygems.org&quot;</span>
</span><span class='line'><span class="n">ruby</span> <span class="s2">&quot;2.1.5&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">gem</span> <span class="s2">&quot;lita&quot;</span>
</span><span class='line'><span class="n">gem</span> <span class="s2">&quot;lita-slack&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>bundler でインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle install --path vendor/bundle
</span></code></pre></td></tr></table></div></figure>


<p>slack とつなげたり、Redis To Go を利用するために、<code>lita_config.rb</code> を以下のように修正する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Lita</span><span class="o">.</span><span class="n">configure</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">robot</span><span class="o">.</span><span class="n">name</span>      <span class="o">=</span> <span class="s2">&quot;lita&quot;</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">robot</span><span class="o">.</span><span class="n">log_level</span> <span class="o">=</span> <span class="ss">:info</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># アダプタの指定。Slack とつなげるので、:slack と修正する</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">robot</span><span class="o">.</span><span class="n">adapter</span>   <span class="o">=</span> <span class="ss">:slack</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># Slack のAPIキーを指定する</span>
</span><span class='line'>  <span class="c1"># 後述する heoku コマンドで heroku の環境変数を設定する</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">adapters</span><span class="o">.</span><span class="n">slack</span><span class="o">.</span><span class="n">token</span> <span class="o">=</span> <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;SLACK_API_KEY&quot;</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># heroku の redis アドオン Redis To Go 関連の設定</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">redis</span><span class="o">[</span><span class="ss">:url</span><span class="o">]</span> <span class="o">=</span> <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;REDISTOGO_URL&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">http</span><span class="o">.</span><span class="n">port</span>   <span class="o">=</span> <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;PORT&quot;</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>heroku でのアプリケーション起動には foreman でのアプリケーション起動が必要となる。
以下の <code>Procfile</code> を作成する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">web</span><span class="p">:</span> <span class="n">bundle</span> <span class="nb">exec</span> <span class="n">lita</span>
</span></code></pre></td></tr></table></div></figure>


<h3>3.2 heroku の設定</h3>

<p>新規に heroku アプリケーションを作成する。
ここでは、<code>lita-sample</code> という名前にした。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>heroku apps:create lita-sample
</span></code></pre></td></tr></table></div></figure>


<p>heroku の redis アドオン Redis To Go をアプリケーションへ追加する。
事前に heroku へクレジットカードの登録が必要。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>heroku addons:add redistogo --app lita-sample
</span></code></pre></td></tr></table></div></figure>


<p>heroku の環境変数を設定する。
設定するのは、Slack APIキーのみでOK。
Slack API キーは、<a href="https://YOUR-DOMAIN.slack.com/services/new/lita">https://YOUR-DOMAIN.slack.com/services/new/lita</a> から Integration の設定をしたら入手可能。</p>

<p><code>REDISTOGO_URL</code> などは、アドオン追加時に自動で設定されている。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>heroku config:set <span class="nv">SLACK_API_KEY</span><span class="o">=</span><span class="s2">&quot;your-slack-api-key&quot;</span>
</span><span class='line'><span class="nv">$ </span>heroku config
</span><span class='line'><span class="c">#=&gt; heroku 上で設定されている環境変数が出力されるので正しく設定されているか確認する</span>
</span></code></pre></td></tr></table></div></figure>


<h3>3.3 heroku へデプロイする</h3>

<p>git commit して git push してあげる。
そうすると heoku アプリケーションが起動する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git commit -m <span class="s2">&quot;make it better&quot;</span>
</span><span class='line'><span class="nv">$ </span>git push heroku master
</span></code></pre></td></tr></table></div></figure>


<p>Slack に lita さんが見えるはずなので 適当なチャンネルに招待して <code>@lita help</code> とか声をかけると答えてくれる。</p>

<h3>3.4 heroku アプリケーションをたたき起こす</h3>

<p>heroku を無料で使う 1 web dyno (webサーバインスタンス) のときは、1時間アクセスがないとアプリケーションがスリープする。つまり、せっかくデプロイした bot も眠ってしまうため、定期的にhttpアクセスさせてたたき起こしておく。
なお、<code>lita-cron</code> で bot に定期的に投稿させてもだめだったので、heroku アプリケーションへの http アクセスが必要なもよう。</p>

<p>定期的な http アクセスには <a href="http://uptimerobot.com/">Uptime Robot</a> を利用した。</p>

<h2>4. handler 作成</h2>

<p>以下のように handler のひな形を生成する。
<code>lita-</code> というプレフィックスが自動で付与される。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>mkdir handlers
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>handlers
</span><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>lita hello_handler
</span><span class='line'><span class="c">#=&gt; lita-hello_handler ディレクトリが生成される</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>handlers/lita-hello_handler/lib/lita/handlers/hello_hundler.rb</code> を修正する。
<code>route</code> で正規表現にマッチした場合の処理へルーティングする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Lita</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">Handlers</span>
</span><span class='line'>    <span class="k">class</span> <span class="nc">HelloHandler</span> <span class="o">&lt;</span> <span class="no">Handler</span>
</span><span class='line'>      <span class="n">route</span> <span class="sr">/^java\s+(.+)/</span><span class="p">,</span> <span class="ss">:with_java</span><span class="p">,</span> <span class="ss">help</span><span class="p">:</span> <span class="p">{</span> <span class="s2">&quot;java TEXT&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;reply back with java.&quot;</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">def</span> <span class="nf">with_java</span><span class="p">(</span> <span class="n">response</span> <span class="p">)</span>
</span><span class='line'>        <span class="n">word</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="n">matches</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'>        <span class="n">response</span><span class="o">.</span><span class="n">reply</span><span class="p">(</span><span class="s2">&quot;!!! </span><span class="si">#{</span><span class="n">word</span><span class="si">}</span><span class="s2"> とジャバ !!!&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="no">Lita</span><span class="o">.</span><span class="n">register_handler</span><span class="p">(</span><span class="no">HelloHandler</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>Gemfile</code> に以下を追記し、 <code>bundle install</code> する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s2">&quot;lita-hello_handler&quot;</span><span class="p">,</span> <span class="ss">path</span><span class="p">:</span> <span class="s2">&quot;handlers/lita-hello_handler&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>commit して再度 heroku へ push してデプロイする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git commit -a -m <span class="s2">&quot;make it better&quot;</span>
</span><span class='line'><span class="nv">$ </span>git push heroku master
</span></code></pre></td></tr></table></div></figure>


<p>slack 上で <code>@lita java あなた</code> とかつぶやくとサイコーにジャバな気分になる。</p>

<p><img src="https://dl.dropboxusercontent.com/u/28495046/octopress/20150111_lita/slack_lita.png" alt="lita java" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[初めてのteraterm macro]]></title>
    <link href="http://momota.github.io/blog/2014/05/20/teraterm-macro/"/>
    <updated>2014-05-20T01:17:00+09:00</updated>
    <id>http://momota.github.io/blog/2014/05/20/teraterm-macro</id>
    <content type="html"><![CDATA[<p>先週末の5/17、teraterm マクロを初めて書いたので記念パピコ。</p>

<p>通信断時間の計測のため、わけあって急遽Cisco ルータ (892J) から継続pingを実行する必要があった。
892J のpingは、リピート回数に上限があるので、上限回数を超えた時に再度pingコマンドを叩く必要があった。
人間がpingの終わりを観察して終わったことを確認して再度実行するのは「ないわーーー」なので初めてのテラタームマクロを書いた。</p>

<!-- more -->


<p>pingが終わったら、打ち直す的な単純な処理だったら、意外と簡単に書けるので好き嫌いせず書いてみるのも悪くないと思った。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'>; <span class="p">----------------------------------------------------------------------</span>
</span><span class='line'>; Cisco ルータのpingリピート回数に上限があるので、上限回数を超えた時に
</span><span class='line'>; 再度pingを実行するマクロ
</span><span class='line'>; 拡張pingを実行するため、enableモードで本マクロを読み込むこと
</span><span class='line'>; <span class="p">----------------------------------------------------------------------</span>
</span><span class='line'>LOOP_LIMIT <span class="p">=</span> <span class="m">1000</span>
</span><span class='line'>
</span><span class='line'>sendln
</span><span class='line'><span class="k">for</span> <span class="k">i</span> <span class="m">1</span> LOOP_LIMIT
</span><span class='line'>  <span class="k">call</span> ping
</span><span class='line'>next
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="p">:</span>ping
</span><span class='line'>  wait <span class="s1">&#39;YOUR-ROUTER#&#39;</span>
</span><span class='line'>  sendln <span class="s1">&#39;ping vrf VR-NAME TARGET-IP repeat 10000 timeout 1&#39;</span>
</span><span class='line'><span class="k">return</span>
</span></code></pre></td></tr></table></div></figure>


<p>linux/unix環境だとshell scriptでやったほうが手っ取り早いけど、ネットワーク機器みたいな特殊な環境だとteraterm macroみたいなのが便利なんだなといまさらながら思った。</p>

<p>意外に楽しくなってきたので、もっと書きたくなってきた。</p>

<p>Juniperの情報取得については、改行区切りの複数のコマンドをコピペで流し込むと出力結果の途中に入力コマンドが入り込んでしまう。プロンプトが返ってくるのを待ってから1行ずつコマンドを実行すれば本事象は回避できるので、そのようなteraterm macroを利用しているが、その中身が自分好みではなかったので書き換えてみた。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'>; <span class="p">----------------------------------------------------------------------</span>
</span><span class='line'>; commandlist.txt から<span class="m">1</span>行ずつコマンドを読み込み、実行する
</span><span class='line'>; <span class="p">----------------------------------------------------------------------</span>
</span><span class='line'>sendln
</span><span class='line'>
</span><span class='line'>commandlist <span class="p">=</span> <span class="s1">&#39;./commandlist.txt&#39;</span>
</span><span class='line'>fileopen filehandle commandlist <span class="m">0</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="m">1</span>
</span><span class='line'>  filereadln filehandle command
</span><span class='line'>  <span class="k">if</span> result <span class="p">=</span> <span class="m">1</span> <span class="k">break</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">call</span> wait_prompt
</span><span class='line'>  sendln command
</span><span class='line'><span class="k">endwhile</span>
</span><span class='line'>
</span><span class='line'>fileclose filehandle
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'>; <span class="p">----------------------------------------------------------------------</span>
</span><span class='line'>; Juniper のプロンプトを待つサブルーチン
</span><span class='line'><span class="p">:</span>wait_prompt
</span><span class='line'>  wait <span class="s1">&#39;@YOUR-HOSTNAME&gt;&#39;</span>
</span><span class='line'><span class="k">return</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記、<code>.ttl</code> ファイルと同じところに <code>commandlist.txt</code> を置く。
<code>commandlist.txt</code> には実行したいコマンドを改行区切りで列挙する以下はEXシリーズのコマンド例。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'>show system uptime <span class="p">|</span> no<span class="p">-</span><span class="nb">more</span>
</span><span class='line'>show <span class="k">version</span> <span class="p">|</span> no<span class="p">-</span><span class="nb">more</span>
</span><span class='line'>show configuration <span class="p">|</span> <span class="nb">display</span> <span class="k">set</span> <span class="p">|</span> no<span class="p">-</span><span class="nb">more</span>
</span><span class='line'>show chassis environment <span class="p">|</span> no<span class="p">-</span><span class="nb">more</span>
</span><span class='line'>show chassis routing<span class="p">-</span>engine <span class="p">|</span> no<span class="p">-</span><span class="nb">more</span>
</span><span class='line'>show virtual<span class="p">-</span>chassis <span class="p">|</span> no<span class="p">-</span><span class="nb">more</span>
</span><span class='line'>show virtual<span class="p">-</span>chassis vc<span class="p">-</span>port <span class="p">|</span> no<span class="p">-</span><span class="nb">more</span>
</span><span class='line'>show ethernet<span class="p">-</span>switching table brief <span class="p">|</span> no<span class="p">-</span><span class="nb">more</span>
</span><span class='line'>show arp <span class="p">|</span> no<span class="p">-</span><span class="nb">more</span>
</span><span class='line'>show lacp interfaces <span class="p">|</span> no<span class="p">-</span><span class="nb">more</span>
</span><span class='line'>show route <span class="p">|</span> no<span class="p">-</span><span class="nb">more</span>
</span><span class='line'>show vlans detail <span class="p">|</span> no<span class="p">-</span><span class="nb">more</span>
</span><span class='line'>show interfaces <span class="nb">terse</span> <span class="p">|</span> no<span class="p">-</span><span class="nb">more</span>
</span><span class='line'>show firewall <span class="p">|</span> no<span class="p">-</span><span class="nb">more</span>
</span><span class='line'>show log <span class="k">messages</span> <span class="p">|</span> no<span class="p">-</span><span class="nb">more</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails じゃなくても ActiveRecord を使う]]></title>
    <link href="http://momota.github.io/blog/2014/05/10/activerecord/"/>
    <updated>2014-05-10T14:54:00+09:00</updated>
    <id>http://momota.github.io/blog/2014/05/10/activerecord</id>
    <content type="html"><![CDATA[<p>rails には挫折したおれが、rails アプリケーション以外で ActiveRecord を使うようになった件について。</p>

<p>ActiveRecord は O/Rマッパーで RDB のテーブルエントリをオブジェクトとして扱えるようにするやつ。1インスタンスが、テーブルの1レコードに相当する。
Ruby on Rails 標準で、モデル層で使われる。</p>

<p>環境は以下。</p>

<ul>
<li>Mac OSX</li>
<li>ruby 2.1.1p76</li>
<li>MySQL mysqld5.6.17</li>
</ul>


<p>最終的なディレクトリ構成は以下のようになる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>.
</span><span class='line'>├── Gemfile
</span><span class='line'>├── Gemfile.lock
</span><span class='line'>├── README.md
</span><span class='line'>├── Rakefile
</span><span class='line'>├── app
</span><span class='line'>│   └── models
</span><span class='line'>│       └── hoges.rb
</span><span class='line'>├── app.rb
</span><span class='line'>├── config
</span><span class='line'>│   └── database.yml
</span><span class='line'>├── db
</span><span class='line'>│   └── migrate
</span><span class='line'>│       └── 20140510_create_hoges.rb
</span><span class='line'>├── log
</span><span class='line'>│   ├── database.log
</span><span class='line'>│   └── trace.log
</span><span class='line'>└── vendor
</span><span class='line'>    └── bundle
</span><span class='line'>            └── <span class="o">(</span>略<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://github.com/momota/activerecord_sample">https://github.com/momota/activerecord_sample</a></li>
</ul>


<!-- more -->


<h2>前準備</h2>

<h3>ruby</h3>

<p>rbenv で ruby 2.1.1 をインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rbenv install 2.1.1
</span><span class='line'><span class="nv">$ </span>rbenv <span class="nb">local </span>2.1.1
</span><span class='line'><span class="nv">$ </span>rbenv rehash
</span><span class='line'><span class="nv">$ </span>ruby -v
</span><span class='line'>ruby 2.1.1p76 <span class="o">(</span>2014-02-24 revision 45161<span class="o">)</span> <span class="o">[</span>x86_64-darwin13.0<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<h3>gem</h3>

<p>bundler で gem をインストールする。
まず、bundler をインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>gem install bundle
</span><span class='line'><span class="nv">$ </span>bundle -v
</span><span class='line'>Bundler version 1.6.2
</span></code></pre></td></tr></table></div></figure>


<p>以下の <code>Gemfile</code> をつくって<code>bundle install --path vendor/bundle</code> して gem をインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">source</span> <span class="s2">&quot;https://rubygems.org&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">gem</span> <span class="s2">&quot;activerecord&quot;</span>
</span><span class='line'><span class="n">gem</span> <span class="s2">&quot;rake&quot;</span>
</span><span class='line'><span class="n">gem</span> <span class="s2">&quot;mysql2&quot;</span>
</span><span class='line'><span class="n">gem</span> <span class="s2">&quot;pry&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>mysql2</code> はDBアダプタ。MySQLと接続するために必要。</p>

<p><code>pry</code> はなくてもよい。<code>irb</code> の便利バージョン。</p>

<h3>mysql</h3>

<p>homebrew でインストールした。</p>

<p><code>my.cnf</code>はよしなに。</p>

<p><code>create database</code> とか <code>grant</code> でユーザやデータベースなどはあらかじめ作っておく。</p>

<h2>create table: rake タスクを使ってテーブルを作成する</h2>

<p><code>rake</code> (makeみたいなもん) でテーブルを作成する。(マイグレーション)</p>

<p>マイグレーションは、SQLを使わずにデータベースのテーブルやカラムなどの構造を変更できる仕組みで、移行と解釈するとややこしい。データベース移行をしやすくする仕組み、くらいに捉えておくとよい。</p>

<h3>マイグレーション用ファイルを作成する</h3>

<p><code>db/migrate</code> ディレクトリを作ってマイグレーション用ファイルを作る。</p>

<p>ここでは hoges テーブルを作ることにする。
マイグレーション用ファイルには、テーブル定義を書く。ここでは <code>db/migrate/20140510_create_hoges.rb</code> を作成する。</p>

<p>このファイル名が大事で <code>20140510</code> の部分がバージョンとして管理される。<code>schema_migrations</code> テーブルが自動生成され、そこで管理される。また、マイグレーション用ファイル中に class 名を<code>CreateHoges</code> のようにキャメルケースで定義した場合は、ファイル名は <code>VERSION_create_hoge.rb</code> のようにスネークケースとして命名する必要がある。ファイル名がこの命名規約に反するとマイグレーションがこける。</p>

<p>rails文化の「設定より規約」(CoC: Convention over Configuration)ってやつですね。</p>

<p><code>ActiveRecord::Migration</code> を継承したクラス <code>Createhoges</code> を定義する。
シンボル <code>:hoges</code> がテーブル名。カラム定義は見ての通りだと思う。
主キーは自動的に <code>id</code> というカラム名で生成されるので書かない。(書くとエラーになる)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">CreateHoges</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Migration</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">up</span>
</span><span class='line'>    <span class="n">create_table</span> <span class="ss">:hoges</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">string</span>  <span class="ss">:name</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">string</span>  <span class="ss">:url</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">timestamps</span>  <span class="c1"># =&gt; これでcreated_atとupdated_atカラムが定義される</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">down</span>
</span><span class='line'>    <span class="n">drop_table</span> <span class="ss">:hoges</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>書き方の詳細は、<a href="http://guides.rubyonrails.org/migrations.html">Active Record Migrations</a> を見れば良いと思う。</p>

<h3>データベース接続情報を yaml に書き出す</h3>

<p>MySQL への接続情報(DBユーザ名とかパスワードとか使うDB名とか)を yaml ファイルに書き出しておく。めんどくさい、かつ、使い捨てのコードならハードコーディングしといてもOK。</p>

<p>ここでは、以下の内容で <code>config/database.yml</code> を作成した。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">db:</span>
</span><span class='line'><span class="x">  production:</span>
</span><span class='line'><span class="x">    adapter:  mysql2</span>
</span><span class='line'><span class="x">    host:     localhost</span>
</span><span class='line'><span class="x">    username: </span><span class="cp">&lt;%=</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;DATABASE_USERNAME&#39;</span><span class="o">]</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">    password: </span><span class="cp">&lt;%=</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;DATABASE_PASSWORD&#39;</span><span class="o">]</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">    database: </span><span class="cp">&lt;%=</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;DATABASE_NAME&#39;</span><span class="o">]</span><span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'>
</span><span class='line'><span class="x">  development:</span>
</span><span class='line'><span class="x">    adapter:  mysql2</span>
</span><span class='line'><span class="x">    host:     localhost</span>
</span><span class='line'><span class="x">    username: </span><span class="cp">&lt;%=</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;DEV_DATABASE_USERNAME&#39;</span><span class="o">]</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">    password: </span><span class="cp">&lt;%=</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;DEV_DATABASE_PASSWORD&#39;</span><span class="o">]</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">    database: </span><span class="cp">&lt;%=</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;DEV_DATABASE_NAME&#39;</span><span class="o">]</span><span class="cp">%&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>パスワードなどの秘匿情報は環境変数から読み込むようにする。(ここではERB形式で書いた)
パスワードをべた書きしといて、間違えて github とかで公開しちゃうと大変なので。</p>

<p><code>~/.zshrc</code> とか <code>~/.bashrc</code> にあらかじめ作っておいたデータベース名とかユーザ名を以下のように足して <code>source ~/.zshrc</code> で読み込めばいいと思う。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">export </span><span class="nv">DEV_DATABASE_NAME</span><span class="o">=</span><span class="s2">&quot;hoge_db&quot;</span>
</span><span class='line'><span class="nb">export </span><span class="nv">DEV_DATABASE_USERNAME</span><span class="o">=</span><span class="s2">&quot;hoge_user&quot;</span>
</span><span class='line'><span class="nb">export </span><span class="nv">DEV_DATABASE_PASSWORD</span><span class="o">=</span><span class="s2">&quot;hoge_password&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Rakefile をつくって rakeタスクを実行する</h3>

<p>以下の内容で <code>Rakefile</code> を作る。
DB接続用の設定や環境指定(development/production) やバージョン指定の設定を書いてます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s2">&quot;active_record&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;yaml&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;erb&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;logger&quot;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">task</span> <span class="ss">:default</span> <span class="o">=&gt;</span> <span class="ss">:migrate</span>
</span><span class='line'>
</span><span class='line'><span class="n">desc</span> <span class="s2">&quot;Migrate database&quot;</span>
</span><span class='line'><span class="n">task</span> <span class="ss">:migrate</span> <span class="o">=&gt;</span> <span class="ss">:environment</span> <span class="k">do</span>
</span><span class='line'>  <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Migrator</span><span class="o">.</span><span class="n">migrate</span><span class="p">(</span><span class="s1">&#39;db/migrate&#39;</span><span class="p">,</span> <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;VERSION&quot;</span><span class="o">]</span> <span class="p">?</span> <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;VERSION&quot;</span><span class="o">].</span><span class="n">to_i</span> <span class="p">:</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">task</span> <span class="ss">:environment</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">db_conf</span> <span class="o">=</span> <span class="no">YAML</span><span class="o">.</span><span class="n">load</span><span class="p">(</span> <span class="no">ERB</span><span class="o">.</span><span class="n">new</span><span class="p">(</span> <span class="no">File</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="s2">&quot;./config/database.yml&quot;</span><span class="p">)</span> <span class="p">)</span><span class="o">.</span><span class="n">result</span> <span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># `rake ENV=development`/`rake ENV=production`で切り替え可能</span>
</span><span class='line'>  <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span><span class="o">.</span><span class="n">establish_connection</span><span class="p">(</span> <span class="n">db_conf</span><span class="o">[</span><span class="s2">&quot;db&quot;</span><span class="o">][</span><span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;ENV&quot;</span><span class="o">]]</span> <span class="p">)</span>
</span><span class='line'>  <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span><span class="o">.</span><span class="n">logger</span> <span class="o">=</span> <span class="no">Logger</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;log/database.log&quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>以下を参考。</p>

<ul>
<li><a href="http://qiita.com/foloinfo/items/6ecfe3c5fd1b56f1dceb">非Rails AppでActiveRecord::Migrationを使う + Rakeでバージョン管理する</a></li>
</ul>


<h3>rake タスクを実行する</h3>

<p>まずは rake タスクの確認。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake -T
</span><span class='line'>rake migrate  <span class="c"># Migrate database</span>
</span></code></pre></td></tr></table></div></figure>


<p>開発環境設定で実行する。(ENV=development)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># debug 用に--traceオプションをつけ、標準エラーをlog/trace.txtへリダイレクト。</span>
</span><span class='line'><span class="c"># bundle exec rake ENV=development でもOK</span>
</span><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake <span class="nv">ENV</span><span class="o">=</span>development --trace 2&gt; log/trace.txt
</span><span class='line'><span class="o">==</span> 20140510 CreateHoges: <span class="nv">migrating</span> <span class="o">============================================</span>
</span><span class='line'>-- create_table<span class="o">(</span>:hoges<span class="o">)</span>
</span><span class='line'>   -&gt; 0.1159s
</span><span class='line'><span class="o">==</span> 20140510 CreateHoges: migrated <span class="o">(</span>0.1160s<span class="o">)</span> <span class="o">===================================</span>
</span></code></pre></td></tr></table></div></figure>


<p>問題なければテーブルが作成されているはず。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>mysql&gt; show tables;
</span><span class='line'>+--------------------------+
</span><span class='line'>| Tables_in_dev_********** |
</span><span class='line'>+--------------------------+
</span><span class='line'>| hoges                    |
</span><span class='line'>| schema_migrations        |
</span><span class='line'>+--------------------------+
</span><span class='line'>2 rows in <span class="nb">set</span> <span class="o">(</span>0.00 sec<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>mysql&gt; desc schema_migrations;
</span><span class='line'>+---------+--------------+------+-----+---------+-------+
</span><span class='line'>| Field   | Type         | Null | Key | Default | Extra |
</span><span class='line'>+---------+--------------+------+-----+---------+-------+
</span><span class='line'>| version | varchar<span class="o">(</span>255<span class="o">)</span> | NO   | PRI | NULL    |       |
</span><span class='line'>+---------+--------------+------+-----+---------+-------+
</span><span class='line'>1 row in <span class="nb">set</span> <span class="o">(</span>0.00 sec<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>mysql&gt; <span class="k">select</span> * from schema_migrations;
</span><span class='line'>+----------+
</span><span class='line'>| version  |
</span><span class='line'>+----------+
</span><span class='line'>| 20140510 |
</span><span class='line'>+----------+
</span><span class='line'>1 row in <span class="nb">set</span> <span class="o">(</span>0.00 sec<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>mysql&gt; desc hoges;
</span><span class='line'>+------------+--------------+------+-----+---------+----------------+
</span><span class='line'>| Field      | Type         | Null | Key | Default | Extra          |
</span><span class='line'>+------------+--------------+------+-----+---------+----------------+
</span><span class='line'>| id         | int<span class="o">(</span>11<span class="o">)</span>      | NO   | PRI | NULL    | auto_increment |
</span><span class='line'>| name       | varchar<span class="o">(</span>255<span class="o">)</span> | YES  |     | NULL    |                |
</span><span class='line'>| url        | varchar<span class="o">(</span>255<span class="o">)</span> | YES  |     | NULL    |                |
</span><span class='line'>| created_at | datetime     | YES  |     | NULL    |                |
</span><span class='line'>| updated_at | datetime     | YES  |     | NULL    |                |
</span><span class='line'>+------------+--------------+------+-----+---------+----------------+
</span><span class='line'>5 rows in <span class="nb">set</span> <span class="o">(</span>0.01 sec<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>mysql&gt; <span class="k">select</span> * from hoges;
</span><span class='line'>Empty <span class="nb">set</span> <span class="o">(</span>0.00 sec<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>CRUD 操作について</h2>

<p>ActiveRecordを使って CRUD 操作する。(insert/select/update/delete)</p>

<p>ActiveRecord では、<code>ActiveRecord::Base</code> を継承したクラスがDBの1テーブルに対応し、そのクラスの属性がテーブルの各カラムに対応する。
このクラスのことを一般的に「モデル」と呼ぶ。
Rails では、Rails アプリを生成した段階で MVC 別にディレクトリが生成されるので、<code>app/models</code> 以下にこの <code>ActiveRecord::Base</code> 継承クラスを作る。
今回は Rails ではないのでそれに従う必要はない。が、モデルが増えた場合を考慮すると <code>app/models</code> 以下に整理できておいたほうがコードの可読性とかメンテナンスはしやすそうなので、<code>app/models/hoges.rb</code> ファイルを作ることにする。
Rails って理にかなっているんだな。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Hoges</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>この <code>Hoges</code> は対応するテーブル名にあわせる。これもCoC。
レコードを単数形で扱うため、テーブル名を複数形にすることが多いみたい。</p>

<h3>Create: テーブルへ insert する</h3>

<p>CRUD の C。</p>

<p><code>app.rb</code> をつくる。</p>

<p>モデルを <code>new</code> して属性値をセットしてあげればOK。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s2">&quot;active_record&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;yaml&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;erb&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;./app/models/hoges&quot;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">db_conf</span> <span class="o">=</span> <span class="no">YAML</span><span class="o">.</span><span class="n">load</span><span class="p">(</span> <span class="no">ERB</span><span class="o">.</span><span class="n">new</span><span class="p">(</span> <span class="no">File</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="s2">&quot;./config/database.yml&quot;</span><span class="p">)</span> <span class="p">)</span><span class="o">.</span><span class="n">result</span> <span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 開発用DB接続パラメータ読み込み, 接続する</span>
</span><span class='line'><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span><span class="o">.</span><span class="n">establish_connection</span><span class="p">(</span><span class="n">db_conf</span><span class="o">[</span><span class="s2">&quot;db&quot;</span><span class="o">][</span><span class="s2">&quot;development&quot;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">test_name</span> <span class="o">=</span> <span class="s2">&quot;momota.txt&quot;</span>
</span><span class='line'><span class="n">test_url</span>  <span class="o">=</span> <span class="s2">&quot;http://momota.github.io/&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">hoge</span> <span class="o">=</span> <span class="no">Hoges</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="o">|</span><span class="n">h</span><span class="o">|</span>
</span><span class='line'>  <span class="n">h</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">test_name</span>
</span><span class='line'>  <span class="n">h</span><span class="o">.</span><span class="n">url</span>  <span class="o">=</span> <span class="n">test_url</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nb">p</span> <span class="n">hoge</span>
</span><span class='line'><span class="n">hoge</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'><span class="nb">p</span> <span class="n">hoge</span>
</span></code></pre></td></tr></table></div></figure>


<p>なお、<code>save</code> しないと insert されない。</p>

<p>こんな感じで生成時にハッシュを渡してもOK。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">hoge</span> <span class="o">=</span> <span class="no">Hoges</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:name</span> <span class="o">=&gt;</span> <span class="n">test_name</span><span class="p">,</span> <span class="ss">:url</span> <span class="o">=&gt;</span> <span class="n">test_url</span><span class="p">)</span>
</span><span class='line'><span class="n">hoge</span><span class="o">.</span><span class="n">save</span>
</span></code></pre></td></tr></table></div></figure>


<p>それでは実行してみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>ruby app.rb
</span><span class='line'><span class="c">#&lt;Hoges id: nil, name: &quot;momota.txt&quot;, url: &quot;http://momota.github.io/&quot;, created_at: nil, updated_at: nil&gt;</span>
</span><span class='line'><span class="c">#&lt;Hoges id: 1, name: &quot;momota.txt&quot;, url: &quot;http://momota.github.io/&quot;, created_at: &quot;2014-05-10 23:50:46&quot;, updated_at: &quot;2014-05-10 23:50:46&quot;&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記から、saveしないと <code>id</code> や <code>created_at</code> などの値が空なので insert されていないことが分かる。</p>

<p>実際にテーブルの内容を見てみよう。ちゃんと insert されている。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>mysql&gt; <span class="k">select</span> * from hoges;
</span><span class='line'>+----+------------+--------------------------+---------------------+---------------------+
</span><span class='line'>| id | name       | url                      | created_at          | updated_at          |
</span><span class='line'>+----+------------+--------------------------+---------------------+---------------------+
</span><span class='line'>|  1 | momota.txt | http://momota.github.io/ | 2014-05-10 23:50:46 | 2014-05-10 23:50:46 |
</span><span class='line'>+----+------------+--------------------------+---------------------+---------------------+
</span><span class='line'>1 row in <span class="nb">set</span> <span class="o">(</span>0.00 sec<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Read: レコードを select する</h3>

<p>CRUD の R。</p>

<p>主キーで select する場合は、<code>find</code> メソッドを使う。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">hoges</span> <span class="o">=</span> <span class="no">Hoges</span><span class="o">.</span><span class="n">find</span><span class="p">(</span> <span class="mi">1</span> <span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>これは以下の SQL と同じ。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">hoges</span> <span class="k">where</span> <span class="n">hoges</span><span class="p">.</span><span class="n">id</span> <span class="o">=</span> <span class="mi">1</span> <span class="k">LIMIT</span> <span class="mi">1</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>主キー以外だと、<code>find_by</code> メソッドを使う。</p>

<p>該当するレコードがなければ <code>nil</code> が返ってくる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">hoges</span> <span class="o">=</span> <span class="no">Hoges</span><span class="o">.</span><span class="n">find_by</span> <span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;momota.txt&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>これは以下のような書き方もできる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">hoges</span> <span class="o">=</span> <span class="no">Hoges</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;momota.txt&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">take</span>
</span></code></pre></td></tr></table></div></figure>


<p>これらは以下の SQL と同じ。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">hoges</span> <span class="k">where</span> <span class="n">hoges</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="ss">&quot;momota.txt&quot;</span> <span class="k">LIMIT</span> <span class="mi">1</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>find_by</code> メソッドを使ってレコードが存在しないときにだけ insert するように <code>app.rb</code> を書き変えてみよう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gd">-hoge = Hoges.new { |h|</span>
</span><span class='line'><span class="gd">-  h.name = test_name</span>
</span><span class='line'><span class="gd">-  h.url  = test_url</span>
</span><span class='line'><span class="gd">-}</span>
</span><span class='line'><span class="gd">-p hoge</span>
</span><span class='line'><span class="gd">-hoge.save</span>
</span><span class='line'><span class="gd">-p hoge</span>
</span><span class='line'><span class="gi">+rec = Hoges.find_by url: test_url</span>
</span><span class='line'><span class="gi">+unless rec</span>
</span><span class='line'><span class="gi">+  hoge = Hoges.new { |h|</span>
</span><span class='line'><span class="gi">+    h.name = test_name</span>
</span><span class='line'><span class="gi">+    h.url  = test_url</span>
</span><span class='line'><span class="gi">+  }</span>
</span><span class='line'><span class="gi">+  hoge.save</span>
</span><span class='line'><span class="gi">+  puts &quot;すでにデータは insert 済みなのでここには入らない&quot;</span>
</span><span class='line'><span class="gi">+end</span>
</span><span class='line'>
</span><span class='line'><span class="gi">+p rec</span>
</span></code></pre></td></tr></table></div></figure>


<p>実行すると最終行の <code>p rec</code> が呼ばれていることが分かる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>ruby app.rb
</span><span class='line'>&lt;Hoges id: 1, name: <span class="s2">&quot;momota.txt&quot;</span>, url: <span class="s2">&quot;http://momota.github.io/&quot;</span>, created_at: <span class="s2">&quot;2014-05-10 23:50:46&quot;</span>, updated_at: <span class="s2">&quot;2014-05-10 23:50:46&quot;</span>&gt;
</span></code></pre></td></tr></table></div></figure>


<p><code>find_or_create_by</code> メソッドによりさらにスマートな書き方ができる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gd">-rec = Hoges.find_by url: test_url</span>
</span><span class='line'><span class="gd">-unless rec</span>
</span><span class='line'><span class="gd">-  hoge = Hoges.new { |h|</span>
</span><span class='line'><span class="gd">-    h.name = test_name</span>
</span><span class='line'><span class="gd">-    h.url  = test_url</span>
</span><span class='line'><span class="gd">-  }</span>
</span><span class='line'><span class="gd">-  hoge.save</span>
</span><span class='line'><span class="gi">+rec = Hoges.find_or_create_by( url: test_url ) do |h|</span>
</span><span class='line'><span class="gi">+  h.name = test_name</span>
</span><span class='line'>  puts &quot;すでにデータは insert 済みなのでここには入らない&quot;
</span><span class='line'>end
</span></code></pre></td></tr></table></div></figure>


<p>その他いろいろと以下のページが参考になる。</p>

<ul>
<li><a href="http://edgeguides.rubyonrails.org/active_record_querying.html">Active Record Query Interface</a></li>
</ul>


<h3>Update: レコードを update する</h3>

<p>CRUD の U。</p>

<p>これはオブジェクトの属性を更新して <code>save</code> するだけ。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">changed_name</span> <span class="o">=</span> <span class="s2">&quot;momota.log&quot;</span>
</span><span class='line'><span class="n">hoges</span> <span class="o">=</span> <span class="no">Hoges</span><span class="o">.</span><span class="n">find_by</span> <span class="ss">url</span><span class="p">:</span> <span class="n">test_url</span>
</span><span class='line'><span class="n">hoges</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">changed_name</span>
</span><span class='line'><span class="n">hoges</span><span class="o">.</span><span class="n">save</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Delete: レコードを delete する</h3>

<p>CRUD の D。</p>

<p>これも簡単でモデルオブジェクトから <code>destroy</code> or <code>delete</code> メソッドを呼ぶだけ。<code>save</code> は不要。</p>

<p><code>delete</code> はレコードの削除のみなので高速。<code>destroy</code> はレコードとオブジェクトも削除してくれるが、<code>delete</code> に比べて低速。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">hoges</span> <span class="o">=</span> <span class="no">Hoges</span><span class="o">.</span><span class="n">find</span><span class="p">(</span> <span class="mi">1</span> <span class="p">)</span>
</span><span class='line'><span class="n">hoges</span><span class="o">.</span><span class="n">destroy</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>where</code> で複数のレコードをひっかけて全部削除したい場合は、<code>destroy_all</code> or <code>delete_all</code> メソッドを呼ぶ。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">hoges</span> <span class="o">=</span> <span class="no">Hoges</span><span class="o">.</span><span class="n">destroy_all</span><span class="p">(</span><span class="ss">url</span><span class="p">:</span> <span class="n">test_url</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>find_by</code> してからでもOK。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">hoges</span> <span class="o">=</span> <span class="no">Hoges</span><span class="o">.</span><span class="n">find_by</span> <span class="ss">url</span><span class="p">:</span> <span class="n">test_url</span>
</span><span class='line'><span class="n">hoges</span><span class="o">.</span><span class="n">destroy_all</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>app.rb</code> を書き換えてみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">-</span><span class="n">rec</span> <span class="o">=</span> <span class="no">Hoges</span><span class="o">.</span><span class="n">find_or_create_by</span><span class="p">(</span> <span class="ss">url</span><span class="p">:</span> <span class="n">test_url</span> <span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">h</span><span class="o">|</span>
</span><span class='line'><span class="o">+</span><span class="n">hoges</span> <span class="o">=</span> <span class="no">Hoges</span><span class="o">.</span><span class="n">find_or_create_by</span><span class="p">(</span> <span class="ss">url</span><span class="p">:</span> <span class="n">test_url</span> <span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">h</span><span class="o">|</span>
</span><span class='line'>   <span class="n">h</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">test_name</span>
</span><span class='line'><span class="o">-</span>  <span class="nb">puts</span> <span class="s2">&quot;すでにデータは insert 済みなのでここには入らない&quot;</span>
</span><span class='line'> <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span><span class="nb">p</span> <span class="n">rec</span>
</span><span class='line'><span class="o">+</span><span class="nb">puts</span> <span class="s2">&quot;[before delete]record count: </span><span class="si">#{</span><span class="no">Hoges</span><span class="o">.</span><span class="n">count</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="o">+</span><span class="no">Hoges</span><span class="o">.</span><span class="n">delete_all</span><span class="p">(</span><span class="ss">url</span><span class="p">:</span> <span class="n">test_url</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>実行すると、確かにレコードが削除されている。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>ruby app.rb
</span><span class='line'><span class="o">[</span>before delete<span class="o">]</span>record count: 1
</span><span class='line'><span class="o">[</span>after delete<span class="o">]</span> record count: 0
</span></code></pre></td></tr></table></div></figure>


<p>sqlでも確認できる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>mysql&gt; <span class="k">select</span> * from hoges;
</span><span class='line'>Empty <span class="nb">set</span> <span class="o">(</span>0.00 sec<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[これだけは入れとけ! 個人的に仕事でよく使う windows ソフト]]></title>
    <link href="http://momota.github.io/blog/2014/02/02/windows/"/>
    <updated>2014-02-02T17:53:00+09:00</updated>
    <id>http://momota.github.io/blog/2014/02/02/windows</id>
    <content type="html"><![CDATA[<p>自分の windows マシンへのインストール記録として。ちなみに windows 7。
何かよいソフトがあれば追記していくつもり。
MS Office も毎日触っているけど割愛。</p>

<p>後半疲れて雑になっている感じはある。</p>

<!-- more -->


<h2>テキストエディタ</h2>

<h3>vim</h3>

<p>会社標準は秀丸だが、<a href="http://www.kaoriya.net/software/vim/">kaoriya-vim</a> を使っている。</p>

<p>別エントリにするつもりだが、機能が豊富かつ軽量なのが選定理由。</p>

<ul>
<li>syntax highlight</li>
<li>正規表現での文字列検索・置換</li>
<li>ファイル横断の文字列検索</li>
<li>補完機能</li>
<li>レジスタ</li>
<li>ウィンドウ分割</li>
<li>豊富なプラグイン</li>
</ul>


<h2>IME</h2>

<h3>Google 日本語入力</h3>

<p><a href="http://www.google.co.jp/ime/">Google 日本語入力</a> を使っている。学生の頃、学校に講演に来てくれた工藤拓さんが開発者。なので、なんか親しみ深くリリースされてからずっと使っている。</p>

<p>&ldquo;XX(会社名) YY(名前)です。&rdquo; とか &ldquo;お疲れ様です。&rdquo; 的な定型文をいちいち登録しないでも学習してくれ、2, 3文字入力後 tab キーで補完してくれるので文章書くときに非常に楽。</p>

<h2>font</h2>

<p>font はソフトか? という疑問はあるが。
windows で文字を書くことが仕事の大部分を占めるのでフォントにはこだわりたい。
アンチエイリアスがかかって、等幅で、文字の識別がしやすい(例えば、&#8221;l&#8221; と &ldquo;1&#8221;、 &#8220;O&rdquo; と &ldquo;0&#8221;、&rdquo;,&ldquo; と &rdquo;.&ldquo;)ものを使っている。</p>

<h3>Osaka</h3>

<p><img src="http://osaka.is.land.to/images/example_1_osaka.gif" alt="osaka" /></p>

<p>Mac OS 標準の <a href="http://osaka.is.land.to/">Osaka</a> の等幅フォントを使っている。</p>

<h3>MigMix 2M</h3>

<p><a href="http://mix-mplus-ipa.sourceforge.jp/images/migmix2m.png">MigMix 2M</a></p>

<p>最近は <a href="http://mix-mplus-ipa.sourceforge.jp/migmix/">MigMix 2M</a> を中心に使っている。</p>

<h3>MacType</h3>

<p><a href="https://code.google.com/p/mactype/">Mactype</a> はMSゴシックなどのデフォルトフォントでもアンチエイリアスをかけてくれるレンダリングソフト。</p>

<p>デスクトップアプリケーション全般のフォントがきれいになる。
また、word, excel などの MS Office を使った資料で人からもらうものや配布するものに上述した標準でないフォントは使えないので、そのような資料もきれいなフォントで見られる。</p>

<ul>
<li>before</li>
</ul>


<p><img src="https://dl.dropboxusercontent.com/u/28495046/octopress/20140202_windows_app/mactype_before.png" alt="mactype_before" /></p>

<ul>
<li>after</li>
</ul>


<p><img src="https://dl.dropboxusercontent.com/u/28495046/octopress/20140202_windows_app/mactype_after.png" alt="mactype_after" /></p>

<h2>ランチャ</h2>

<h3>fenrir</h3>

<p><a href="http://www.forest.impress.co.jp/lib/dktp/desktop/launcher/fenrir.html">fenrir &ndash; 窓の杜ライブラリ</a></p>

<p>キーワードマッチング型のランチャ。mac の spotlight みたいなアプリケーション。
デスクトップがすっきりする。アプリケーションの起動だけでなく、ショートカットもいける。
fenrir 起動は、任意のキーがアサイン可能で、個人的に使い道がない capslock をキーアサインしている。</p>

<h2>付箋</h2>

<h3>stickypaper</h3>

<p><img src="http://www.pentacom.jp/pentacom/bin/paperhelp/img/head_sc121.jpg" alt="stickypaper" /></p>

<p><a href="http://www.pentacom.jp/pentacom/bin/paperhelp/index.html">stickypaper</a></p>

<p>なんとなくカラフルで見た目がきれいだし、付箋タイトル部分をダブルクリックで折りたためるし便利。
よくやりとりする人の連絡先だったり、ちょっとしたメモだったり、カレンダーとかも。</p>

<p>ウィンドウを最前に持ってこれるショートカットキー(stickypaper ではホットキーと呼んでいる)が設定できる。
これまた通常使わない、かつ、めったに押さない &ldquo;shift + 0&rdquo; をアサインしている。</p>

<h2>デスクトップアイコンのリスト化</h2>

<h3>desktopListview</h3>

<p><img src="http://desktoplistview.googlecode.com/files/screenshot.jpg" alt="desktoplistview" /></p>

<p><a href="http://code.google.com/p/desktoplistview/">desktoplistview &ndash; list view for your desktop</a></p>

<p>他人の散らかっているデスクトップアイコンを見ると残念な気分になる。
自分も散らからないように、多少散らかってててもすっきり見せたい、という思いでデスクトップアイコンをリスト表示している。</p>

<p>windows xp 時代は”ぴたすちお”を使っていたけど、widows 7だとうまく動かない(というか機能が競合してめんどくさかった)のでこちらを使っている。</p>

<h2>ファイラ</h2>

<h3>QTTabBar</h3>

<p><img src="http://qttabbar-ja.wdfiles.com/local--files/repository/qttabbar_top.png" alt="QTTabBar" /></p>

<p><a href="http://qttabbar-ja.wikidot.com/">QTTabBar &ndash; QuizoApps</a></p>

<p>エクスプローラをタブ化したいと思ってインストール。
その他、ファイルプレビュー機能とか空白部分のダブルクリックで1つ上の階層に移動できたりとかする機能とかが便利。</p>

<h2>コミュニケーション</h2>

<h3>メーラ thunderbird</h3>

<p>プラグインが多くて学生時代から使っている。本当は mutt を使おうとしてみたがうまくメール受信できなくて断念した。
あとはチャットクライアントとして時々使っている。
以下のようなプラグインを使っている。</p>

<table>
<thead>
<tr>
<th></th>
<th align="left">プラグイン名</th>
<th align="left">機能</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td align="left"><a href="http://globs.org/articles.php?pg=2&amp;lng=en">external editor</a></td>
<td align="left">好きなエディタでメールを作成できる。vim でメール編集するために利用。 </td>
</tr>
<tr>
<td></td>
<td align="left"><a href="https://addons.mozilla.org/ja/thunderbird/addon/nostalgy/">nostalgy</a></td>
<td align="left">キーボードショートカットでフォルダの移動やメールの移動などができる。 </td>
</tr>
<tr>
<td></td>
<td align="left"><a href="https://addons.mozilla.org/ja/thunderbird/addon/color-folders/">color folders</a></td>
<td align="left">フォルダの色付けができる。長年仕事しているとすごいフォルダ階層がすごいことになるので色付けして分かりやすくする </td>
</tr>
<tr>
<td></td>
<td align="left"><a href="https://addons.mozilla.org/ja/thunderbird/addon/extra-folder-columns/">extra folder columns</a></td>
<td align="left">フォルダペインにフォルダに含まれるメール数やサイズなどの表示項目を追加できる </td>
</tr>
<tr>
<td></td>
<td align="left"><a href="https://addons.mozilla.org/ja/thunderbird/addon/xnotepp/">xnote++</a></td>
<td align="left">メール単位に付箋が貼れる</td>
</tr>
<tr>
<td></td>
<td align="left"><a href="https://addons.mozilla.org/ja/thunderbird/addon/gmail-conversation-view/">thunderbird conversations</a></td>
<td align="left">スレッドビューを追加できる </td>
</tr>
<tr>
<td></td>
<td align="left"><a href="https://addons.mozilla.org/ja/thunderbird/addon/keyword-highlight/">keyword highlight</a></td>
<td align="left">登録しておいたキーワードをサイズとか色とか変更してくれる。自分の名前とかを登録。 </td>
</tr>
<tr>
<td></td>
<td align="left"><a href="https://addons.mozilla.org/ja/thunderbird/addon/chat-notifier-for-thunderbid/">chat notifier for thunderbird</a></td>
<td align="left">チャットメッセージを受信したらお知らせしてくれる </td>
</tr>
</tbody>
</table>


<h3>Psi</h3>

<p>XMPP クライアント。<a href="http://psi-im.org/">http://psi-im.org/</a></p>

<h3>IP Messanger</h3>

<p>最近はあまり使ってない。 <a href="http://ipmsg.org/">http://ipmsg.org/</a></p>

<h3>limechat</h3>

<p>IRC クライアント。</p>

<h2>ブラウザ</h2>

<h3>google chrome</h3>

<p>軽量なブラウザ。
プラグインも充実してきたため、3年前くらいから徐々に firefox から切り替え。</p>

<p>ctrl + shift + I で起動する developer tools も便利。Firefox で使っていた Live HTTP Headers 的な機能も付いているし。</p>

<table>
<thead>
<tr>
<th></th>
<th align="left">プラグイン名</th>
<th align="left">機能</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td align="left"><a href="https://chrome.google.com/webstore/detail/autopagerize/igiofjhpmpihnifddepnpngfjhkfenbp?hl=ja">autoPagerize</a></td>
<td align="left">例えば複数ページで構成される検索結果ページなどで、自動で次のページをロードしてくれる</td>
</tr>
<tr>
<td></td>
<td align="left"><a href="https://chrome.google.com/webstore/detail/awesome-screenshot-captur/alelhddbbhepgpmgidjdcjakblofbmce?hl=ja">awesome screenshot</a></td>
<td align="left">web 画面のキャプチャ用</td>
</tr>
<tr>
<td></td>
<td align="left"><a href="https://chrome.google.com/webstore/detail/gestures-for-google-chrom/jpkfjicglakibpenojifdiepckckakgk?hl=ja">gestures for google chrome</a></td>
<td align="left">マウスジェスチャー用</td>
</tr>
<tr>
<td></td>
<td align="left"><a href="https://chrome.google.com/webstore/detail/frame-two-pages/eldgpcphflnopbjadiaonofideekgdgm">frame two pages</a></td>
<td align="left">フレーム分割して 1 つのタブで複数ページを表示する</td>
</tr>
<tr>
<td></td>
<td align="left"><a href="https://chrome.google.com/webstore/detail/proxy-switchy/caehdcpeofiiigpdhbabniblemipncjj">proxy switchy</a></td>
<td align="left">社内プロキシの切り替え用。</td>
</tr>
<tr>
<td></td>
<td align="left"><a href="https://chrome.google.com/webstore/detail/%E3%81%AF%E3%81%A6%E3%81%AA%E3%83%96%E3%83%83%E3%82%AF%E3%83%9E%E3%83%BC%E3%82%AF-googlechrome-%E6%8B%A1%E5%BC%B5/dnlfpnhinnjdgmjfpccajboogcjocdla?hl=ja">はてなブックマーク google chrome拡張</a></td>
<td align="left">ブックマーク用</td>
</tr>
<tr>
<td></td>
<td align="left"><a href="https://chrome.google.com/webstore/detail/vichrome/gghkfhpblkcmlkmpcpgaajbbiikbhpdi">Vichrome</a></td>
<td align="left">viチックに操作できる。マウスいらず。</td>
</tr>
</tbody>
</table>


<h3>IE</h3>

<p>社内の申請サイトでは IE しか機能しないものもあるためたまに利用。</p>

<h2>開発環境</h2>

<h3>virtual box + vagrant</h3>

<p><img src="http://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Vagrant.png/150px-Vagrant.png" alt="vagrant" />
検証用に自前サーバがほしいときとか。</p>

<p>ずっと VMware Player を使ってたけど、1年前くらいから vagrant に切り替え。
vagrant プラグインの sahara をインストールして OS のスナップショット的なものをとっている。 <code>vagrant sandbox on</code> で on したタイミングに<code>vagrant sandbox rollback</code> でいつでも戻せる。<code>vagrant sandbox on</code> 以降の変更点の反映は <code>vagrant sandbox commit</code> で。</p>

<p>以前は、ruby も windows ローカルにインストールして使っていたが、最近は <code>vagrant up</code> したあと Linux で ruby を使うことにしている。</p>

<h3>ターミナルソフト</h3>

<p>既存資産の teraterm マクロを利用する必要がない限りは学生時代から愛用している putty を使っている。</p>

<h3>ファイル転送</h3>

<p>基本、winscp。たまに ffftp。</p>

<h2>バージョン管理</h2>

<h3>git</h3>

<p>個人的なドキュメントなどのバージョン管理は git で行っている。
クライアントソフトは <a href="http://windows.github.com/">github for windows</a> を利用。
一緒にインストールされる、git bash が結構便利。</p>

<p>仕事上のドキュメントのバージョン管理(やファイル共有)については、某社のプロダクトを使っている。</p>

<h2>diff ツール</h2>

<h3>winmerge</h3>

<p><img src="http://www.geocities.co.jp/SiliconValley-SanJose/8165/winmerge_2_8.png" alt="winmerge" /></p>

<p>行内比較がしやすいのと、ディレクトリ比較もできるので <a href="http://www.geocities.co.jp/SiliconValley-SanJose/8165/winmerge.html">winmerge</a> を使っている。</p>

<h2>network</h2>

<h3>wireshark</h3>

<p><img src="https://www.wireshark.org/docs/wsug_html_chunked/wsug_graphics/ws-main.png" alt="wireshark" /></p>

<p>パケット解析用に <a href="http://sourceforge.jp/projects/wireshark/">wireshark</a> を使っている。
パケットキャプチャは比較的簡単だけど、パケット解析のほうが断然手間なのであまり簡単に「キャプチャしようぜ！」なんて言うな。 > 各位</p>

<h3>exping</h3>

<p><img src="http://www.woodybells.com/image/exp2.gif" alt="exping" /></p>

<p>宛先リストを作っておいて、そこに列挙した宛先に対して、ping や traceroute を実行してくれる。
実行回数や間隔なども調整できる。</p>

<h3>RouteDiff</h3>

<p>cisco 社のルーティングテーブル情報 (show ip route) 用 diff ツール。
最近は Juniper 社機器を使うことが多いのであまり使わなくなった。</p>

<h2>その他</h2>

<h3>CLCL</h3>

<p>クリップボード履歴管理ツール<a href="http://www.nakka.com/soft/clcl/">CLCL</a>を使っている。</p>

<h3>everything search engine</h3>

<p>高速ファイル検索 <a href="http://www.voidtools.com/">Everything search engine</a>。
高速にファイル名で検索したいときに使う。
正規表現も使える。</p>

<h3>relaxtools addin</h3>

<p>Excelの複数のマクロを体系的にまとめた多機能アドイン。</p>

<p><a href="http://software.opensquare.net/relaxtools/about/">http://software.opensquare.net/relaxtools/about/</a></p>

<p>疎通確認用に zenmap とか構成管理用に rancid とか気になっているけどまだ触れていない。</p>

<p>evernote や dropbox は会社で使っちゃだめってことになったので使ってない。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[redmine のガントチャートでチケット単位に担当者名を入れたりとか、幅を広げたりとか]]></title>
    <link href="http://momota.github.io/blog/2013/11/22/redmine/"/>
    <updated>2013-11-22T00:29:00+09:00</updated>
    <id>http://momota.github.io/blog/2013/11/22/redmine</id>
    <content type="html"><![CDATA[<p><img src="http://redmine.jp/images/redmine-header-logo.png" alt="redmine" /></p>

<p>一時期 wiki くらいの用途でしか使わなくなっていた redmine。
最近、問合せドリブンの雑多なタスクが増えてきてそれらのタスク管理と、チーム内への対応状況の
シェアがめんどくさくなってきた。チケットでそのあたりのタスク管理とか、進捗管理、スケジュー
ル管理して、チームメンバーには redmine さえ参照してもらえれば把握してもらえるようするため、
改めて redmine を使うようになってきた。</p>

<p>redmine ではチケットに期限を入れてあげるとガントチャートを自動生成してくれる。このガント
チャートがデフォルトだとすこぶる不評だったのでもろもろいじった。そのメモ。</p>

<p>環境は、CentOS, Redmine 1.3.1.stable (MySQL)。</p>

<p><code>REDMINE-HOME</code> は、<code>/var/lib/redmine/</code>。</p>

<!-- more -->


<h2>redmine ガントチャートのチケット単位に担当者名を表示する</h2>

<p><code>REDMINE-HOME/lib/redmine/helpers/gantt.rb</code> を修正する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gu">@@ -353,6 +353,7 @@</span>
</span><span class='line'>           subject &lt;&lt; view.avatar(issue.assigned_to, :class =&gt; &#39;gravatar icon-gravatar&#39;, :size =&gt; 10, :title =&gt; assigned_string).to_s.html_safe
</span><span class='line'>           end
</span><span class='line'>           subject &lt;&lt; view.link_to_issue(issue).html_safe
</span><span class='line'><span class="gi">+          subject &lt;&lt; &quot; - &lt;strong&gt;#{issue.assigned_to}&lt;/strong&gt;&quot;</span>
</span><span class='line'>           subject &lt;&lt; &#39;&lt;/span&gt;&#39;.html_safe
</span><span class='line'>           html_subject(options, subject, :css =&gt; &quot;issue-subject&quot;, :title =&gt; issue.subject) + &quot;\n&quot;
</span><span class='line'>           when :image
</span></code></pre></td></tr></table></div></figure>


<h2>redmine ガントチャートのチケットリストの幅を広げる</h2>

<p><code>REDMINE-HOME/app/views/gantts/show.html.erb</code> を修正する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gu">@@ -32,7 +32,7 @@</span>
</span><span class='line'> &lt;% zoom = 1
</span><span class='line'> @gantt.zoom.times { zoom = zoom * 2 }
</span><span class='line'>
</span><span class='line'><span class="gd">-subject_width = 330</span>
</span><span class='line'><span class="gi">+subject_width = 550</span>
</span><span class='line'> header_heigth = 18
</span><span class='line'>
</span><span class='line'> headers_height = header_heigth
</span></code></pre></td></tr></table></div></figure>


<p>チケットリストの幅ってのはこれ。</p>

<p><img src="https://dl.dropboxusercontent.com/u/28495046/octopress/20131122_redmine/gant_redmine.png" alt="subject_width" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[trema をインストールする (Ruby 2.0)]]></title>
    <link href="http://momota.github.io/blog/2013/11/13/trema/"/>
    <updated>2013-11-13T00:02:00+09:00</updated>
    <id>http://momota.github.io/blog/2013/11/13/trema</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/trema/trema">trema</a> は、ネットワークをソフトウェアでコントロールするという思想のSDNの中のひとつ、openflowのコントローラを開発するためのフレームワーク。</p>

<p>インストール環境は、 ubuntu12.04.2 LTS on vagrant on windows 7。</p>

<p>インストールする trema バージョンは 0.4.3。</p>

<p>ruby バージョンは 2.0.0p247。</p>

<!-- more -->


<h2>1. trema に必要なパッケージをインストールする</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo apt-get install gcc make ruby-dev libopenssl-ruby libpcap-dev libsqlite3-dev libglib2.0-dev
</span></code></pre></td></tr></table></div></figure>


<h2>2. 作業ディレクトリ dev を作り、移動する</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>mkdir dev
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>dev
</span></code></pre></td></tr></table></div></figure>


<h2>3. github から最新のコードをクローンする</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git clone git@github.com:trema/trema.git
</span><span class='line'>Cloning into <span class="s1">&#39;trema&#39;</span>...
</span><span class='line'>Enter passphrase <span class="k">for </span>key <span class="s1">&#39;/home/momota/.ssh/id_rsa&#39;</span>: *********************
</span><span class='line'>remote: Counting objects: 18921, <span class="k">done</span>.
</span><span class='line'>remote: Compressing objects: 100% <span class="o">(</span>5536/5536<span class="o">)</span>, <span class="k">done</span>.
</span><span class='line'>remote: Total 18921 <span class="o">(</span>delta 14585<span class="o">)</span>, reused 17492 <span class="o">(</span>delta 13303<span class="o">)</span>
</span><span class='line'>Receiving objects: 100% <span class="o">(</span>18921/18921<span class="o">)</span>, 17.31 MiB | 15 KiB/s, <span class="k">done</span>.
</span><span class='line'>Resolving deltas: 100% <span class="o">(</span>14585/14585<span class="o">)</span>, <span class="k">done</span>.
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>trema
</span></code></pre></td></tr></table></div></figure>


<h2>4. trema を動かすための ruby バージョンを rbenv で 2.0 系に指定する</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rbenv <span class="nb">local </span>2.0.0-p247
</span><span class='line'><span class="nv">$ </span>rbenv rehash
</span><span class='line'><span class="nv">$ </span>ruby -v
</span><span class='line'>ruby 2.0.0p247 <span class="o">(</span>2013-06-27 revision 41674<span class="o">)</span> <span class="o">[</span>x86_64-linux<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<h2>5. bundler で関連 gem をインストールする</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>gem install bundle
</span><span class='line'><span class="nv">$ </span>bundle -v
</span><span class='line'>Bundler version 1.3.5
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>bundle install --path vendor/bundle
</span><span class='line'>Fetching gem metadata from https://rubygems.org/.........
</span><span class='line'>Fetching gem metadata from https://rubygems.org/..
</span><span class='line'>Resolving dependencies...
</span><span class='line'>Installing rake <span class="o">(</span>10.1.0<span class="o">)</span>
</span><span class='line'>Installing Platform <span class="o">(</span>0.4.0<span class="o">)</span>
</span><span class='line'>Installing open4 <span class="o">(</span>1.3.0<span class="o">)</span>
</span><span class='line'>Installing POpen4 <span class="o">(</span>0.1.4<span class="o">)</span>
</span><span class='line'>Installing archive-tar-minitar <span class="o">(</span>0.5.2<span class="o">)</span>
</span><span class='line'>Installing ffi <span class="o">(</span>1.9.0<span class="o">)</span>
</span><span class='line'>Installing childprocess <span class="o">(</span>0.3.9<span class="o">)</span>
</span><span class='line'>Installing builder <span class="o">(</span>3.2.2<span class="o">)</span>
</span><span class='line'>Installing diff-lcs <span class="o">(</span>1.2.4<span class="o">)</span>
</span><span class='line'>Installing multi_json <span class="o">(</span>1.8.0<span class="o">)</span>
</span><span class='line'>Installing gherkin <span class="o">(</span>2.12.1<span class="o">)</span>
</span><span class='line'>Installing multi_test <span class="o">(</span>0.0.2<span class="o">)</span>
</span><span class='line'>Installing cucumber <span class="o">(</span>1.3.8<span class="o">)</span>
</span><span class='line'>Installing rspec-expectations <span class="o">(</span>2.14.3<span class="o">)</span>
</span><span class='line'>Installing aruba <span class="o">(</span>0.5.3<span class="o">)</span>
</span><span class='line'>Installing bindata <span class="o">(</span>1.6.0<span class="o">)</span>
</span><span class='line'>Using bundler <span class="o">(</span>1.3.5<span class="o">)</span>
</span><span class='line'>Installing sexp_processor <span class="o">(</span>4.3.0<span class="o">)</span>
</span><span class='line'>Installing ruby_parser <span class="o">(</span>3.2.2<span class="o">)</span>
</span><span class='line'>Installing flay <span class="o">(</span>2.4.0<span class="o">)</span>
</span><span class='line'>Installing flog <span class="o">(</span>4.1.2<span class="o">)</span>
</span><span class='line'>Installing gli <span class="o">(</span>2.8.0<span class="o">)</span>
</span><span class='line'>Installing json <span class="o">(</span>1.8.0<span class="o">)</span>
</span><span class='line'>Installing mime-types <span class="o">(</span>1.25<span class="o">)</span>
</span><span class='line'>Installing paper_house <span class="o">(</span>0.4.0<span class="o">)</span>
</span><span class='line'>Installing pio <span class="o">(</span>0.2.4<span class="o">)</span>
</span><span class='line'>Installing rdoc <span class="o">(</span>4.0.1<span class="o">)</span>
</span><span class='line'>Installing redcarpet <span class="o">(</span>3.0.0<span class="o">)</span>
</span><span class='line'>Installing ruby2ruby <span class="o">(</span>2.0.6<span class="o">)</span>
</span><span class='line'>Installing reek <span class="o">(</span>1.3.3<span class="o">)</span>
</span><span class='line'>Installing rest-client <span class="o">(</span>1.6.7<span class="o">)</span>
</span><span class='line'>Installing relish <span class="o">(</span>0.7<span class="o">)</span>
</span><span class='line'>Installing rspec-core <span class="o">(</span>2.14.5<span class="o">)</span>
</span><span class='line'>Installing rspec-mocks <span class="o">(</span>2.14.3<span class="o">)</span>
</span><span class='line'>Installing rspec <span class="o">(</span>2.14.1<span class="o">)</span>
</span><span class='line'>Using trema <span class="o">(</span>0.4.2<span class="o">)</span> from <span class="nb">source </span>at /home/momota/trema_train/trema
</span><span class='line'>Installing yard <span class="o">(</span>0.8.7.2<span class="o">)</span>
</span><span class='line'>Your bundle is <span class="nb">complete</span>!
</span><span class='line'>It was installed into ./vendor/bundle
</span><span class='line'>Post-install message from rdoc:
</span><span class='line'>Depending on your version of ruby, you may need to install ruby rdoc/ri data:
</span><span class='line'>
</span><span class='line'>&lt;<span class="o">=</span> 1.8.6 : <span class="nv">unsupported</span>
</span><span class='line'> <span class="o">=</span> 1.8.7 : gem install rdoc-data; rdoc-data --install
</span><span class='line'> <span class="o">=</span> 1.9.1 : gem install rdoc-data; rdoc-data --install
</span><span class='line'>&gt;<span class="o">=</span> 1.9.2 : nothing to <span class="k">do</span>! Yay!
</span><span class='line'>Post-install message from reek:
</span><span class='line'>Thank you <span class="k">for </span>downloading Reek. For info see the reek wiki http://wiki.github.com/troessner/reek
</span></code></pre></td></tr></table></div></figure>


<h2>6. trema をビルドする</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake
</span></code></pre></td></tr></table></div></figure>


<h2>7. インストールできたか確認する</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>./trema --version
</span><span class='line'>trema version 0.4.3
</span></code></pre></td></tr></table></div></figure>


<h2>8. サンプルプログラムを動かしてみる</h2>

<p>openflow コントローラの実装 <code>./src/examples/hello_trema/hello-trema.rb</code> のソースは以下。
Controller クラスを継承してメソッドを実装するだけ。
datapath_id は仮想スイッチの IDのようだ。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">HelloTrema</span> <span class="o">&lt;</span> <span class="no">Controller</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">switch_ready</span> <span class="n">datapath_id</span>
</span><span class='line'>    <span class="n">info</span> <span class="s2">&quot;Hello %#x!&quot;</span> <span class="o">%</span> <span class="n">datapath_id</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>仮想スイッチの設定ファイル <code>./src/examples/hello_trema/sample.conf</code> は以下の内容が記載されている。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">vswitch</span> <span class="p">{</span> <span class="n">datapath_id</span> <span class="s2">&quot;0xabc&quot;</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>実行してみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>./trema run ./src/examples/hello_trema/hello-trema.rb -c ./src/examples/hello_trema/sample.conf
</span><span class='line'>Hello 0xabc!
</span><span class='line'>^C
</span><span class='line'>terminated
</span></code></pre></td></tr></table></div></figure>


<p>無事に動いた。
Let&rsquo;s enjoy SDN.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[眠れなくて、高校の頃聴いてた音楽を思い返していたら楽しくなってきた]]></title>
    <link href="http://momota.github.io/blog/2013/10/13/music/"/>
    <updated>2013-10-13T04:38:00+09:00</updated>
    <id>http://momota.github.io/blog/2013/10/13/music</id>
    <content type="html"><![CDATA[<p>眠れなくて、最近同僚に「高校の頃、どんな音楽聴いてたの？」と言われたのを思い出して、そういえば俺どんな音楽聴いてたんだっけ？って思い出してたらなんか楽しくなってきたので記す。
今でも聴いている音楽とかもあるけど、最近なぜかあまり聴かなくなったやつを中心に書く。そういえば、MD プレイヤーとかで登下校中に聴いてたなあ。</p>

<!-- more -->


<h2>邦楽</h2>

<p>まとめてみると、スカっぽいのが好きだったのに気づいた。</p>

<h3>BACK DROP BOMB</h3>

<p>なぜか真っ先に思い出したのが BACK DROP BOMB,</p>

<iframe width="420" height="315" src="http://momota.github.io//www.youtube.com/embed/7Sd7TX0ZAYg" frameborder="0" allowfullscreen></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=FFFFFF&IS2=1&bg1=FFFFFF&fc1=000000&lc1=000000&t=momotamakonob-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00005H02V" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h3>BRAHMAN</h3>

<iframe width="420" height="315" src="http://momota.github.io//www.youtube.com/embed/_N_0YO-fjnM" frameborder="0" allowfullscreen></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=FFFFFF&IS2=1&bg1=FFFFFF&fc1=000000&lc1=000000&t=momotamakonob-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00005F3LI" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h3>SNAIL RAMP</h3>

<iframe width="420" height="315" src="http://momota.github.io//www.youtube.com/embed/4nuzi4WPVQs" frameborder="0" allowfullscreen></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=FFFFFF&IS2=1&bg1=FFFFFF&fc1=000000&lc1=000000&t=momotamakonob-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00003Q47W" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h3>KEMURI</h3>

<iframe width="420" height="315" src="http://momota.github.io//www.youtube.com/embed/KFyezEqPXtU" frameborder="0" allowfullscreen></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=FFFFFF&IS2=1&bg1=FFFFFF&fc1=000000&lc1=000000&t=momotamakonob-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00005GU6E" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h3>THUMB</h3>

<iframe width="420" height="315" src="http://momota.github.io//www.youtube.com/embed/wcr2q9iPp40" frameborder="0" allowfullscreen></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=FFFFFF&IS2=1&bg1=FFFFFF&fc1=000000&lc1=000000&t=momotamakonob-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00004SAQ2" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h3>BLANKY JET CITY</h3>

<iframe width="420" height="315" src="http://momota.github.io//www.youtube.com/embed/OQUhMrD5DuY" frameborder="0" allowfullscreen></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=FFFFFF&IS2=1&bg1=FFFFFF&fc1=000000&lc1=000000&t=momotamakonob-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00005FJVT" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h2>洋楽</h2>

<h3>KORN</h3>

<iframe width="560" height="315" src="http://momota.github.io//www.youtube.com/embed/2s3iGpDqQpQ" frameborder="0" allowfullscreen></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=FFFFFF&IS2=1&bg1=FFFFFF&fc1=000000&lc1=000000&t=momotamakonob-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B0000365OR" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h3>Limp Bizkit</h3>

<iframe width="560" height="315" src="http://momota.github.io//www.youtube.com/embed/Dn8vzTsnPps" frameborder="0" allowfullscreen></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=FFFFFF&IS2=1&bg1=FFFFFF&fc1=000000&lc1=000000&t=momotamakonob-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00000JCB2" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h3>Green day</h3>

<iframe width="420" height="315" src="http://momota.github.io//www.youtube.com/embed/NUTGr5t3MoY" frameborder="0" allowfullscreen></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=FFFFFF&IS2=1&bg1=FFFFFF&fc1=000000&lc1=000000&t=momotamakonob-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B000002MP2" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h3>Rage Against The Machine</h3>

<iframe width="420" height="315" src="http://momota.github.io//www.youtube.com/embed/H0kJLW2EwMg" frameborder="0" allowfullscreen></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=FFFFFF&IS2=1&bg1=FFFFFF&fc1=000000&lc1=000000&t=momotamakonob-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00002MZ2C" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h3>The Offspring</h3>

<iframe width="560" height="315" src="http://momota.github.io//www.youtube.com/embed/nzY2Qcu5i2A" frameborder="0" allowfullscreen></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=FFFFFF&IS2=1&bg1=FFFFFF&fc1=000000&lc1=000000&t=momotamakonob-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B007W4DXHE" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h3>Smaching pumpkins</h3>

<iframe width="420" height="315" src="http://momota.github.io//www.youtube.com/embed/xmUZ6nCFNoU" frameborder="0" allowfullscreen></iframe>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=FFFFFF&IS2=1&bg1=FFFFFF&fc1=000000&lc1=000000&t=momotamakonob-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B005MW8CWY" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails から外れた僕らは sinatra で i did it my way (3)]]></title>
    <link href="http://momota.github.io/blog/2013/09/23/sinatra/"/>
    <updated>2013-09-23T20:39:00+09:00</updated>
    <id>http://momota.github.io/blog/2013/09/23/sinatra</id>
    <content type="html"><![CDATA[<p><img src="http://www.sinatrarb.com/images/logo.png" alt="sinatra" /></p>

<p>今回はこれまで作った sinatra アプリケーションを PaaS の <a href="https://www.heroku.com/">heroku</a> へデプロイする。
事前に heroku には sign up しておこう。</p>

<p>最初にできあがりを示す。</p>

<p>heroku: <a href="http://sample-mongo-app.herokuapp.com/">http://sample-mongo-app.herokuapp.com/</a></p>

<p>github: <a href="https://github.com/momota/heroku_sinatra_sample">https://github.com/momota/heroku_sinatra_sample</a></p>

<hr />

<ul>
<li><a href="http://momota.github.io/blog/2013/09/16/sinatra/">rails から外れた僕らは sinatra で i did it my way (1)</a>

<ul>
<li>sinatra の基本 (ルーティング、ヘルパー、フィルター、テンプレートエンジンなど)</li>
</ul>
</li>
<li><a href="http://momota.github.io/blog/2013/09/22/sinatra/">rails から外れた僕らは sinatra で i did it my way (2)</a>

<ul>
<li>sinatra で MongoDB を使ったデータ永続化</li>
<li>HTTP POSTへの対応</li>
<li>Bootstrap でのお化粧</li>
</ul>
</li>
<li><a href="http://momota.github.io/blog/2013/09/23/sinatra/">rails から外れた僕らは sinatra で i did it my way (3)</a>

<ul>
<li>sinatra の heroku へのデプロイ</li>
</ul>
</li>
</ul>


<!-- more -->


<h2>heroku toolbelt をインストールする</h2>

<p>heroku へデプロイするために heroku toolbelt をインストールする。
heroku toolbelt は  <a href="https://toolbelt.heroku.com/">https://toolbelt.heroku.com/</a> から環境にあったやり方を選んでインストールする。mac ではインストーラが <code>.pkg</code> 形式で配布されているので、それをぽちぽちクリックして進めればよい。</p>

<p>なお、heroku toolbelt には、以下が含まれている。</p>

<ul>
<li>heroku client: heroku アプリケーションを作成したり、管理したりする CLI ツール</li>
<li>foreman: procfile ベースでアプリケーションの管理をする</li>
<li>git</li>
</ul>


<p>shell でバージョン確認してインストールできたかを確認する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>heroku --version
</span><span class='line'>heroku-toolbelt/2.41.0 <span class="o">(</span>x86_64-darwin10.8.0<span class="o">)</span> ruby/1.9.3
</span></code></pre></td></tr></table></div></figure>


<p>インストールできているようだ。</p>

<h2>heroku login</h2>

<p><code>heroku login</code> で heroku への認証を通したり、ssh キーを登録したりする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>heroku login
</span><span class='line'>Enter your Heroku credentials.
</span><span class='line'>Email: makoto.momota@gmail.com
</span><span class='line'>Password <span class="o">(</span>typing will be hidden<span class="o">)</span>: ENTER_YOUR_HEROKU_PASSWORD
</span><span class='line'>Authentication successful.
</span></code></pre></td></tr></table></div></figure>


<p>私の場合は、すでにキー登録していたので、なにもキー登録操作がなかったが、初回実行の際は、以下のような感じになるらしい。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>Could not find an existing public key.
</span><span class='line'>Would you like to generate one? <span class="o">[</span>Yn<span class="o">]</span>
</span><span class='line'>Generating new SSH public key.
</span><span class='line'>Uploading ssh public key /Users/adam/.ssh/id_rsa.pub
</span></code></pre></td></tr></table></div></figure>


<h2>foreman で sinatra が起動できるか確認する</h2>

<p>foreman で複数の sinatra アプリケーション を管理したり、アプリケーションごとに異なる起動方法を単一に wrapping できる。
heroku では、アプリケーションを起動するために foreman が必須のようだ。
foreman でのアプリケーション起動には、 <code>Procfile</code> を書く必要がある。書式は <code>アプリケーション名: コマンド</code> を改行区切りで列挙していく。</p>

<p>ここでは、<code>mongo_app.rb</code> を起動するので、以下のように記述する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>web: bundle <span class="nb">exec </span>ruby mongo_app.rb -p <span class="nv">$PORT</span>
</span></code></pre></td></tr></table></div></figure>


<p>お試しに、ローカルで <code>foreman start</code> により sinatra アプリケーションを起動する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>foreman start
</span><span class='line'>17:25:31 web.1  | started with pid 10879
</span><span class='line'>17:25:33 web.1  | <span class="o">[</span>2013-09-23 17:25:33<span class="o">]</span> INFO  WEBrick 1.3.1
</span><span class='line'>17:25:33 web.1  | <span class="o">[</span>2013-09-23 17:25:33<span class="o">]</span> INFO  ruby 2.0.0 <span class="o">(</span>2013-06-27<span class="o">)</span> <span class="o">[</span>x86_64-darwin12.4.0<span class="o">]</span>
</span><span class='line'>17:25:33 web.1  | <span class="o">==</span> Sinatra/1.4.3 has taken the stage on 5000 <span class="k">for </span>development with backup from WEBrick
</span><span class='line'>17:25:33 web.1  | <span class="o">[</span>2013-09-23 17:25:33<span class="o">]</span> INFO  WEBrick::HTTPServer#start: <span class="nv">pid</span><span class="o">=</span>10879 <span class="nv">port</span><span class="o">=</span>5000
</span></code></pre></td></tr></table></div></figure>


<p>5000 番ポートで起動したので、<a href="http://localhost:5000/">http://localhost:5000/</a> にアクセスしてみる。問題なさそう。</p>

<h2>git リポジトリを作成して push する</h2>

<p>heroku デプロイには git が必須。
git でバージョン管理していなければ、<code>git init</code> して始めよう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git init
</span><span class='line'><span class="nv">$ </span>git add .
</span><span class='line'><span class="nv">$ </span>git commit -m <span class="s1">&#39;your commit message&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>heroku へデプロイする</h2>

<p>いよいよ heroku 上にアプリケーションを登録する。アプリケーション名はなしでも任意の名前が付けられるが、ここでは<code>sample-mongo-app</code>にした。(のちほど変えることも可能)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>heroku apps:create sample-mongo-app
</span><span class='line'>Creating sample-mongo-app... <span class="k">done</span>, stack is cedar
</span><span class='line'>http://sample-mongo-app.herokuapp.com/ | git@heroku.com:sample-mongo-app.git
</span><span class='line'>Git remote heroku added
</span></code></pre></td></tr></table></div></figure>


<p>このコマンドにより以下のように git リモートリポジトリに heroku リポジトリが登録される。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git remote
</span><span class='line'>heroku
</span><span class='line'><span class="nv">$ </span>git remote show heroku
</span><span class='line'>* remote heroku
</span><span class='line'>Fetch URL: git@heroku.com:sample-mongo-app.git
</span><span class='line'>Push  URL: git@heroku.com:sample-mongo-app.git
</span><span class='line'>HEAD branch: <span class="o">(</span>unknown<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>heroku リポジトリに push することで、デプロイできる。なんとシンプルな仕組み。
ちなみに、Gemfile.lock も git で管理してないとデプロイ時にエラーとなる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git push heroku master
</span><span class='line'>Counting objects: 90, <span class="k">done</span>.
</span><span class='line'>Delta compression using up to 2 threads.
</span><span class='line'>Compressing objects: 100% <span class="o">(</span>85/85<span class="o">)</span>, <span class="k">done</span>.
</span><span class='line'>Writing objects: 100% <span class="o">(</span>90/90<span class="o">)</span>, 126.44 KiB, <span class="k">done</span>.
</span><span class='line'>Total 90 <span class="o">(</span>delta 27<span class="o">)</span>, reused 0 <span class="o">(</span>delta 0<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>-----&gt; Ruby/Rack app detected
</span><span class='line'>-----&gt; Using Ruby version: ruby-2.0.0
</span><span class='line'>-----&gt; Installing dependencies using Bundler version 1.3.2
</span><span class='line'>       Running: bundle install --without development:test --path vendor/bundle --binstubs vendor/bundle/bin --deployment
</span><span class='line'>       Fetching gem metadata from https://rubygems.org/..........
</span><span class='line'>       Fetching gem metadata from https://rubygems.org/..
</span><span class='line'>       Installing backports <span class="o">(</span>3.3.4<span class="o">)</span>
</span><span class='line'>       Installing bson <span class="o">(</span>1.9.2<span class="o">)</span>
</span><span class='line'>       Installing bson_ext <span class="o">(</span>1.9.2<span class="o">)</span>
</span><span class='line'>       Installing eventmachine <span class="o">(</span>1.0.3<span class="o">)</span>
</span><span class='line'>       Installing mongo <span class="o">(</span>1.9.2<span class="o">)</span>
</span><span class='line'>       Installing rack <span class="o">(</span>1.5.2<span class="o">)</span>
</span><span class='line'>       Installing rack-protection <span class="o">(</span>1.5.0<span class="o">)</span>
</span><span class='line'>       Installing rack-test <span class="o">(</span>0.6.2<span class="o">)</span>
</span><span class='line'>       Installing tilt <span class="o">(</span>1.4.1<span class="o">)</span>
</span><span class='line'>       Installing sinatra <span class="o">(</span>1.4.3<span class="o">)</span>
</span><span class='line'>       Installing sinatra-contrib <span class="o">(</span>1.4.0<span class="o">)</span>
</span><span class='line'>       Using bundler <span class="o">(</span>1.3.2<span class="o">)</span>
</span><span class='line'>       Your bundle is <span class="nb">complete</span>! It was installed into ./vendor/bundle
</span><span class='line'>       Cleaning up the bundler cache.
</span><span class='line'>-----&gt; WARNINGS:
</span><span class='line'>       You have not declared a Ruby version in your Gemfile.
</span><span class='line'>       To <span class="nb">set </span>your Ruby version add this line to your Gemfile:
</span><span class='line'>       ruby <span class="s1">&#39;2.0.0&#39;</span>
</span><span class='line'>       <span class="c"># See https://devcenter.heroku.com/articles/ruby-versions for more information.&quot;</span>
</span><span class='line'>-----&gt; Discovering process types
</span><span class='line'>       Procfile declares types     -&gt; web
</span><span class='line'>       Default types <span class="k">for </span>Ruby/Rack -&gt; console, rake
</span><span class='line'>
</span><span class='line'>-----&gt; Compiled slug size: 26.4MB
</span><span class='line'>-----&gt; Launching... <span class="k">done</span>, v3
</span><span class='line'>       http://sample-mongo-app.herokuapp.com deployed to Heroku
</span><span class='line'>
</span><span class='line'>To git@heroku.com:sample-mongo-app.git
</span><span class='line'> * <span class="o">[</span>new branch<span class="o">]</span>      master -&gt; master
</span></code></pre></td></tr></table></div></figure>


<h2>mongodb を heroku で使う</h2>

<p>heroku ではさまざまな add-on が提供されており、その中から mongodb のホスティングである <a href="https://addons.heroku.com/mongohq">MongoHQ</a> を利用する。</p>

<p>add-on を利用するにはクレジットカード情報の登録が必要となるので、済ませておく。<a href="https://heroku.com/verify">https://heroku.com/verify</a></p>

<p>以下で、add-on の設定をする。ここでは、無料プランの ”sandbox” を選ぶ。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>heroku addons:add mongohq:sandbox
</span><span class='line'>Adding mongohq:sandbox on sample-mongo-app... <span class="k">done</span>, v4 <span class="o">(</span>free<span class="o">)</span>
</span><span class='line'>Use <span class="sb">`</span>heroku addons:docs mongohq<span class="sb">`</span> to view documentation.
</span><span class='line'><span class="nv">$ </span>heroku <span class="nv">config</span>
</span><span class='line'><span class="o">===</span> sample-mongo-app Config Vars
</span><span class='line'>MONGOHQ_URL: mongodb://ID:パスワード@paulo.mongohq.com:10014/データベース名
</span></code></pre></td></tr></table></div></figure>


<p>sinatraの DB 接続部分を mongohq 用に書き換える。</p>

<p><a href="https://devcenter.heroku.com/articles/mongohq">公式サイト</a>通り、 DB コネクションをメソッド化する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;sinatra&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;sinatra/reloader&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;mongo&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;uri&#39;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">get_connection</span>
</span><span class='line'>  <span class="k">return</span> <span class="vi">@db_connection</span> <span class="k">if</span> <span class="vi">@db_connection</span>
</span><span class='line'>  <span class="n">db</span> <span class="o">=</span> <span class="no">URI</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;MONGOHQ_URL&#39;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="n">db_name</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/^\//</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="vi">@db_connection</span> <span class="o">=</span> <span class="ss">Mongo</span><span class="p">:</span><span class="ss">:Connection</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">host</span><span class="p">,</span> <span class="n">db</span><span class="o">.</span><span class="n">port</span><span class="p">)</span><span class="o">.</span><span class="n">db</span><span class="p">(</span><span class="n">db_name</span><span class="p">)</span>
</span><span class='line'>  <span class="vi">@db_connection</span><span class="o">.</span><span class="n">authenticate</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">user</span><span class="p">,</span> <span class="n">db</span><span class="o">.</span><span class="n">password</span><span class="p">)</span> <span class="k">unless</span> <span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">user</span><span class="o">.</span><span class="n">nil?</span> <span class="o">||</span> <span class="n">db</span><span class="o">.</span><span class="n">user</span><span class="o">.</span><span class="n">nil?</span><span class="p">)</span>
</span><span class='line'>  <span class="vi">@db_connection</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">before</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">db_con</span> <span class="o">=</span> <span class="n">get_connection</span>
</span><span class='line'>  <span class="vi">@comments</span> <span class="o">=</span> <span class="n">db_con</span><span class="o">.</span><span class="n">collection</span><span class="p">(</span><span class="s1">&#39;comments&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">helpers</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># escape html</span>
</span><span class='line'>  <span class="kp">include</span> <span class="ss">Rack</span><span class="p">:</span><span class="ss">:Utils</span>
</span><span class='line'>  <span class="n">alias_method</span> <span class="ss">:h</span><span class="p">,</span> <span class="ss">:escape_html</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">get</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">erb</span> <span class="ss">:index</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">post</span> <span class="s1">&#39;/new&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="vi">@comments</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span> <span class="ss">:body</span> <span class="o">=&gt;</span> <span class="n">params</span><span class="o">[</span><span class="ss">:body</span><span class="o">]</span> <span class="p">)</span>
</span><span class='line'>  <span class="n">redirect</span> <span class="s1">&#39;/&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">post</span> <span class="s1">&#39;/delete&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="nb">id</span> <span class="o">=</span> <span class="ss">BSON</span><span class="p">:</span><span class="ss">:ObjectId</span><span class="p">(</span> <span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span> <span class="p">)</span>
</span><span class='line'>  <span class="vi">@comments</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="s1">&#39;_id&#39;</span> <span class="o">=&gt;</span> <span class="nb">id</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">d_comment</span><span class="o">|</span>
</span><span class='line'>    <span class="vi">@comments</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span> <span class="n">d_comment</span> <span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>これを前述したとおり、<code>git commit/push</code>してあげれば、heroku 上で sinatra アプリケーション 〜 mongodb 間の接続が確認できる。</p>

<p>私がデプロイした sinatra サンプルアプリケーションは、以下からアクセス可能。</p>

<p><a href="http://sample-mongo-app.herokuapp.com/">http://sample-mongo-app.herokuapp.com/</a></p>

<h3>heroku でのデバッグ</h3>

<p>以下でアプリケーションログを <code>tail -f</code> しているように参照できる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>heroku logs --tail
</span></code></pre></td></tr></table></div></figure>


<hr />

<h1>番外編</h1>

<p>heroku gem は将来的に廃止されるようで、heroku toolbelt をインストールすることを推奨する。</p>

<h2>(失敗,というか古い情報編) heroku gem をインストールする</h2>

<p>Gemfile に <code>gem "heroku"</code> を追記して bundler でインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gh">diff --git a/Gemfile b/Gemfile</span>
</span><span class='line'><span class="gh">index 74db599..734c191 100644</span>
</span><span class='line'><span class="gd">--- a/Gemfile</span>
</span><span class='line'><span class="gi">+++ b/Gemfile</span>
</span><span class='line'><span class="gu">@@ -8,4 +8,5 @@ gem &quot;sinatra&quot;, &quot;1.4.3&quot;</span>
</span><span class='line'> gem &quot;sinatra-contrib&quot;, &quot;1.4.0&quot;
</span><span class='line'> gem &quot;mongo&quot;
</span><span class='line'> gem &quot;bson_ext&quot;
</span><span class='line'><span class="gi">+gem &quot;heroku&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>bundle install</code> する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle install --path vendor/bundle
</span><span class='line'>Fetching gem metadata from https://rubygems.org/...........
</span><span class='line'>Fetching gem metadata from https://rubygems.org/..
</span><span class='line'>Resolving dependencies...
</span><span class='line'>Using i18n <span class="o">(</span>0.6.1<span class="o">)</span>
</span><span class='line'>Using multi_json <span class="o">(</span>1.8.0<span class="o">)</span>
</span><span class='line'>Using activesupport <span class="o">(</span>3.2.13<span class="o">)</span>
</span><span class='line'>Using builder <span class="o">(</span>3.0.4<span class="o">)</span>
</span><span class='line'>Using activemodel <span class="o">(</span>3.2.13<span class="o">)</span>
</span><span class='line'>Using arel <span class="o">(</span>3.0.2<span class="o">)</span>
</span><span class='line'>Using tzinfo <span class="o">(</span>0.3.37<span class="o">)</span>
</span><span class='line'>Using activerecord <span class="o">(</span>3.2.13<span class="o">)</span>
</span><span class='line'>Installing addressable <span class="o">(</span>2.3.5<span class="o">)</span>
</span><span class='line'>Using backports <span class="o">(</span>3.3.4<span class="o">)</span>
</span><span class='line'>Using bson <span class="o">(</span>1.9.2<span class="o">)</span>
</span><span class='line'>Using bson_ext <span class="o">(</span>1.9.2<span class="o">)</span>
</span><span class='line'>Using eventmachine <span class="o">(</span>1.0.3<span class="o">)</span>
</span><span class='line'>Installing excon <span class="o">(</span>0.25.3<span class="o">)</span>
</span><span class='line'>Installing heroku-api <span class="o">(</span>0.3.15<span class="o">)</span>
</span><span class='line'>Installing launchy <span class="o">(</span>2.3.0<span class="o">)</span>
</span><span class='line'>Installing netrc <span class="o">(</span>0.7.7<span class="o">)</span>
</span><span class='line'>Installing mime-types <span class="o">(</span>1.25<span class="o">)</span>
</span><span class='line'>Installing rest-client <span class="o">(</span>1.6.7<span class="o">)</span>
</span><span class='line'>Installing rubyzip <span class="o">(</span>1.0.0<span class="o">)</span>
</span><span class='line'>Installing heroku <span class="o">(</span>2.41.0<span class="o">)</span>
</span><span class='line'>Using mongo <span class="o">(</span>1.9.2<span class="o">)</span>
</span><span class='line'>Using rack <span class="o">(</span>1.5.2<span class="o">)</span>
</span><span class='line'>Using rack-protection <span class="o">(</span>1.5.0<span class="o">)</span>
</span><span class='line'>Using rack-test <span class="o">(</span>0.6.2<span class="o">)</span>
</span><span class='line'>Using tilt <span class="o">(</span>1.4.1<span class="o">)</span>
</span><span class='line'>Using sinatra <span class="o">(</span>1.4.3<span class="o">)</span>
</span><span class='line'>Using sinatra-contrib <span class="o">(</span>1.4.0<span class="o">)</span>
</span><span class='line'>Using sqlite3 <span class="o">(</span>1.3.7<span class="o">)</span>
</span><span class='line'>Using bundler <span class="o">(</span>1.3.5<span class="o">)</span>
</span><span class='line'>Your bundle is <span class="nb">complete</span>!
</span><span class='line'>It was installed into ./vendor/bundle
</span><span class='line'>Post-install message from heroku:
</span><span class='line'> !    The <span class="sb">`</span>heroku<span class="sb">`</span> gem has been deprecated and replaced with the Heroku Toolbelt.
</span><span class='line'> !    Download and install from: https://toolbelt.heroku.com
</span><span class='line'> !    For API access, see: https://github.com/heroku/heroku.rb
</span></code></pre></td></tr></table></div></figure>


<p>なんか heroku gem は、もう廃止されるみたいなメッセージが出た。
アンインストールすることにしよう。</p>

<h3>heroku gem アンインストール</h3>

<p>Gemfile から先ほど追加した <code>gem "heroku"</code> 行を消す。
そのあとに <code>bundle clean</code> でアンインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle clean
</span><span class='line'>Resolving dependencies...
</span><span class='line'>Removing addressable <span class="o">(</span>2.3.5<span class="o">)</span>
</span><span class='line'>Removing excon <span class="o">(</span>0.25.3<span class="o">)</span>
</span><span class='line'>Removing heroku <span class="o">(</span>2.41.0<span class="o">)</span>
</span><span class='line'>Removing heroku-api <span class="o">(</span>0.3.15<span class="o">)</span>
</span><span class='line'>Removing launchy <span class="o">(</span>2.3.0<span class="o">)</span>
</span><span class='line'>Removing mime-types <span class="o">(</span>1.25<span class="o">)</span>
</span><span class='line'>Removing netrc <span class="o">(</span>0.7.7<span class="o">)</span>
</span><span class='line'>Removing rest-client <span class="o">(</span>1.6.7<span class="o">)</span>
</span><span class='line'>Removing rubyzip <span class="o">(</span>1.0.0<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails から外れた僕らは sinatra で i did it my way (2)]]></title>
    <link href="http://momota.github.io/blog/2013/09/22/sinatra/"/>
    <updated>2013-09-22T06:15:00+09:00</updated>
    <id>http://momota.github.io/blog/2013/09/22/sinatra</id>
    <content type="html"><![CDATA[<p><img src="http://www.sinatrarb.com/images/logo.png" alt="sinatra" /></p>

<p><a href="http://momota.github.io/blog/2013/09/16/sinatra/">前回の &ldquo;sinatra で rails から外れた僕らは sinatra で i did it my way&rdquo; の続き</a></p>

<p>今回は、mongodb を使って簡単な sinatra web アプリケーションをつくってみる。
また、bootstrap3 で簡単に見た目を綺麗にしてみる。</p>

<hr />

<ul>
<li><a href="http://momota.github.io/blog/2013/09/16/sinatra/">rails から外れた僕らは sinatra で i did it my way (1)</a>

<ul>
<li>sinatra の基本 (ルーティング、ヘルパー、フィルター、テンプレートエンジンなど)</li>
</ul>
</li>
<li><a href="http://momota.github.io/blog/2013/09/22/sinatra/">rails から外れた僕らは sinatra で i did it my way (2)</a>

<ul>
<li>sinatra で MongoDB を使ったデータ永続化</li>
<li>HTTP POSTへの対応</li>
<li>Bootstrap でのお化粧</li>
</ul>
</li>
<li><a href="http://momota.github.io/blog/2013/09/23/sinatra/">rails から外れた僕らは sinatra で i did it my way (3)</a>

<ul>
<li>sinatra の heroku へのデプロイ</li>
</ul>
</li>
</ul>


<!-- more -->


<h2>MongoDB を使うための準備</h2>

<p>データの永続化をするために、ここでは mongodb を使う。別に sqlite3 や MySQL でも良かったがなんとなく NoSQLを選定。</p>

<p>まずは、<a href="http://docs.mongodb.org/manual/installation/">こちらを参考に</a> mongodb をインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>brew update
</span><span class='line'><span class="nv">$ </span>brew install mongodb
</span><span class='line'><span class="nv">$ </span>mongo --version
</span><span class='line'>MongoDB shell version: 2.4.6
</span><span class='line'>
</span><span class='line'><span class="c"># mongod を起動する</span>
</span><span class='line'><span class="nv">$ </span>/usr/local/bin/mongod --fork
</span><span class='line'>all output going to: /usr/local/var/log/mongodb/mongo.log
</span></code></pre></td></tr></table></div></figure>


<p>mongodb を ruby から扱うための gem を bundler でインストールする。</p>

<p>Gemfile に <code>mongo</code> と <code>bson_ext</code> を追加する。(以下は Gemfile の diff 結果)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gh">diff --git a/Gemfile b/Gemfile</span>
</span><span class='line'><span class="gh">index 140fec0..74db599 100644</span>
</span><span class='line'><span class="gd">--- a/Gemfile</span>
</span><span class='line'><span class="gi">+++ b/Gemfile</span>
</span><span class='line'><span class="gu">@@ -6,3 +6,6 @@ gem &quot;activerecord&quot;, &quot;3.2.13&quot;</span>
</span><span class='line'> gem &quot;sqlite3&quot;, &quot;1.3.7&quot;
</span><span class='line'> gem &quot;sinatra&quot;, &quot;1.4.3&quot;
</span><span class='line'> gem &quot;sinatra-contrib&quot;, &quot;1.4.0&quot;
</span><span class='line'><span class="gi">+gem &quot;mongo&quot;</span>
</span><span class='line'><span class="gi">+gem &quot;bson_ext&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>bundler でインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle install --path vendor/bundle
</span><span class='line'>Fetching gem metadata from https://rubygems.org/...........
</span><span class='line'>Fetching gem metadata from https://rubygems.org/..
</span><span class='line'>Resolving dependencies...
</span><span class='line'>Using i18n <span class="o">(</span>0.6.1<span class="o">)</span>
</span><span class='line'>Using multi_json <span class="o">(</span>1.8.0<span class="o">)</span>
</span><span class='line'>Using activesupport <span class="o">(</span>3.2.13<span class="o">)</span>
</span><span class='line'>Using builder <span class="o">(</span>3.0.4<span class="o">)</span>
</span><span class='line'>Using activemodel <span class="o">(</span>3.2.13<span class="o">)</span>
</span><span class='line'>Using arel <span class="o">(</span>3.0.2<span class="o">)</span>
</span><span class='line'>Using tzinfo <span class="o">(</span>0.3.37<span class="o">)</span>
</span><span class='line'>Using activerecord <span class="o">(</span>3.2.13<span class="o">)</span>
</span><span class='line'>Using backports <span class="o">(</span>3.3.4<span class="o">)</span>
</span><span class='line'>Installing bson <span class="o">(</span>1.9.2<span class="o">)</span>
</span><span class='line'>Installing bson_ext <span class="o">(</span>1.9.2<span class="o">)</span>
</span><span class='line'>Using eventmachine <span class="o">(</span>1.0.3<span class="o">)</span>
</span><span class='line'>Installing mongo <span class="o">(</span>1.9.2<span class="o">)</span>
</span><span class='line'>Using rack <span class="o">(</span>1.5.2<span class="o">)</span>
</span><span class='line'>Using rack-protection <span class="o">(</span>1.5.0<span class="o">)</span>
</span><span class='line'>Using rack-test <span class="o">(</span>0.6.2<span class="o">)</span>
</span><span class='line'>Using tilt <span class="o">(</span>1.4.1<span class="o">)</span>
</span><span class='line'>Using sinatra <span class="o">(</span>1.4.3<span class="o">)</span>
</span><span class='line'>Using sinatra-contrib <span class="o">(</span>1.4.0<span class="o">)</span>
</span><span class='line'>Using sqlite3 <span class="o">(</span>1.3.7<span class="o">)</span>
</span><span class='line'>Using bundler <span class="o">(</span>1.3.5<span class="o">)</span>
</span><span class='line'>Your bundle is <span class="nb">complete</span>!
</span></code></pre></td></tr></table></div></figure>


<h2>ルーティング処理を追加する</h2>

<p>まず、mongodb を ruby から扱うために <code>require 'mongo'</code> しておく。</p>

<p>before filter で mongodb とのコネクションを張っておく。</p>

<p>helper には、html エスケープ処理の alias を定義しておく。(のちほど <code>views/index.erb</code> で使う)</p>

<p>ブラウザから投稿&#8221;/new&#8221;と削除&#8221;/delete&#8221;の HTTP POST リクエストを受け付けるため、各ルーティング処理を追加している。
投稿では、mongodb への insert 処理を、削除では、mongodb からの remove 処理を記述している。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;sinatra&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;sinatra/reloader&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;mongo&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># filter</span>
</span><span class='line'><span class="n">before</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">db_con</span> <span class="o">=</span> <span class="ss">Mongo</span><span class="p">:</span><span class="ss">:Connection</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s1">&#39;localhost&#39;</span><span class="p">,</span> <span class="mi">27017</span><span class="p">)</span>
</span><span class='line'>  <span class="vi">@db</span>    <span class="o">=</span> <span class="n">db_con</span><span class="o">.</span><span class="n">db</span><span class="p">(</span><span class="s1">&#39;sinatra_sample&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="vi">@comments</span> <span class="o">=</span> <span class="vi">@db</span><span class="o">.</span><span class="n">collection</span><span class="p">(</span><span class="s1">&#39;comments&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># helper</span>
</span><span class='line'><span class="n">helpers</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># escape html</span>
</span><span class='line'>  <span class="kp">include</span> <span class="ss">Rack</span><span class="p">:</span><span class="ss">:Utils</span>
</span><span class='line'>  <span class="n">alias_method</span> <span class="ss">:h</span><span class="p">,</span> <span class="ss">:escape_html</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">get</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">erb</span> <span class="ss">:index</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">post</span> <span class="s1">&#39;/new&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="vi">@comments</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span> <span class="ss">:body</span> <span class="o">=&gt;</span> <span class="n">params</span><span class="o">[</span><span class="ss">:body</span><span class="o">]</span> <span class="p">)</span>
</span><span class='line'>  <span class="n">redirect</span> <span class="s1">&#39;/&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">post</span> <span class="s1">&#39;/delete&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="nb">id</span> <span class="o">=</span> <span class="ss">BSON</span><span class="p">:</span><span class="ss">:ObjectId</span><span class="p">(</span> <span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span> <span class="p">)</span>
</span><span class='line'>  <span class="vi">@comments</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="s1">&#39;_id&#39;</span> <span class="o">=&gt;</span> <span class="nb">id</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">d_comment</span><span class="o">|</span>
</span><span class='line'>    <span class="vi">@comments</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span> <span class="n">d_comment</span> <span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>フォームとか</h2>

<p>フォームとかを作るため、<code>views/index.erb</code> を修正する。</p>

<p><code>&lt;ul&gt;</code> ブロックで、mongodb からデータを抜いてきてリスト表示させている。</p>

<p><code>&lt;form&gt;</code> ブロックで新規の投稿をする。<code>/new</code> に POST しているので、上記の <code>post '/new' do ... end</code> 部分の処理にルーティングされる。</p>

<p><code>&lt;script&gt;</code> ブロックで jquery を利用して既存記事を削除する。<a href="https://developers.google.com/speed/libraries/devguide?hl=ja">Google API</a>を利用。
[x] をクリックしたときに、<code>/delete</code> に POST しているので、上記の <code>post '/delete' do ... end</code> 部分の処理にルーティングされる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">  &lt;h1&gt;sinatra sample&lt;/h1&gt;</span>
</span><span class='line'><span class="x">  &lt;ul&gt;</span>
</span><span class='line'><span class="x">    </span><span class="cp">&lt;%</span> <span class="vi">@comments</span><span class="o">.</span><span class="n">find</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">comment</span><span class="o">|</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">    &lt;li data-id=&quot;</span><span class="cp">&lt;%=</span> <span class="n">comment</span><span class="o">[</span><span class="s2">&quot;_id&quot;</span><span class="o">]</span><span class="cp">%&gt;</span><span class="x">&quot;&gt;</span>
</span><span class='line'><span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">h</span> <span class="n">comment</span><span class="o">[</span><span class="s2">&quot;body&quot;</span><span class="o">]</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">      &lt;span class=&quot;deleteCmd&quot; style=&quot;cursor:pointer; color:blue&quot;&gt;[x]&lt;/span&gt;</span>
</span><span class='line'><span class="x">      &lt;/li&gt;</span>
</span><span class='line'><span class="x">    </span><span class="cp">&lt;%</span> <span class="p">}</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  &lt;/ul&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">  &lt;h2&gt;Add new&lt;/h2&gt;</span>
</span><span class='line'><span class="x">  &lt;form method=&quot;post&quot; action=&quot;new&quot;&gt;</span>
</span><span class='line'><span class="x">    &lt;input type=&quot;text&quot; name=&quot;body&quot;&gt; &lt;input type=&quot;submit&quot; value=&quot;post&quot;&gt;</span>
</span><span class='line'><span class="x">  &lt;/form&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">  &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js&quot;&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="x">  &lt;script&gt;</span>
</span><span class='line'><span class="x">    $(&#39;.deleteCmd&#39;).click(function() {</span>
</span><span class='line'><span class="x">      var el = $( this ).parent();</span>
</span><span class='line'><span class="x">      if(confirm(&#39;are you sure to delete ?&#39;)) {</span>
</span><span class='line'><span class="x">        $.post(&#39;/delete&#39;, {</span>
</span><span class='line'><span class="x">          id: el.data(&#39;id&#39;)</span>
</span><span class='line'><span class="x">          }, function() {</span>
</span><span class='line'><span class="x">            el.fadeOut( 800 );</span>
</span><span class='line'><span class="x">          });</span>
</span><span class='line'><span class="x">      }</span>
</span><span class='line'><span class="x">      })</span>
</span><span class='line'><span class="x">  &lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="https://dl.dropboxusercontent.com/u/28495046/octopress/20130921_sinatra/bs_before.png" alt="" /></p>

<p>これで、mongodb を使った sinatra web アプリケーションができた。</p>

<p>ちょっと殺風景なので、twitter bootstrap3 を使ってお化粧する。</p>

<h2>twitter bootstrap3 を使う</h2>

<p>できあがったものがかなりそっけないので、CSS フレームワークである <a href="http://getbootstrap.com/">twitter bootstrap</a> を使って、すこしだけおしゃれにする。
<a href="https://github.com/twbs/bootstrap/releases/download/v3.0.0/bootstrap-3.0.0-dist.zip">zip ファイル</a> で配布されているので、ダウンロードして解凍する。
sinatra では静的ファイルを <code>public/</code> 以下につっこむため、解凍したディレクトリを public にリネームして sinatra アプリを作っているワーキングディレクトリへ置いておく。</p>

<h3>layout テンプレートの修正</h3>

<p>bootstrap を使うため、<code>views/layout.erb</code> を以下のように修正する。
落としてきた css とscript を指定するのと、bootstrap を使う上で必須な jquery を指定している。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">&lt;!DOCTYPE html&gt;</span>
</span><span class='line'><span class="x">&lt;html lang=&quot;ja&quot;&gt;</span>
</span><span class='line'><span class="x">  &lt;head&gt;</span>
</span><span class='line'><span class="x">    &lt;meata charset=&quot;urf-8&quot;&gt;</span>
</span><span class='line'><span class="x">    &lt;title&gt;sinatra test&lt;/title&gt;</span>
</span><span class='line'><span class="x">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span>
</span><span class='line'><span class="x">    &lt;link href=&quot;css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot; media=&quot;screen&quot;&gt;</span>
</span><span class='line'><span class="x">  &lt;/head&gt;</span>
</span><span class='line'><span class="x">  &lt;body&gt;</span>
</span><span class='line'><span class="x">  &lt;div class=&quot;container&quot; syle=&quot;padding:20px 0&quot;&gt;</span>
</span><span class='line'><span class="x">    &lt;h1&gt;Sinatra Sample&lt;/h1&gt;</span>
</span><span class='line'><span class="x">    </span><span class="cp">&lt;%=</span> <span class="k">yield</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  &lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">  &lt;script src=&quot;http://code.jquery.com/jquery.js&quot;&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="x">  &lt;script src=&quot;js/bootstrap.min.js&quot;&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="x">  &lt;/body&gt;</span>
</span><span class='line'><span class="x">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>views/indx.erb</code> も以下のように修正する。
<code>&lt;ul&gt;</code> をやめて、<code>&lt;table&gt;</code> へ。[x]という文字列も、削除アイコンへ修正。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">  &lt;table class=&quot;table table-striped&quot;&gt;</span>
</span><span class='line'><span class="x">    </span><span class="cp">&lt;%</span> <span class="vi">@comments</span><span class="o">.</span><span class="n">find</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">comment</span><span class="o">|</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">    &lt;tr data-id=&quot;</span><span class="cp">&lt;%=</span> <span class="n">comment</span><span class="o">[</span><span class="s2">&quot;_id&quot;</span><span class="o">]</span><span class="cp">%&gt;</span><span class="x">&quot;&gt;</span>
</span><span class='line'><span class="x">      &lt;td&gt;</span>
</span><span class='line'><span class="x">      </span><span class="cp">&lt;%=</span> <span class="n">h</span> <span class="n">comment</span><span class="o">[</span><span class="s2">&quot;body&quot;</span><span class="o">]</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">        &lt;span class=&quot;deleteCmd&quot; style=&quot;cursor:pointer;&quot;&gt;</span>
</span><span class='line'><span class="x">          &lt;i class=&quot;glyphicon glyphicon-remove&quot;&gt;&lt;/i&gt;</span>
</span><span class='line'><span class="x">        &lt;/span&gt;</span>
</span><span class='line'><span class="x">      &lt;/td&gt;</span>
</span><span class='line'><span class="x">    &lt;/tr&gt;</span>
</span><span class='line'><span class="x">    </span><span class="cp">&lt;%</span> <span class="p">}</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">  &lt;/table&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">  &lt;h2&gt;Add new&lt;/h2&gt;</span>
</span><span class='line'><span class="x">  &lt;form method=&quot;post&quot; action=&quot;new&quot;&gt;</span>
</span><span class='line'><span class="x">    &lt;div class=&quot;form-group&quot;&gt;</span>
</span><span class='line'><span class="x">      &lt;label class=&quot;control-label&quot; for=&quot;comment&quot; &gt;comment&lt;/label&gt;</span>
</span><span class='line'><span class="x">      &lt;input type=&quot;text&quot; name=&quot;body&quot; class=&quot;form-control&quot; placeholder=&quot;your comment&quot;&gt;</span>
</span><span class='line'><span class="x">    &lt;/div&gt;</span>
</span><span class='line'><span class="x">    &lt;div class=&quot;form-group&quot;&gt;</span>
</span><span class='line'><span class="x">      &lt;input type=&quot;submit&quot; value=&quot;post&quot; class=&quot;btn btn-primary&quot;&gt;</span>
</span><span class='line'><span class="x">    &lt;/div&gt;</span>
</span><span class='line'><span class="x">  &lt;/form&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="x">  &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js&quot;&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="x">  &lt;script&gt;</span>
</span><span class='line'><span class="x">    $(&#39;.deleteCmd&#39;).click(function() {</span>
</span><span class='line'><span class="x">      var el = $( this ).parent().parent();</span>
</span><span class='line'><span class="x">      if(confirm(&#39;are you sure to delete ?&#39;)) {</span>
</span><span class='line'><span class="x">        $.post(&#39;/delete&#39;, {</span>
</span><span class='line'><span class="x">          id: el.data(&#39;id&#39;)</span>
</span><span class='line'><span class="x">          }, function() {</span>
</span><span class='line'><span class="x">            el.fadeOut( 800 );</span>
</span><span class='line'><span class="x">          });</span>
</span><span class='line'><span class="x">      }</span>
</span><span class='line'><span class="x">      })</span>
</span><span class='line'><span class="x">  &lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>これで、<code>bundle exec ruby main.rb</code> で sinatra を起動して <a href="http://localhost:4567/">http://localhost:4567/</a> にアクセスする。</p>

<p><img src="https://dl.dropboxusercontent.com/u/28495046/octopress/20130921_sinatra/bs_after.png" alt="" /></p>

<p>こんな感じでちょっとだけおしゃれになる。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails から外れた僕らは sinatra で i did it my way (1)]]></title>
    <link href="http://momota.github.io/blog/2013/09/16/sinatra/"/>
    <updated>2013-09-16T17:37:00+09:00</updated>
    <id>http://momota.github.io/blog/2013/09/16/sinatra</id>
    <content type="html"><![CDATA[<p><img src="http://www.sinatrarb.com/images/logo.png" alt="sinatra" /></p>

<p><a href="http://www.sinatrarb.com/">sinatra</a> は ruby の web アプリケーションフレームワーク。rails よりもシンプルで柔軟なプログラムが可能となる。つまり、しかれた rails に乗り切れない人のためのフレームワーク。
本稿では以下について書く。</p>

<ol>
<li>sinatra インストール</li>
<li>hello world アプリケーション</li>
<li>ルーティング</li>
<li>フィルタ</li>
<li>ヘルパー</li>
<li>テンプレートの呼び出し</li>
</ol>


<hr />

<ul>
<li><a href="http://momota.github.io/blog/2013/09/16/sinatra/">rails から外れた僕らは sinatra で i did it my way (1)</a>

<ul>
<li>sinatra の基本 (ルーティング、ヘルパー、フィルター、テンプレートエンジンなど)</li>
</ul>
</li>
<li><a href="http://momota.github.io/blog/2013/09/22/sinatra/">rails から外れた僕らは sinatra で i did it my way (2)</a>

<ul>
<li>sinatra で MongoDB を使ったデータ永続化</li>
<li>HTTP POSTへの対応</li>
<li>Bootstrap でのお化粧</li>
</ul>
</li>
<li><a href="http://momota.github.io/blog/2013/09/23/sinatra/">rails から外れた僕らは sinatra で i did it my way (3)</a>

<ul>
<li>sinatra の heroku へのデプロイ</li>
</ul>
</li>
</ul>


<!-- more -->


<h2>前準備: インストール</h2>

<p>ruby 2.0 を rbenv でインストールする。
以下、作業は <code>/Users/momota/dev/sinatra/</code> で行う。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rbenv install 2.0.0-p247
</span><span class='line'><span class="nv">$ </span>rbenv <span class="nb">local </span>2.0.0-p247
</span><span class='line'><span class="nv">$ </span>rbenv rehash
</span><span class='line'><span class="nv">$ </span>rbenv version
</span><span class='line'>2.0.0-p247 <span class="o">(</span><span class="nb">set </span>by /Users/momota/dev/sinatra/.ruby-version<span class="o">)</span>
</span><span class='line'><span class="nv">$ </span>ruby -v
</span><span class='line'>ruby 2.0.0p247 <span class="o">(</span>2013-06-27 revision 41674<span class="o">)</span> <span class="o">[</span>x86_64-darwin12.4.0<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>bundler で sinatra と関連 gem をインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>gem install bundler
</span><span class='line'><span class="nv">$ </span>bundle -v
</span><span class='line'>Bundler version 1.3.5
</span><span class='line'><span class="nv">$ </span>bundle init
</span><span class='line'>Writing new Gemfile to /Users/momota/dev/sinatra/Gemfile
</span><span class='line'><span class="nv">$ </span>cat <span class="s">&lt;&lt; EOF &gt;&gt; ./Gemfile</span>
</span><span class='line'><span class="s">heredoc&gt; gem &quot;activerecord&quot;, &quot;3.2.13&quot;</span>
</span><span class='line'><span class="s">heredoc&gt; gem &quot;sqlite3&quot;, &quot;1.3.7&quot;</span>
</span><span class='line'><span class="s">heredoc&gt; gem &quot;sinatra&quot;, &quot;1.4.3&quot;</span>
</span><span class='line'><span class="s">heredoc&gt; gem &quot;sinatra-contrib&quot;, &quot;1.4.0&quot;</span>
</span><span class='line'><span class="s">heredoc&gt; EOF</span>
</span><span class='line'><span class="nv">$ </span>bundle install --path vendor/bundle
</span><span class='line'>Fetching gem metadata from https://rubygems.org/...........
</span><span class='line'>Fetching gem metadata from https://rubygems.org/..
</span><span class='line'>Resolving dependencies...
</span><span class='line'>Installing i18n <span class="o">(</span>0.6.1<span class="o">)</span>
</span><span class='line'>Installing multi_json <span class="o">(</span>1.8.0<span class="o">)</span>
</span><span class='line'>Installing activesupport <span class="o">(</span>3.2.13<span class="o">)</span>
</span><span class='line'>Installing builder <span class="o">(</span>3.0.4<span class="o">)</span>
</span><span class='line'>Installing activemodel <span class="o">(</span>3.2.13<span class="o">)</span>
</span><span class='line'>Installing arel <span class="o">(</span>3.0.2<span class="o">)</span>
</span><span class='line'>Installing tzinfo <span class="o">(</span>0.3.37<span class="o">)</span>
</span><span class='line'>Installing activerecord <span class="o">(</span>3.2.13<span class="o">)</span>
</span><span class='line'>Installing backports <span class="o">(</span>3.3.4<span class="o">)</span>
</span><span class='line'>Installing eventmachine <span class="o">(</span>1.0.3<span class="o">)</span>
</span><span class='line'>Installing rack <span class="o">(</span>1.5.2<span class="o">)</span>
</span><span class='line'>Installing rack-protection <span class="o">(</span>1.5.0<span class="o">)</span>
</span><span class='line'>Installing rack-test <span class="o">(</span>0.6.2<span class="o">)</span>
</span><span class='line'>Installing tilt <span class="o">(</span>1.4.1<span class="o">)</span>
</span><span class='line'>Installing sinatra <span class="o">(</span>1.4.3<span class="o">)</span>
</span><span class='line'>Installing sinatra-contrib <span class="o">(</span>1.4.0<span class="o">)</span>
</span><span class='line'>Installing sqlite3 <span class="o">(</span>1.3.7<span class="o">)</span>
</span><span class='line'>Using bundler <span class="o">(</span>1.3.5<span class="o">)</span>
</span><span class='line'>Your bundle is <span class="nb">complete</span>!
</span><span class='line'>It was installed into ./vendor/bundle
</span></code></pre></td></tr></table></div></figure>


<h2>hello world を返す sinatra アプリケーションを書く</h2>

<p>サイトのルートへアクセスが遇ったときに &ldquo;hello world&rdquo; を返す <code>main.rb</code> を作成する。適当なエディタで以下を書いて保存する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;sinatra&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">get</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="s2">&quot;hello world&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>アプリケーションを実行する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>ruby main.rb
</span></code></pre></td></tr></table></div></figure>


<p>動作確認をする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl http://localhost:4567/
</span><span class='line'>hello world%
</span></code></pre></td></tr></table></div></figure>


<p>ちゃんと返ってきている。簡単。
ここでは、 <code>curl</code> で確認したが、もちろん web ブラウザで <a href="http://localhost:4567/">http://localhost:4567/</a> へアクセスして確認してもOK。
アプリケーションの終了は <code>Ctrl-c</code> でOK。</p>

<h2>ルーティング: 複数のリクエストをさばく</h2>

<p>sinatra では、以下のように HTTP メソッド (GET, POST, &hellip;)とURLがペアでルーティングされる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">get</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># show something</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">post</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># create something</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">put</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># replace something</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">patch</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># modify something</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">delete</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># annihilate something</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">options</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># appease something</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">link</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># affiliate something</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">unlink</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># separate something</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>先ほど書いた <code>main.rb</code> を修正していろいろな HTTP GET リクエストに対応する。
ここでは <a href="http://localhost:4567/about">http://localhost:4567/about</a> にアクセスが有った場合、 &ldquo;about this site&rdquo; 文字列を返すように追記する。
以下は、<code>git diff</code> の結果を示す。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gh">diff --git a/main.rb b/main.rb</span>
</span><span class='line'><span class="gh">index 713861d..9423680 100644</span>
</span><span class='line'><span class="gd">--- a/main.rb</span>
</span><span class='line'><span class="gi">+++ b/main.rb</span>
</span><span class='line'><span class="gu">@@ -1,5 +1,11 @@</span>
</span><span class='line'> require &#39;sinatra&#39;
</span><span class='line'><span class="gi">+require &#39;sinatra/reloader&#39;</span>
</span><span class='line'>
</span><span class='line'> get &#39;/&#39; do
</span><span class='line'>   &quot;hello world&quot;
</span><span class='line'> end
</span><span class='line'><span class="gi">+</span>
</span><span class='line'><span class="gi">+get &#39;/about&#39; do</span>
</span><span class='line'><span class="gi">+  &quot;about this site&quot;</span>
</span><span class='line'><span class="gi">+end</span>
</span><span class='line'><span class="gi">+</span>
</span></code></pre></td></tr></table></div></figure>


<p>通常、スクリプトの修正をアプリケーションへ反映するためには、アプリケーションの再起動が必要となる。<code>require 'sinatra/reloader'</code> により、その必要がなくなる。</p>

<h2>URL からのパラメータを扱う</h2>

<p>以下のメソッドを書くことにより、<a href="http://localhost:4567/hello/SOME_NAME">http://localhost:4567/hello/SOME_NAME</a> へアクセスすると SOME_NAME 部分を扱うことができる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">get</span> <span class="s1">&#39;/hello/:name&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="s2">&quot;hello </span><span class="si">#{</span><span class="n">params</span><span class="o">[</span><span class="ss">:name</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>これは以下のようにも書ける。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">get</span> <span class="s1">&#39;/hello/:name&#39;</span> <span class="k">do</span> <span class="o">|</span><span class="n">n</span><span class="o">|</span>
</span><span class='line'>  <span class="s2">&quot;hello </span><span class="si">#{</span><span class="n">n</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>複数のパラメータを扱うときは以下のように書く。
<a href="http://localhost:4567/hello/FAMILY_NAME/LAST_NAME">http://localhost:4567/hello/FAMILY_NAME/LAST_NAME</a> へアクセスすると、FAMILY_NAME と LAST_NAME を扱える。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">get</span> <span class="s1">&#39;/hello/:fname/?:lname?&#39;</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="p">,</span> <span class="n">l</span><span class="o">|</span>
</span><span class='line'>  <span class="s2">&quot;hello </span><span class="si">#{</span><span class="n">f</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="n">l</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>パラメータは、ワイルドカードや正規表現で扱うことができる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">get</span> <span class="s1">&#39;/from/*/to/*&#39;</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="p">,</span> <span class="n">t</span><span class="o">|</span>
</span><span class='line'>  <span class="s2">&quot;from </span><span class="si">#{</span><span class="n">f</span><span class="si">}</span><span class="s2"> to </span><span class="si">#{</span><span class="n">t</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>結果は以下のとおり。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl http://localhost:4567/from/fukuoka/to/tokyo
</span><span class='line'>from fukuoka to tokyo%
</span></code></pre></td></tr></table></div></figure>


<p>正規表現で扱う場合は、以下。ここでは、<code>/users/</code> 以下がすべて数字であるアクセスの場合にマッチングさせている。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">get</span> <span class="sr">%r{/users/([0-9]+)}</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>  <span class="s2">&quot;user id = </span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>結果は以下のとおり。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl http://localhost:4567/users/12345
</span><span class='line'>user <span class="nv">id</span> <span class="o">=</span> 12345%
</span></code></pre></td></tr></table></div></figure>


<h2>before/after filter</h2>

<p>sinatra のフィルタは、ルーティングされたコンテキストを実行する前後(before / after)で、リクエストとレスポンスを変更することができる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">before</span> <span class="k">do</span>
</span><span class='line'>  <span class="vi">@before_value</span> <span class="o">=</span> <span class="s2">&quot;foo&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">get</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="s2">&quot;before_value has been set to </span><span class="si">#{</span><span class="vi">@before_value</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">after</span> <span class="k">do</span>
</span><span class='line'> <span class="nb">puts</span> <span class="s2">&quot;After filter called to perform some task.&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>以下のように記述することで、フィルタは特定パスのリクエストにのみ評価される。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">before</span> <span class="s1">&#39;/path/you/want/*&#39;</span>
</span><span class='line'>  <span class="c1"># execute only before the &#39;/path/you/want/*&#39; route</span>
</span><span class='line'>  <span class="n">authenticate</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>helper</h2>

<p>ヘルパーメソッドを定義して、ルートハンドラーやテンプレートとして使える。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">helpers</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># 共通関数を書ける</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">say_hello</span><span class="p">(</span> <span class="nb">name</span> <span class="p">)</span>
</span><span class='line'>    <span class="s2">&quot;hello, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">get</span> <span class="s1">&#39;/:name&#39;</span> <span class="k">do</span> <span class="o">|</span><span class="n">n</span><span class="o">|</span>
</span><span class='line'>  <span class="n">say_hello</span><span class="p">(</span> <span class="n">n</span> <span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記は、モジュールとしても記述できる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Hello</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">say_hello</span><span class="p">(</span> <span class="nb">name</span> <span class="p">)</span> <span class="s2">&quot;hello, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">Goodbye</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">say_goodbye</span><span class="p">(</span> <span class="nb">name</span> <span class="p">)</span> <span class="s2">&quot;goodbye, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">helpers</span> <span class="no">Hello</span><span class="p">,</span> <span class="no">Goodbye</span>
</span></code></pre></td></tr></table></div></figure>


<h2>テンプレートエンジンを扱う</h2>

<p>sinatra では様々なテンプレートエンジンを扱うことができる。
例えば、haml, erb, sass, markdown, slim, coffescript など。詳細は <a href="http://www.sinatrarb.com/intro.html#Available%20Template%20Languages">http://www.sinatrarb.com/intro.html#Available%20Template%20Languages</a> このあたりを参照。</p>

<p>ここでは、erb の例を示す。</p>

<p><code>views/index.erb</code> を作成する。スクリプトからは以下のように呼び出せばOK。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">get</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">erb</span> <span class="ss">:index</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>テンプレートエンジンにパラメータを渡す</h3>

<p>インスタンス変数に渡して、テンプレート側からコールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">get</span> <span class="s1">&#39;/:name&#39;</span> <span class="k">do</span> <span class="o">|</span><span class="n">n</span><span class="o">|</span>
</span><span class='line'>  <span class="vi">@name</span>  <span class="o">=</span> <span class="n">n</span>
</span><span class='line'>  <span class="vi">@title</span> <span class="o">=</span> <span class="s1">&#39;sinatra sample&#39;</span>
</span><span class='line'>  <span class="n">erb</span> <span class="ss">:index</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>views/index.erb</code> は以下。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">&lt;!DOCTYPE html&gt;</span>
</span><span class='line'><span class="x">&lt;html lang=&quot;ja&quot;&gt;</span>
</span><span class='line'><span class="x">&lt;head&gt;</span>
</span><span class='line'><span class="x">  &lt;meta charset=&quot;urf-8&quot;&gt;</span>
</span><span class='line'><span class="x">  &lt;title&gt;</span><span class="cp">&lt;%=</span> <span class="vi">@title</span> <span class="cp">%&gt;</span><span class="x">&lt;/title&gt;</span>
</span><span class='line'><span class="x">&lt;/head&gt;</span>
</span><span class='line'><span class="x">&lt;body&gt;</span>
</span><span class='line'><span class="x">&lt;h1&gt;hello </span><span class="cp">&lt;%=</span> <span class="vi">@name</span> <span class="cp">%&gt;</span><span class="x">&lt;/h1&gt;</span>
</span><span class='line'><span class="x">&lt;/body&gt;</span>
</span><span class='line'><span class="x">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>実行結果は以下のとおり。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl http://localhost:4567/taro
</span><span class='line'>&lt;!DOCTYPE html&gt;
</span><span class='line'>&lt;html <span class="nv">lang</span><span class="o">=</span><span class="s2">&quot;ja&quot;</span>&gt;
</span><span class='line'>&lt;head&gt;
</span><span class='line'>  &lt;meta <span class="nv">charset</span><span class="o">=</span><span class="s2">&quot;urf-8&quot;</span>&gt;
</span><span class='line'>  &lt;title&gt;sinatra sample&lt;/title&gt;
</span><span class='line'>&lt;/head&gt;
</span><span class='line'>&lt;body&gt;
</span><span class='line'>&lt;h1&gt;hello taro&lt;/h1&gt;
</span><span class='line'>&lt;/body&gt;
</span><span class='line'>&lt;/html&gt;
</span></code></pre></td></tr></table></div></figure>


<h3>layout テンプレート</h3>

<p>テンプレートが複数存在するときに、ヘッダーやフッターなど、共通部分が出てくる。
そのような共通部分を <code>views/layout.erb</code> 切り出すことができる。(erb以外のときはファイル拡張子を変えればよい。)
<code>views/layout.erb</code> は優先的に読み込まれる。</p>

<p>共通部分を <code>layout.erb</code> に記述し、個別記述部分を <code>yield</code> で呼び出す。以下に <code>layout.erb</code> の例を示す。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">&lt;!DOCTYPE html&gt;</span>
</span><span class='line'><span class="x">&lt;html lang=&quot;ja&quot;&gt;</span>
</span><span class='line'><span class="x">&lt;head&gt;</span>
</span><span class='line'><span class="x">  &lt;meta charset=&quot;urf-8&quot;&gt;</span>
</span><span class='line'><span class="x">  &lt;title&gt;test&lt;/title&gt;</span>
</span><span class='line'><span class="x">&lt;/head&gt;</span>
</span><span class='line'><span class="x">&lt;body&gt;</span>
</span><span class='line'><span class="x">  </span><span class="cp">&lt;%=</span> <span class="k">yield</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">&lt;/body&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>この時、以下のような <code>index.erb</code> テンプレートと</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">  &lt;h1&gt;test&lt;/h1&gt;</span>
</span><span class='line'><span class="x">  &lt;h2&gt;</span><span class="cp">&lt;%=</span> <span class="vi">@name</span><span class="cp">%&gt;</span><span class="x">&lt;/h2&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>以下のルーティングにより</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;sinatra&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;sinatra/reloader&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">get</span> <span class="s1">&#39;/:name&#39;</span> <span class="k">do</span> <span class="o">|</span><span class="n">n</span><span class="o">|</span>
</span><span class='line'>  <span class="vi">@name</span> <span class="o">=</span> <span class="n">n</span>
</span><span class='line'>  <span class="n">erb</span> <span class="ss">:index</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>以下の様な結果になる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl http://localhost:4567/hanako
</span><span class='line'>&lt;!DOCTYPE html&gt;
</span><span class='line'>&lt;html <span class="nv">lang</span><span class="o">=</span><span class="s2">&quot;ja&quot;</span>&gt;
</span><span class='line'>&lt;head&gt;
</span><span class='line'>  &lt;meta <span class="nv">charset</span><span class="o">=</span><span class="s2">&quot;urf-8&quot;</span>&gt;
</span><span class='line'>  &lt;title&gt;test&lt;/title&gt;
</span><span class='line'>&lt;/head&gt;
</span><span class='line'>&lt;body&gt;
</span><span class='line'>    &lt;h1&gt;test&lt;/h1&gt;
</span><span class='line'>  &lt;h2&gt;hanako&lt;/h2&gt;
</span><span class='line'>
</span><span class='line'>&lt;/body&gt;
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[junos firewall filter term 定義を挿入する方法]]></title>
    <link href="http://momota.github.io/blog/2013/09/14/junos-filter/"/>
    <updated>2013-09-14T12:36:00+09:00</updated>
    <id>http://momota.github.io/blog/2013/09/14/junos-filter</id>
    <content type="html"><![CDATA[<p><img src="http://upload.wikimedia.org/wikipedia/en/8/86/Junos_sw_logo.jpg" alt="junos" /></p>

<p>junos の firewall filter の設定で定義の順序について。(EXシリーズを想定)</p>

<p>以下、すべてconfiguration mode での操作。</p>

<p>下記のようなフィルタがすでに設定されている場合に、<code>TERM10</code> と <code>TERM20</code> の間に <code>TERM15</code> を挿入したいことがある。フィルタは上から順に評価されるし。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># show | display set 
</span><span class='line'>...
</span><span class='line'>set firewall family inet filter FILTER01 term TERM10 from source-address 10.0.0.1/32
</span><span class='line'>set firewall family inet filter FILTER01 term TERM10 from destination-address 192.168.1.0/24
</span><span class='line'>set firewall family inet filter FILTER01 term TERM10 from tcp-established
</span><span class='line'>set firewall family inet filter FILTER01 term TERM10 then accept
</span><span class='line'>set firewall family inet filter FILTER01 term TERM20 then count COUNTER20
</span><span class='line'>set firewall family inet filter FILTER01 term TERM20 then discard
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<p>単純に以下のターム定義 <code>TERM15</code> を追加で設定すると</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># set firewall family inet filter FILTER01 term TERM15 from source-address 10.0.0.2/32
</span><span class='line'># set firewall family inet filter FILTER01 term TERM15 from destination-address 192.168.1.0/24
</span><span class='line'># set firewall family inet filter FILTER01 term TERM15 from protocol tcp
</span><span class='line'># set firewall family inet filter FILTER01 term TERM15 from destination-port 20-21
</span><span class='line'># set firewall family inet filter FILTER01 term TERM15 then accept</span></code></pre></td></tr></table></div></figure>


<p>以下のように、意図した箇所に設定が反映されない。
つまり、10.0.0.2/32 から 192.168.1.0/24 への FTP 通信は許可されない。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'># show | display set
</span><span class='line'>...
</span><span class='line'>  set firewall family inet filter FILTER01 term TERM10 from source-address 10.0.0.1/32
</span><span class='line'>  set firewall family inet filter FILTER01 term TERM10 from destination-address 192.168.1.0/24
</span><span class='line'>  set firewall family inet filter FILTER01 term TERM10 from tcp-established
</span><span class='line'>  set firewall family inet filter FILTER01 term TERM10 then accept
</span><span class='line'>  set firewall family inet filter FILTER01 term TERM20 then count COUNTER20
</span><span class='line'>  set firewall family inet filter FILTER01 term TERM20 then discard
</span><span class='line'><span class="gi">+ set firewall family inet filter FILTER01 term TERM15 from source-address 10.0.0.2/32</span>
</span><span class='line'><span class="gi">+ set firewall family inet filter FILTER01 term TERM15 from destination-address 192.168.1.0/24</span>
</span><span class='line'><span class="gi">+ set firewall family inet filter FILTER01 term TERM15 from protocol tcp</span>
</span><span class='line'><span class="gi">+ set firewall family inet filter FILTER01 term TERM15 from destination-port 20-21</span>
</span><span class='line'><span class="gi">+ set firewall family inet filter FILTER01 term TERM15 then accept</span>
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p><code>TERM10</code> と <code>TERM20</code> の間に <code>TERM15</code> を挿入する場合は、以下のように既存定義をすべて <code>delete</code> してから新しい定義追加済みの定義を設定し直す必要があるが、ターム定義が1000くらいあるケースを想定するとそれは避けたい。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'># delete firewall family inet filter FILTER01 term TERM10
</span><span class='line'># delete firewall family inet filter FILTER01 term TERM20
</span><span class='line'>#
</span><span class='line'># set firewall family inet filter FILTER01 term TERM10 from source-address 10.0.0.1/32
</span><span class='line'># set firewall family inet filter FILTER01 term TERM10 from destination-address 192.168.1.0/24
</span><span class='line'># set firewall family inet filter FILTER01 term TERM10 from tcp-established
</span><span class='line'># set firewall family inet filter FILTER01 term TERM10 then accept
</span><span class='line'># set firewall family inet filter FILTER01 term TERM15 from source-address 10.0.0.2/32
</span><span class='line'># set firewall family inet filter FILTER01 term TERM15 from destination-address 192.168.1.0/24
</span><span class='line'># set firewall family inet filter FILTER01 term TERM15 from protocol tcp
</span><span class='line'># set firewall family inet filter FILTER01 term TERM15 from destination-port 20-21
</span><span class='line'># set firewall family inet filter FILTER01 term TERM15 then accept
</span><span class='line'># set firewall family inet filter FILTER01 term TERM20 then count COUNTER20
</span><span class='line'># set firewall family inet filter FILTER01 term TERM20 then discard
</span></code></pre></td></tr></table></div></figure>


<p>このようなときには <code>insert</code> を使う。以下のようにターム設定後に <code>insert</code> してあげればOK。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'># set firewall family inet filter FILTER01 term TERM15 from source-address 10.0.0.2/32
</span><span class='line'># set firewall family inet filter FILTER01 term TERM15 from destination-address 192.168.1.0/24
</span><span class='line'># set firewall family inet filter FILTER01 term TERM15 from protocol tcp
</span><span class='line'># set firewall family inet filter FILTER01 term TERM15 from destination-port 20-21
</span><span class='line'># set firewall family inet filter FILTER01 term TERM15 then accept
</span><span class='line'>#
</span><span class='line'># insert firewall family inet filter FILTER01 term TERM15 after term TERM_10
</span></code></pre></td></tr></table></div></figure>


<p>そうすると、以下のように意図したとおり定義できる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'># show | display set
</span><span class='line'>...
</span><span class='line'>  set firewall family inet filter FILTER01 term TERM10 from source-address 10.0.0.1/32
</span><span class='line'>  set firewall family inet filter FILTER01 term TERM10 from destination-address 192.168.1.0/24
</span><span class='line'>  set firewall family inet filter FILTER01 term TERM10 from tcp-established
</span><span class='line'>  set firewall family inet filter FILTER01 term TERM10 then accept
</span><span class='line'><span class="gi">+ set firewall family inet filter FILTER01 term TERM15 from source-address 10.0.0.2/32</span>
</span><span class='line'><span class="gi">+ set firewall family inet filter FILTER01 term TERM15 from destination-address 192.168.1.0/24</span>
</span><span class='line'><span class="gi">+ set firewall family inet filter FILTER01 term TERM15 from protocol tcp</span>
</span><span class='line'><span class="gi">+ set firewall family inet filter FILTER01 term TERM15 from destination-port 20-21</span>
</span><span class='line'><span class="gi">+ set firewall family inet filter FILTER01 term TERM15 then accept</span>
</span><span class='line'>  set firewall family inet filter FILTER01 term TERM20 then count COUNTER20
</span><span class='line'>  set firewall family inet filter FILTER01 term TERM20 then discard
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[zsh をログインシェルにしてワーク・ライフ・バランスを改善する (oh-my-zsh)]]></title>
    <link href="http://momota.github.io/blog/2013/09/07/oh-my-zsh/"/>
    <updated>2013-09-07T00:04:00+09:00</updated>
    <id>http://momota.github.io/blog/2013/09/07/oh-my-zsh</id>
    <content type="html"><![CDATA[<p>bash や tcsh でいいよ、って人もだまされたと思って zsh 試してほしい。もう元に戻れないくらい便利だと感じてもらえるだろう。本番環境のサーバにも入れたいくらい。</p>

<p>zsh そのままでも十分便利だけど、<em>oh-my-zsh</em> を入れるとさらに便利になるよ。
oh-my-zsh はオープンソースで zsh の便利設定やカラーテーマなどがまとまっているもの。</p>

<p>以下では、zsh インストールと oh-my-zsh の導入について記載するよ。</p>

<!-- more -->


<h2>0. zsh の特徴, つまり導入メリット</h2>

<p><a href="http://ja.wikipedia.org/wiki/Z_Shell">wikipedia に zsh の特徴がまとめられている</a>が、その中でも特に以下が個人的に便利だと思う。</p>

<ul>
<li>プログラム可能な補完機能に拠って、多くのユーザーコマンドのオプションや引数を打つのを支援する

<ul>
<li>インストールの時点で数百のコマンドをサポートしている</li>
</ul>
</li>
<li>スペル修正機能

<ul>
<li>間違いを正すのはもちろん、大文字を小文字に変換してくれたり</li>
</ul>
</li>
<li>ユーザーの起動している全てのzshでコマンド履歴を共有することができる

<ul>
<li>screen や tmux 使いにはうれしい</li>
</ul>
</li>
</ul>


<p>その他、Wikipediaには以下の特徴が列挙されている。</p>

<ul>
<li>拡張ファイル名生成（ワイルドカード展開）に拠って &ldquo;find&rdquo; のような外部コマンドを呼び出さないで、ファイル名を展開する。</li>
<li>変数や配列の処理が改善されている。</li>
<li>複数行コマンドがバッファーで編集できる。</li>
<li>様々な互換モードが在る。例えば、zshをshとして実行したとき、bashの振りをするようにできる。</li>
<li>プロンプトテーマ</li>
<li>端末の右端に情報を表示し長いコマンドを打っているときは自動的に隠れる右プロンプトを表示できる。</li>
<li>殆ど全部のカスタマイズが可能。</li>
</ul>


<h2>1. zsh をインストールする</h2>

<p>失うものが何もなくなったところで zsh をインストールしよう。</p>

<p>centos だと yum でインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo yum -y install zsh
</span></code></pre></td></tr></table></div></figure>


<p>macだと homebrew でインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo brew install zsh
</span></code></pre></td></tr></table></div></figure>


<p>ubuntu だと apt でインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo apt-get install zsh
</span></code></pre></td></tr></table></div></figure>


<p>インストールできたかどうかを確認する。(上述したすべてのOSで共通、たぶん)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>zsh --version
</span><span class='line'>zsh 4.3.17 <span class="o">(</span>x86_64-unknown-linux-gnu<span class="o">)</span>
</span><span class='line'><span class="nv">$ </span>which zsh
</span><span class='line'>/usr/bin/zsh
</span></code></pre></td></tr></table></div></figure>


<h2>2. ログインシェルを zsh にする</h2>

<p>ログイン直後にデフォルトで起動する shell を zsh にするよ。
ここでは ubuntu 12.04 でのコマンド例ですが、たぶん mac や centos とかでも一緒でOKだと思う。</p>

<p>現在利用可能なシェルの一覧は以下で確認できる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>cat /etc/shells
</span><span class='line'><span class="c"># /etc/shells: valid login shells</span>
</span><span class='line'>/bin/sh
</span><span class='line'>/bin/dash
</span><span class='line'>/bin/bash
</span><span class='line'>/bin/rbash
</span><span class='line'>/bin/zsh
</span><span class='line'>/usr/bin/zsh
</span><span class='line'>/usr/bin/tmux
</span></code></pre></td></tr></table></div></figure>


<p>それではログインシェルを zsh に変えよう。
インタラクティブにパスワードと zsh への path を入力しよう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>chsh
</span><span class='line'>Password:
</span><span class='line'>Changing the login shell <span class="k">for </span>momota
</span><span class='line'>Enter the new value, or press ENTER <span class="k">for </span>the default
</span><span class='line'>        Login Shell <span class="o">[</span>/bin/bash<span class="o">]</span>: /usr/bin/zsh
</span></code></pre></td></tr></table></div></figure>


<p>再度ログインして、ログインシェルが zsh へ変わったことを確認しよう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="nv">$SHELL</span>
</span><span class='line'>/usr/bin/zsh
</span></code></pre></td></tr></table></div></figure>


<p>ここで、<code>‾/.zshrc</code> を作りたい衝動を抑えて、次に進もう。</p>

<h2>3. <a href="https://github.com/robbyrussell/oh-my-zsh">oh-my-zsh</a> を導入する</h2>

<p>繰り返しになりますが、oh-my-zsh はオープンソースで zsh の便利設定やカラーテーマなどがまとまっているもの。<code>.zshrc</code>もテンプレがあるのでコピれば楽ちん。
カスタマイズしたければ oh-my-zsh を導入してからにしよう。
導入方法は github に書いてあるとおり <code>curl -L https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh | sh</code> でいいと思うけど、シェルスクリプトの中身をチェックするのがめんどかったのでわたしはマニュアルで入れました。</p>

<h3>3.1. リポジトリから 最新版を clone する</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git clone git://github.com/robbyrussell/oh-my-zsh.git ‾/.oh-my-zsh
</span></code></pre></td></tr></table></div></figure>


<h3>3.2. すでに <code>‾/.zshrc</code> を作っているひとはバックアップしよう</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>cp ‾/.zshrc ‾/.zshrc.orig
</span></code></pre></td></tr></table></div></figure>


<h3>3.3. <code>.zshrc</code> テンプレートをコピる</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>cp ‾/.oh-my-zsh/templates/zshrc.zsh-template ‾/.zshrc
</span></code></pre></td></tr></table></div></figure>


<h3>3.4. 新しい <code>.zshrc</code> を読み込もう</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">source</span> ‾/.zshrc
</span></code></pre></td></tr></table></div></figure>


<p><code>source</code> の代わりに再ログインしてもいいけど。
こんな感じで git のステータスも見やすくなる。</p>

<p><img src="https://dl.dropboxusercontent.com/u/28495046/octopress/20130907_oh-my-zsh/zsh.png" alt="zsh" /></p>

<h3>3.5. テーマを変更する</h3>

<p><a href="https://github.com/robbyrussell/oh-my-zsh/wiki/themes">ここにいろいろなテーマがある</a> ので好きなテーマ名を <code>‾/.zshrc</code> 中の <code>ZSH_THEME</code> にセットしてあげればOK。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">ZSH_THEME</span><span class="o">=</span><span class="s2">&quot;wedisagree&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>変更したら、以下で <code>‾/.zshrc</code> を再読み込み。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">source</span> ‾/.zshrc
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
