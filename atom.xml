<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[momota.txt]]></title>
  <link href="http://momota.github.io/atom.xml" rel="self"/>
  <link href="http://momota.github.io/"/>
  <updated>2013-08-29T23:40:38+09:00</updated>
  <id>http://momota.github.io/</id>
  <author>
    <name><![CDATA[momota]]></name>
    <email><![CDATA[makoto.momota@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[vim プラグインで幸せな生活を送る]]></title>
    <link href="http://momota.github.io/blog/2013/08/29/vim-plugins/"/>
    <updated>2013-08-29T00:38:00+09:00</updated>
    <id>http://momota.github.io/blog/2013/08/29/vim-plugins</id>
    <content type="html"><![CDATA[<p>vimはhjklな変態的キーバインドから敬遠されがちだと思うけど強力なプラグインがあってこそ、やめられないとまらないわけであって、ここではプラグインの導入方法や管理方法を記載します。</p>

<!-- more -->


<h2>ノーマルなプラグイン導入</h2>

<ol>
<li><p>プラグインファイルをダウンロードしてくる</p></li>
<li><p>ダウンロードしたプラグインファイル一式を runtimepathで指定されたディレクトリ以下に放り込む</p>

<ul>
<li>通常は <code>$HOME/.vim</code> 。runtimepathは以下のviコマンドで確認できる。</li>
</ul>
</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'><span class="p">:</span><span class="k">set</span> <span class="nb">runtimepath</span>
</span></code></pre></td></tr></table></div></figure>


<p>helpを見てみると、以下ディレクトリ(優先順)がデフォルト設定されている。(vim74-kaoriya-win64で確認)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'> :help <span class="nb">runtimepath</span>
</span><span class='line'> # <span class="p">=&gt;</span> 以下抜粋
</span><span class='line'> <span class="s1">&#39;runtimepath&#39;</span> <span class="s1">&#39;rtp&#39;</span> 文字列  <span class="p">(</span>既定値:
</span><span class='line'>                 Unix: <span class="c">&quot;$HOME/.vim,</span>
</span><span class='line'>                 $VIM/vimfiles<span class="p">,</span>
</span><span class='line'>                 $VIMRUNTIME<span class="p">,</span>
</span><span class='line'>                 $VIM<span class="sr">/vimfiles/</span>after<span class="p">,</span>
</span><span class='line'>                 $HOME<span class="sr">/.vim/</span>after&quot;
</span><span class='line'>                 DOS<span class="p">,</span> MS<span class="p">-</span>Win系<span class="p">,</span> OS<span class="sr">/2: &quot;$HOME/</span>vimfiles<span class="p">,</span>
</span><span class='line'>                 $VIM/vimfiles<span class="p">,</span>
</span><span class='line'>                 $VIMRUNTIME<span class="p">,</span>
</span><span class='line'>                 $VIM<span class="sr">/vimfiles/</span>after<span class="p">,</span>
</span><span class='line'>                 $HOME<span class="sr">/vimfiles/</span>after&quot;
</span><span class='line'>                 Macintosh: <span class="c">&quot;$VIM:vimfiles,</span>
</span><span class='line'>                 $VIMRUNTIME<span class="p">,</span>
</span><span class='line'>                 $VIM:vimfiles:after&quot;
</span><span class='line'>                 <span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>プラグインによるプラグインパッケージ管理</h2>

<p>上述したプラグイン導入を続けていくと、<code>$HOME/.vim/</code> 以下が散らかっていくことが容易に想像できるでしょう。散らかるだけで実害がなければ良いのですが、あるプラグインだけ削除したいときなどに難易度高くて困ります。
そこで、プラグインの相互独立性を担保しながら管理できるプラグインを導入します。</p>

<p>代表的なプラグインパッケージ管理プラグインは、以下です。</p>

<table>
<thead>
<tr>
<th></th>
<th>プラグイン名 </th>
<th>概要       </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td><a href="https://github.com/tpope/vim-pathogen">pathogen</a>      </td>
<td> <code>~/.vim/bundle/&lt;プラグイン名&gt;/</code> 以下の各ディレクトリも <code>~/.vim/</code> 直下と同じように読み込むようにするプラグイン。これにより、<code>~/.vim/bundle/</code> 以下にプラグインごとに別のディレクトリを切って管理をすることができるようになる。</td>
</tr>
<tr>
<td></td>
<td><a href="https://github.com/gmarik/vundle">vundle</a>             </td>
<td>Vundle は Rails 3 で採用されている、Gem 管理システム Bundler に影響を受けたプラグイン管理システム。自分で <code>~/.vim/bundle</code> git cloneなどで放り込まなくても、vimコマンドでプラグイン追加が可能。</td>
</tr>
<tr>
<td></td>
<td><a href="https://github.com/Shougo/neobundle.vim">neobundle</a>   </td>
<td>Vundleにインスパイアされたプラグイン管理システム。Vundleの改良版。</td>
</tr>
</tbody>
</table>


<p>上記よりNeoBundleを選びたいと思います。</p>

<h2>NeoBundleインストールと設定</h2>

<h3>1. NeoBundleをセットアップする</h3>

<ul>
<li>githubから最新NeoBundleのソースを clone する。ここでは、runtimepathを<code>~./.vim/</code>とします。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>mkdir -p ~/.vim/bundle
</span><span class='line'><span class="nv">$ </span>git clone git://github.com/Shougo/neobundle.vim ~/.vim/bundle/neobundle.vim
</span></code></pre></td></tr></table></div></figure>


<h3>2. NeoBundleを設定する</h3>

<ul>
<li><code>~/.vimrc</code> にNeoBundleの設定を加える。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'><span class="c">&quot; ----------------------------------------------------------------------------------------</span>
</span><span class='line'><span class="c">&quot;   neobundle</span>
</span><span class='line'><span class="c">&quot; ----------------------------------------------------------------------------------------</span>
</span><span class='line'><span class="k">set</span> <span class="nb">nocompatible</span>               <span class="c">&quot; Be iMproved</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> has<span class="p">(</span><span class="s1">&#39;vim_starting&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">set</span> <span class="nb">runtimepath</span><span class="p">+=~</span><span class="sr">/.vim/</span>bundle<span class="sr">/neobundle.vim/</span>
</span><span class='line'><span class="k">endif</span>
</span><span class='line'>
</span><span class='line'><span class="k">call</span> neobundle#rc<span class="p">(</span>expand<span class="p">(</span><span class="s1">&#39;~/.vim/bundle/&#39;</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="c">&quot; Let NeoBundle manage NeoBundle</span>
</span><span class='line'>NeoBundleFetch <span class="s1">&#39;Shougo/neobundle.vim&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&quot; Recommended to install</span>
</span><span class='line'><span class="c">&quot; After install, turn shell ~/.vim/bundle/vimproc, (n,g)make -f your_machines_makefile</span>
</span><span class='line'>NeoBundle <span class="s1">&#39;Shougo/vimproc&#39;</span><span class="p">,</span> {
</span><span class='line'>        \ <span class="s1">&#39;build&#39;</span> : {
</span><span class='line'>                \ <span class="s1">&#39;windows&#39;</span> : <span class="s1">&#39;make -f make_mingw32.mak&#39;</span><span class="p">,</span>
</span><span class='line'>                \ <span class="s1">&#39;cygwin&#39;</span> : <span class="s1">&#39;make -f make_cygwin.mak&#39;</span><span class="p">,</span>
</span><span class='line'>                \ <span class="s1">&#39;mac&#39;</span> : <span class="s1">&#39;make -f make_mac.mak&#39;</span><span class="p">,</span>
</span><span class='line'>                \ <span class="s1">&#39;unix&#39;</span> : <span class="s1">&#39;make -f make_unix.mak&#39;</span><span class="p">,</span>
</span><span class='line'>        \ }<span class="p">,</span>
</span><span class='line'>\ }
</span><span class='line'>
</span><span class='line'><span class="k">filetype</span> plugin indent <span class="k">on</span>     <span class="c">&quot; Required!</span>
</span><span class='line'>
</span><span class='line'><span class="c">&quot; Brief help</span>
</span><span class='line'><span class="c">&quot; :NeoBundleList          - list configured bundles</span>
</span><span class='line'><span class="c">&quot; :NeoBundleInstall(!)    - install(update) bundles</span>
</span><span class='line'><span class="c">&quot; :NeoBundleClean(!)      - confirm(or auto-approve) removal of unused bundles</span>
</span><span class='line'>
</span><span class='line'><span class="c">&quot; Installation check.</span>
</span><span class='line'>NeoBundleCheck
</span></code></pre></td></tr></table></div></figure>


<h3>3. プラグインの取得</h3>

<ul>
<li><code>~/.vimrc</code>にインストールするプラグインを列挙する。(以下は例)</li>
<li>保存したあと、vim を起動し<code>:NeoBundleInstall</code> を実行するとプラグインがインストールされる。プラグインファイルは、<code>.vim/bundle/</code>以下にプラグイン別に保存される。もちろん各プラグインの設定は個別に <code>.vimrc</code> へ記述する必要がある。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'><span class="c">&quot; GitHubリポジトリにあるプラグインを利用する</span>
</span><span class='line'><span class="c">&quot; --&gt; NeoBundle &#39;USER/REPOSITORY-NAME&#39;</span>
</span><span class='line'>NeoBundle <span class="s1">&#39;Shougo/neocomplcache&#39;</span>
</span><span class='line'>NeoBundle <span class="s1">&#39;Shougo/neosnippet&#39;</span>
</span><span class='line'>NeoBundle <span class="s1">&#39;Shougo/unite.vim&#39;</span>
</span><span class='line'>NeoBundle <span class="s1">&#39;thinca/vim-quickrun&#39;</span>
</span><span class='line'>NeoBundle <span class="s1">&#39;davidoc/taskpaper.vim&#39;</span>
</span><span class='line'>NeoBundle <span class="s1">&#39;itchyny/lightline.vim&#39;</span>
</span><span class='line'>NeoBundle <span class="s1">&#39;altercation/vim-colors-solarized&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&quot;GitHub以外のGitリポジトリにあるプラグインを利用する</span>
</span><span class='line'>NeoBundle <span class="s1">&#39;git://git.wincent.com/command-t.git&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&quot; vim-scripts リポジトリにあるプラグインを利用する</span>
</span><span class='line'>NeoBundle <span class="s1">&#39;surround.vim&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c">&quot;Git以外のリポジトリにあるプラグインを利用する</span>
</span><span class='line'>NeoBundle <span class="s1">&#39;http://svn.macports.org/repository/macports/contrib/mpvim/&#39;</span>
</span><span class='line'>NeoBundle <span class="s1">&#39;https://bitbucket.org/ns9tks/vim-fuzzyfinder&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>プラグインをアンインストールしたい場合は、<code>.vimrc</code>から当該プラグインの記述を消し、<code>:NeoBundleClean</code>を実行する。</li>
</ul>


<h2>おすすめプラグイン</h2>

<table>
<thead>
<tr>
<th></th>
<th>プラグイン名  </th>
<th>概要                                        </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td><a href="https://github.com/Shougo/neocomplcache.vim">neocomplcache</a> </td>
<td>入力補完機能を提供する</td>
</tr>
<tr>
<td></td>
<td><a href="https://github.com/Shougo/neosnippet.vim">neosnippet</a>    </td>
<td>スニペット入力サポート</td>
</tr>
<tr>
<td></td>
<td><a href="https://github.com/itchyny/lightline.vim">lightline.vim</a> </td>
<td>ステータスライン表示をおしゃれに</td>
</tr>
<tr>
<td></td>
<td><a href="https://github.com/davidoc/taskpaper.vim">taskpaper.vim</a> </td>
<td>タスク・TODOリストを管理</td>
</tr>
<tr>
<td></td>
<td><a href="https://github.com/Shougo/unite.vim">unite.vim</a>     </td>
<td>ファイラとして利用</td>
</tr>
<tr>
<td></td>
<td><a href="https://github.com/altercation/vim-colors-solarized">solarized</a>     </td>
<td>カラースキーム</td>
</tr>
<tr>
<td></td>
<td><a href="http://www.vim.org/scripts/script.php?script_id=1697">surround</a>      </td>
<td>HTMLタグなど&#8221;囲まれているもの&#8221;の編集補助</td>
</tr>
</tbody>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rbenv でrubyバージョンにはもう泣かされない]]></title>
    <link href="http://momota.github.io/blog/2013/08/25/rbenv/"/>
    <updated>2013-08-25T22:06:00+09:00</updated>
    <id>http://momota.github.io/blog/2013/08/25/rbenv</id>
    <content type="html"><![CDATA[<p>ソフトウェアバージョンの差異に悩まされる人は多いと思う。</p>

<p>同じOS上で違うバージョンのrubyを動かしたいことはまあある。
<code>/home/you/foo</code>以下は既存コードがあるから1.8系のままでで動かしたいし、<code>/home/you/bar</code>以下は新しい試みとして2.0系を動かしたいとか。
そこでrbenvという便利なrubyバージョン管理ツールがある。
rbenvにより、あるディレクトリ以下のrubyバージョンを任意に指定できる。</p>

<!-- more -->


<h1>ruby install by rbenv</h1>

<p>githubの<code>README.md</code>参照。</p>

<h1>rbenv operations</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># list all available versions</span>
</span><span class='line'><span class="c"># &quot;install&quot; command require that install ruby-build</span>
</span><span class='line'><span class="c">#   -&gt; https://github.com/sstephenson/ruby-build</span>
</span><span class='line'><span class="nv">$ </span>rbenv install -l
</span><span class='line'>
</span><span class='line'><span class="c"># List all Ruby versions known by rbenv</span>
</span><span class='line'><span class="nv">$ </span>rbenv versions
</span><span class='line'>
</span><span class='line'><span class="c"># install</span>
</span><span class='line'><span class="nv">$ </span>rbenv install 1.9.3-pxx
</span><span class='line'>
</span><span class='line'><span class="c"># switch</span>
</span><span class='line'><span class="nv">$ </span>rbenv global 1.9.3-pxx
</span><span class='line'>
</span><span class='line'><span class="c"># back to system default</span>
</span><span class='line'><span class="nv">$ </span>rbenv global system
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c"># 特定のディレクトリ以下のRubyバージョンを切り替え</span>
</span><span class='line'><span class="nv">$ </span>rbenv <span class="nb">local </span>1.9.3-p327
</span><span class='line'>
</span><span class='line'><span class="c"># ローカル設定を解除</span>
</span><span class='line'><span class="nv">$ </span>rbenv <span class="nb">local</span> --unset
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c"># get the latest ruby versions for rbenv</span>
</span><span class='line'><span class="nv">$ </span>brew install ruby-build
</span><span class='line'><span class="nv">$ </span>brew link -f ruby-build
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c"># path to installed ruby or gem</span>
</span><span class='line'><span class="nv">$ </span>rbenv rehash
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vim7.4 を mac (osx) にインストール]]></title>
    <link href="http://momota.github.io/blog/2013/08/24/vim-osx/"/>
    <updated>2013-08-24T12:56:00+09:00</updated>
    <id>http://momota.github.io/blog/2013/08/24/vim-osx</id>
    <content type="html"><![CDATA[<p><a href="http://vim-jp.org/blog/2013/08/10/vim_7.4_released.html">vim 7.4がリリースされた</a>ので、macのvimをupdateする。</p>

<!-- more -->


<h2>install mercurial</h2>

<p>最新のvimをリポジトリから引っ張ってくる(後述の<code>hg clone http://...</code>)ため、分散型バージョン管理システムであるmercurialをインストールする。mercurialはgitの親戚かな。</p>

<ol>
<li><p>インストーラをダウンロードする</p>

<p> mercurial インストーラをダウンロードする from <a href="http://mercurial.selenic.com/">http://mercurial.selenic.com/</a></p></li>
<li><p>install</p>

<p> ダウンロードしたファイルを unzip する。
 解凍した <code>*.mpkg</code> をダブルクリックし、インストーラを起動する。そのあとはポチポチと次へ的なボタンを押す簡単なお仕事。</p></li>
</ol>


<h2>install vim</h2>

<p><a href="http://stackoverflow.com/questions/7211820/update-built-in-vim-on-mac-os-x">http://stackoverflow.com/questions/7211820/update-built-in-vim-on-mac-os-x</a> を参考にした。</p>

<h3>(1) 事前確認</h3>

<p>現状のバイナリへのpathやバージョンを確認する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>which vim
</span><span class='line'>/usr/bin/vim
</span><span class='line'><span class="nv">$ </span>vim --version | head -n 2
</span><span class='line'>VIM - Vi IMproved 7.3 <span class="o">(</span>2010 Aug 15, compiled Jun 20 2012 13:16:02<span class="o">)</span>
</span><span class='line'>Compiled by root@apple.com
</span></code></pre></td></tr></table></div></figure>


<h3>(2) インストールと設定</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /opt/local/bin
</span><span class='line'>
</span><span class='line'><span class="c"># download, compile, and install the latest vim</span>
</span><span class='line'><span class="nv">$ </span>sudo hg clone https://code.google.com/p/vim/
</span><span class='line'><span class="nv">$ </span>mv vim vim_
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>vim_
</span><span class='line'><span class="nv">$ </span>sudo ./configure --prefix<span class="o">=</span>/opt/local
</span><span class='line'><span class="nv">$ </span>sudo make
</span><span class='line'><span class="nv">$ </span>sudo make install
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c"># add the binary to your path, ahead of /usr/bin</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;export PATH=&quot;/opt/local/bin:$PATH&quot;&#39;</span> &gt;&gt; ~/.zshrc
</span><span class='line'>
</span><span class='line'><span class="c"># reload zshrc so the changes take effect in this window</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">source</span> ~/.zshrc
</span></code></pre></td></tr></table></div></figure>


<p>リポジトリからクローンしたときにディレクトリ名が<code>vim</code>のままだと<code>make install</code>時にエラーになるので、<code>vim_</code>など適当なディレクトリ名に変更しました。</p>

<h3>(3) 事後確認</h3>

<p>7.4になりました。enjoy your vim life.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>which vim
</span><span class='line'>/opt/local/bin/vim
</span><span class='line'><span class="nv">$ </span>vim --version | head -n 2
</span><span class='line'>IM - Vi IMproved 7.4 <span class="o">(</span>2013 Aug 10, compiled Aug 24 2013 12:28:42<span class="o">)</span>
</span><span class='line'>MacOS X <span class="o">(</span>unix<span class="o">)</span> version
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iTerm2へsolarized導入]]></title>
    <link href="http://momota.github.io/blog/2013/08/24/solarized-iterm2/"/>
    <updated>2013-08-24T00:52:00+09:00</updated>
    <id>http://momota.github.io/blog/2013/08/24/solarized-iterm2</id>
    <content type="html"><![CDATA[<p><img src="http://ethanschoonover.com/solarized/img/solarized-yinyang.png" alt="solarized" /></p>

<p>人気のカラースキーム <a href="http://ethanschoonover.com/solarized">Solarized</a> を、iTerm2へ適用する。</p>

<p>適用イメージは以下。</p>

<ul>
<li>before</li>
</ul>


<p><img src="https://dl.dropboxusercontent.com/u/28495046/octopress/20130823_iterm_solarized/before_iterm.png" alt="iterm before" /></p>

<ul>
<li>after</li>
</ul>


<p><img src="https://dl.dropboxusercontent.com/u/28495046/octopress/20130823_iterm_solarized/after_iterm.png" alt="iterm after" /></p>

<!-- more -->


<ol>
<li><p>Solarized*.itermcolors をダウンロードする</p>

<p> <a href="https://github.com/altercation/solarized/tree/master/iterm2-colors-solarized">https://github.com/altercation/solarized/tree/master/iterm2-colors-solarized</a> からSolarized*.itermcolors ファイルをダウンロードする</p></li>
<li><p>iterm2 を開く</p>

<p> ちなみにわたしは、<code>ctrl + space</code> でSpotlightを開き、<code>ite</code>入力くらいで起動しています。</p></li>
<li><p>preferencesダイアログを開く</p>

<p> <code>command + o</code> でprofilesダイアログを開いて、<code>Edit Profiles...</code> ボタンを押下する。</p></li>
<li><p>solarized用のprofileを作成する</p>

<p> preferences ダイアログの<code>Profiles</code>タブから、左下の方の<code>+</code>を押下し、プロファイルを追加する。
 <code>General</code>タブのBasicのNameを<code>solarized</code>とかに修正する</p></li>
<li><ol>
<li>でダウンロードしたファイルを読み込ませる</li>
</ol>


<p> <code>Colors</code> タブから <code>Load Presets...</code> ボタンを押下後、<code>import</code> を押す。1. でダウンロードしたSolarized*.itermcolorsファイルを選択する。</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PuTTY へsolarized導入]]></title>
    <link href="http://momota.github.io/blog/2013/08/22/solarized-putty/"/>
    <updated>2013-08-22T23:00:00+09:00</updated>
    <id>http://momota.github.io/blog/2013/08/22/solarized-putty</id>
    <content type="html"><![CDATA[<p><img src="http://ethanschoonover.com/solarized/img/solarized-yinyang.png" alt="solarized" /></p>

<p>人気のカラースキーム <a href="http://ethanschoonover.com/solarized">Solarized</a> を、PuTTYへ適用する。
ちなみにパティと発音するみたいですね。ずっとプティと発音してました。</p>

<p>適用イメージは以下。</p>

<ul>
<li>before</li>
</ul>


<p><img src="https://dl.dropboxusercontent.com/u/28495046/octopress/20130822_putty_solarized/01_before_putty.png" alt="putty before" /></p>

<ul>
<li>after</li>
</ul>


<p><img src="https://dl.dropboxusercontent.com/u/28495046/octopress/20130822_putty_solarized/02_after_putty.png" alt="putty after" /></p>

<!-- more -->


<h1>環境</h1>

<ul>
<li>windows 7 professional service pack 1</li>
<li>PuTTY 0.60-JP_Y-2007-08-06</li>
<li>ちなみにフォントは、&#8221;Osakaー等幅&#8221; を利用</li>
</ul>


<h1>solarized_dark.reg (solarized_light.reg)をダウンロードする</h1>

<p><a href="https://github.com/brantb/solarized/tree/master/putty-colors-solarized">https://github.com/brantb/solarized/tree/master/putty-colors-solarized</a></p>

<p>solarized_dark.regをダウンロードし、<code>C:¥Program Files (x86)¥PuTTY¥</code> に保存</p>

<h1>solarized_dark.regを修正する</h1>

<p><a href="http://27213143.at.webry.info/201304/article_1.html">http://27213143.at.webry.info/201304/article_1.html</a></p>

<p>solarized_dark.regをテキストエディタで開き、ファイル中の <code>Solarized%20Dark(Solarized%20Light)</code> 部分をputtyのセッション名に修正する。下の例では セッション名は <code>_vagrant_ubuntu</code>。</p>

<p><img src="https://dl.dropboxusercontent.com/u/28495046/octopress/20130822_putty_solarized/putty_session_name.png" alt="putty session name" /></p>

<h1>putty設定をインポートする</h1>

<p>以下の2通りのやり方がある。お好きな方でどうぞ。</p>

<h2>(1) ダブルクリックでインポート</h2>

<p>solarized_dark.reg をダブルクリックする。</p>

<h2>(2) コマンドプロンプトからインポート</h2>

<p><a href="http://103px.blog.fc2.com/blog-entry-46.html">http://103px.blog.fc2.com/blog-entry-46.html</a></p>

<p>windowsコマンドプロンプトから.regファイルをインポートする</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'> <span class="p">&gt;</span> <span class="n">reg</span> import C:¥Program Files (x<span class="m">86</span>)¥PuTTY¥solarized_dark.reg
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopressでblog]]></title>
    <link href="http://momota.github.io/blog/2013/08/19/octopress/"/>
    <updated>2013-08-19T23:40:00+09:00</updated>
    <id>http://momota.github.io/blog/2013/08/19/octopress</id>
    <content type="html"><![CDATA[<h1>流れ</h1>

<ol>
<li>github pages用リポジトリ作成</li>
<li>octopressコードをローカルにclone</li>
<li>関連gemをインストール</li>
<li>新規記事をpostする</li>
<li>記事とソースをgithubへデプロイする</li>
</ol>


<h1>環境</h1>

<ul>
<li>mac os x 10.8.4</li>
<li>git version 1.7.9.6 (Apple Git-31.1)</li>
<li>zsh</li>
</ul>


<!-- more -->


<h1>create new github repository</h1>

<p>githubへログイン後、github pages用リポジトリを作成する。<a href="https://github.com/new">https://github.com/new</a>
リポジトリ名は、「username.github.io」。</p>

<h1>最新版のoctopressコードをclone</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git clone git://github.com/imathis/octopress.git username.github.io
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /path/to/username.github.io
</span></code></pre></td></tr></table></div></figure>


<h1>install ruby 1.9.3 by rbenv</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>rbenv install 1.9.3-pxx
</span><span class='line'><span class="nv">$ </span>rbenv <span class="nb">local </span>1.9.3-pxx
</span><span class='line'><span class="nv">$ </span>rbenv rehash
</span><span class='line'><span class="nv">$ </span>ruby -v <span class="c"># =&gt; 1.9.3-pxx</span>
</span></code></pre></td></tr></table></div></figure>


<h1>configure octopress</h1>

<p>bundlerをインストールし、関連gemをインストールする。</p>

<ul>
<li><a href="http://octopress.org/docs/setup/">http://octopress.org/docs/setup/</a></li>
<li><a href="http://octopress.org/docs/configuring/">http://octopress.org/docs/configuring/</a></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>gem install bundler
</span><span class='line'><span class="nv">$ </span>bundle install --path vendor/bundle
</span></code></pre></td></tr></table></div></figure>


<p>_config.ymlを編集する。とりあえず以下のフィールドを自分に合わせて修正。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">url</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">http://momota.github.io</span>
</span><span class='line'><span class="l-Scalar-Plain">title</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">momota.txt</span>
</span><span class='line'><span class="l-Scalar-Plain">subtitle</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">momota memo</span>
</span><span class='line'><span class="l-Scalar-Plain">author</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">momota</span>
</span><span class='line'><span class="l-Scalar-Plain">date_format</span><span class="p-Indicator">:</span> <span class="s">&quot;%Y-%m-%d&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">email</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">makoto.momota@gmail.com</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">github_user</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">momota</span>
</span><span class='line'><span class="l-Scalar-Plain">twitter_user</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">momota</span>
</span><span class='line'><span class="l-Scalar-Plain">disqus_short_name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">momota</span>
</span><span class='line'><span class="l-Scalar-Plain">facebook_like</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span></code></pre></td></tr></table></div></figure>


<h2>install octopress theme</h2>

<p>install default theme</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake install
</span></code></pre></td></tr></table></div></figure>


<p>install 3rd party theme</p>

<p><a href="https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes">https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake install<span class="se">\[</span><span class="s1">&#39;theme you like&#39;</span><span class="se">\]</span>
</span></code></pre></td></tr></table></div></figure>


<h2>はてなブックマークボタンを設置する</h2>

<ul>
<li>source/_includes/post/sharing.html に以下を追加</li>
<li><code>\{\{ site.url \}\}\{\{ page.url \}\}</code>部分の<code>\{\}</code>はバックスラッシュなしでOK。ここでは本URLに変換されるためバックスラッシュでエスケープしている。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">style=</span><span class="s">&quot;float:left&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;http://b.hatena.ne.jp/entry/\{\{ site.url \}\}\{\{ page.url \}\}&quot;</span> <span class="na">class=</span><span class="s">&quot;hatena-bookmark-button&quot;</span> <span class="na">data-hatena-bookmark-layout=</span><span class="s">&quot;standard&quot;</span> <span class="na">title=</span><span class="s">&quot;このエントリーをはてなブックマークに追加&quot;</span><span class="nt">&gt;&lt;img</span> <span class="na">src=</span><span class="s">&quot;http://b.st-hatena.com/images/entry-button/button-only.gif&quot;</span> <span class="na">alt=</span><span class="s">&quot;このエントリーをはてなブックマークに追加&quot;</span> <span class="na">width=</span><span class="s">&quot;20&quot;</span> <span class="na">height=</span><span class="s">&quot;20&quot;</span> <span class="na">style=</span><span class="s">&quot;border: none;&quot;</span> <span class="nt">/&gt;&lt;/a&gt;</span>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;http://b.st-hatena.com/js/bookmark_button.js&quot;</span> <span class="na">charset=</span><span class="s">&quot;utf-8&quot;</span> <span class="na">async=</span><span class="s">&quot;async&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>コメント欄を設ける by disqus</h2>

<p>ブログパーツとしてコメント欄を提供する <a href="http://disqus.com/">disqus</a> のアカウントを作る。
<code>_config.yml</code> で設定する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="c1"># Disqus Comments</span>
</span><span class='line'><span class="l-Scalar-Plain">disqus_short_name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">xxxxxx</span>
</span><span class='line'><span class="l-Scalar-Plain">disqus_show_comment_count</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">false</span>
</span></code></pre></td></tr></table></div></figure>


<h1>post</h1>

<ul>
<li>以下コマンドで、記事ファイル<code>source/_posts/yyyy-MM-dd-post-title.markdown</code>を生成。</li>
<li>生成後は、vim/emacsなど自分の好きなエディタで編集する</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake new_post<span class="se">\[</span><span class="s1">&#39;post title&#39;</span><span class="se">\]</span>
</span></code></pre></td></tr></table></div></figure>


<h1>check your post</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># htmlなどの生成</span>
</span><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake generate
</span><span class='line'><span class="c"># プレビュー: http://localhost:4000/ へアクセスしてみる</span>
</span><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake preview
</span></code></pre></td></tr></table></div></figure>


<h1>deploy github pages</h1>

<ul>
<li><a href="http://octopress.org/docs/deploying/github/">http://octopress.org/docs/deploying/github/</a> を参考に。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake setup_github_pages
</span><span class='line'><span class="c"># Enter the read/write url for your repository:</span>
</span><span class='line'><span class="c"># --&gt; git@github.com:username/username.github.io.git</span>
</span><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake deploy
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>ソースもgit pushする</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git add .
</span><span class='line'><span class="nv">$ </span>git commit -m <span class="s1">&#39;commit comment&#39;</span>
</span><span class='line'><span class="nv">$ </span>git push origin <span class="nb">source</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
