<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: octopress | momota.txt]]></title>
  <link href="http://momota.github.io/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://momota.github.io/"/>
  <updated>2018-06-08T20:20:00+09:00</updated>
  <id>http://momota.github.io/</id>
  <author>
    <name><![CDATA[momota]]></name>
    <email><![CDATA[makoto.momota@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[複数の環境で octopress を使ってブログを書く]]></title>
    <link href="http://momota.github.io/blog/2016/01/29/octopress/"/>
    <updated>2016-01-29T19:03:00+09:00</updated>
    <id>http://momota.github.io/blog/2016/01/29/octopress</id>
    <content type="html"><![CDATA[<p>最近、自宅の Mac Mini が重くなってきたので、別環境でブログを書くべく環境を整備した。
5年目選手くらいなので、そろそろ買い換えたいな…</p>

<p>結論としては、以下を参考にやればOK。deploy のとこでちょいハマりしたのでメモ。</p>

<ul>
<li><a href="http://blog.zerosharp.com/clone-your-octopress-to-blog-from-two-places/">Clone your Octopess to blog From Two Places</a></li>
</ul>


<!-- more -->


<h2>1. 新しいマシンで git cloneする</h2>

<p>octopress のレポジトリは、<code>source</code> と <code>master</code> の 2 つのブランチがある。</p>

<p><code>source</code> はその名の通り、編集する markdown ファイルや scss ファイルなどを管
理するブランチ。</p>

<p><code>master</code> は、公開用のHTMLファイルなどを管理するブランチ。<code>rake generate</code> で
生成されるファイル群を管理するブランチ。</p>

<p>まずは、任意の場所で <code>source</code> ブランチをクローンする。</p>

<p><code>sh
$ git clone -b source https://github.com/YOU/YOU.github.io.git blog
</code></p>

<p>次に、<code>master</code> ブランチを <code>_deploy</code> というディレクトリ名でクローンする。</p>

<p><code>sh
$ cd blog
$ git clone https://github.com/YOU/YOU.github.io.git _deploy
</code></p>

<h2>2. インストールする</h2>

<p>octopress をビルドするため、bundler をインストールする。</p>

<p><code>sh
$ gem install bundler
</code></p>

<p>別の環境とシェアするので、 rbenv で ruby バージョンを合わせておく。
シェアしなければ octopress が動くバージョンで <code>.ruby-version</code> を上書けばよいと思う。</p>

<p><code>sh
$ rbenv install X.X.X-pXXX
$ rbenv local X.X.X-pXXX
$ rbenv rehash
</code></p>

<p>ビルドする。</p>

<p><code>sh
$ bundle install
$ rake setup_github_pages
Enter the read/write url for your repository
(For example, 'git@github.com:your_username/your_username.github.com):
</code></p>

<p>自分の github pages のやつを入力すればOK。</p>

<h2>3. お試しポストしてみる</h2>

<p>```sh
$ rake new_post[&lsquo;test&rsquo;]</p>

<h1>=> source/_post/YYYY-MM-DD-test.markdown が生成される</h1>

<p>$ source/_post/YYYY-MM-DD-test.markdown</p>

<h1>=> 記事を編集する</h1>

<p>$ rake generate
$ rake preview</p>

<h1>=> <a href="http://localhost:4000/%E3%81%AB%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9%E3%81%97%E3%81%A6%E8%A8%98%E4%BA%8B%E3%81%8C%E7%94%9F%E6%88%90%E3%81%A7%E3%81%8D%E3%81%A6%E3%81%84%E3%82%8B%E3%81%93%E3%81%A8%E3%82%92%E7%A2%BA%E8%AA%8D%E3%81%99%E3%82%8B">http://localhost:4000/%E3%81%AB%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9%E3%81%97%E3%81%A6%E8%A8%98%E4%BA%8B%E3%81%8C%E7%94%9F%E6%88%90%E3%81%A7%E3%81%8D%E3%81%A6%E3%81%84%E3%82%8B%E3%81%93%E3%81%A8%E3%82%92%E7%A2%BA%E8%AA%8D%E3%81%99%E3%82%8B</a></h1>

<p>$ rake deploy
```</p>

<p>自分の場合、<code>rake deploy</code> でコケた。
<code>git push</code> するところでコケたようだ。</p>

<p><code>
 ! [rejected]        master -&gt; master (non-fast-forward)
 error: failed to push some refs to '*******************'
 hint: Updates were rejected because the tip of your current branch is behind
 hint: its remote counterpart. Merge the remote changes (e.g. 'git pull')
 hint: before pushing again.
 hint: See the 'Note about fast-forwards' in 'git push --help' for details.
</code></p>

<p>認証プロキシを通してる環境だったので、そのせいかなーと疑ったけどちがった。
単純に <code>master</code> ブランチが conflict してるだけだった。</p>

<p><code>git pull</code> して解決した。</p>

<p>```sh
$ cd _deploy
$ git pull origin master</p>

<h1>=> master ブランチを pull</h1>

<p>$ cd ../
$ rake deploy
```</p>

<p>あとは、<code>source</code> のほうもcommitしておく。</p>

<p>```
$ git add .
$ git commit -m &ldquo;posted&rdquo;
$ git push origin sorce</p>

<h1>=> source ブランチも更新する</h1>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopressでblog]]></title>
    <link href="http://momota.github.io/blog/2013/08/19/octopress/"/>
    <updated>2013-08-19T23:40:00+09:00</updated>
    <id>http://momota.github.io/blog/2013/08/19/octopress</id>
    <content type="html"><![CDATA[<h1>流れ</h1>

<ol>
<li>github pages用リポジトリ作成</li>
<li>octopressコードをローカルにclone</li>
<li>関連gemをインストール</li>
<li>新規記事をpostする</li>
<li>記事とソースをgithubへデプロイする</li>
</ol>


<h1>環境</h1>

<ul>
<li>mac os x 10.8.4</li>
<li>git version 1.7.9.6 (Apple Git-31.1)</li>
<li>zsh</li>
</ul>


<!-- more -->


<h1>create new github repository</h1>

<p>githubへログイン後、github pages用リポジトリを作成する。<a href="https://github.com/new">https://github.com/new</a>
リポジトリ名は、「username.github.io」。</p>

<h1>最新版のoctopressコードをclone</h1>

<p>```sh</p>

<pre><code>$ git clone git://github.com/imathis/octopress.git username.github.io
$ cd /path/to/username.github.io
</code></pre>

<p>```</p>

<h1>install ruby 1.9.3 by rbenv</h1>

<p>```sh</p>

<pre><code>$ rbenv install 1.9.3-pxx
$ rbenv local 1.9.3-pxx
$ rbenv rehash
$ ruby -v   # =&gt; 1.9.3-pxx
</code></pre>

<p>```</p>

<h1>configure octopress</h1>

<p>bundlerをインストールし、関連gemをインストールする。</p>

<ul>
<li><a href="http://octopress.org/docs/setup/">http://octopress.org/docs/setup/</a></li>
<li><a href="http://octopress.org/docs/configuring/">http://octopress.org/docs/configuring/</a></li>
</ul>


<p>```sh</p>

<pre><code>$ gem install bundler
$ bundle install --path vendor/bundle
</code></pre>

<p>```</p>

<p>_config.ymlを編集する。とりあえず以下のフィールドを自分に合わせて修正。</p>

<p>```yaml</p>

<pre><code>url: http://momota.github.io
title: momota.txt
subtitle: momota memo
author: momota
date_format: "%Y-%m-%d"

email: makoto.momota@gmail.com

github_user: momota
twitter_user: momota
disqus_short_name: momota
facebook_like: true
</code></pre>

<p>```</p>

<h2>install octopress theme</h2>

<p>install default theme</p>

<p>```sh</p>

<pre><code>$ bundle exec rake install
</code></pre>

<p>```</p>

<p>install 3rd party theme</p>

<p><a href="https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes">https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes</a></p>

<p>```sh</p>

<pre><code>$ bundle exec rake install\['theme you like'\]
</code></pre>

<p>```</p>

<h2>はてなブックマークボタンを設置する</h2>

<ul>
<li>source/_includes/post/sharing.html に以下を追加</li>
<li><code>\{\{ site.url \}\}\{\{ page.url \}\}</code>部分の<code>\{\}</code>はバックスラッシュなしでOK。ここでは本URLに変換されるためバックスラッシュでエスケープしている。</li>
</ul>


<p>```html</p>

<pre><code>&lt;div style="float:left"&gt;
&lt;a href="http://b.hatena.ne.jp/entry/\{\{ site.url \}\}\{\{ page.url \}\}" class="hatena-bookmark-button" data-hatena-bookmark-layout="standard" title="このエントリーをはてなブックマークに追加"&gt;&lt;img src="http://b.st-hatena.com/images/entry-button/button-only.gif" alt="このエントリーをはてなブックマークに追加" width="20" height="20" style="border: none;" /&gt;&lt;/a&gt;
&lt;script type="text/javascript" src="http://b.st-hatena.com/js/bookmark_button.js" charset="utf-8" async="async"&gt;&lt;/script&gt;
&lt;/div&gt;
</code></pre>

<p>```</p>

<h2>コメント欄を設ける by disqus</h2>

<p>ブログパーツとしてコメント欄を提供する <a href="http://disqus.com/">disqus</a> のアカウントを作る。
<code>_config.yml</code> で設定する。</p>

<p>```yml</p>

<pre><code># Disqus Comments
disqus_short_name: xxxxxx
disqus_show_comment_count: false
</code></pre>

<p>```</p>

<h1>post</h1>

<ul>
<li>以下コマンドで、記事ファイル<code>source/_posts/yyyy-MM-dd-post-title.markdown</code>を生成。</li>
<li>生成後は、vim/emacsなど自分の好きなエディタで編集する</li>
</ul>


<p>```sh</p>

<pre><code>$ bundle exec rake new_post\['post title'\]
</code></pre>

<p>```</p>

<h1>check your post</h1>

<p>```sh</p>

<pre><code># htmlなどの生成
$ bundle exec rake generate
# プレビュー: http://localhost:4000/ へアクセスしてみる
$ bundle exec rake preview
</code></pre>

<p>```</p>

<h1>deploy github pages</h1>

<ul>
<li><a href="http://octopress.org/docs/deploying/github/">http://octopress.org/docs/deploying/github/</a> を参考に。</li>
</ul>


<p>```sh</p>

<pre><code>$ bundle exec rake setup_github_pages
# Enter the read/write url for your repository:
# --&gt; git@github.com:username/username.github.io.git
$ bundle exec rake deploy
</code></pre>

<p>```</p>

<ul>
<li>ソースもgit pushする</li>
</ul>


<p>```sh</p>

<pre><code>$ git add .
$ git commit -m 'commit comment'
$ git push origin source
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
</feed>
