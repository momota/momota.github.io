<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: rails | momota.txt]]></title>
  <link href="http://momota.github.io/blog/categories/rails/atom.xml" rel="self"/>
  <link href="http://momota.github.io/"/>
  <updated>2014-05-10T17:14:26+09:00</updated>
  <id>http://momota.github.io/</id>
  <author>
    <name><![CDATA[momota]]></name>
    <email><![CDATA[makoto.momota@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[rails じゃなくても ActiveRecord を使う]]></title>
    <link href="http://momota.github.io/blog/2014/05/10/activerecord/"/>
    <updated>2014-05-10T14:54:00+09:00</updated>
    <id>http://momota.github.io/blog/2014/05/10/activerecord</id>
    <content type="html"><![CDATA[<p>rails には挫折したおれが、rails アプリケーション以外で ActiveRecord を使うようになった件について。</p>

<p>ActiveRecord は O/Rマッパーで RDB のテーブルエントリをオブジェクトとして扱えるようにするやつ。1インスタンスが、テーブルの1レコードに相当する。
Ruby on Rails 標準で、モデル層で使われる。</p>

<p>環境は以下。</p>

<ul>
<li>Mac OSX</li>
<li>ruby 2.1.1p76</li>
<li>MySQL mysqld5.6.17</li>
</ul>


<p>最終的なディレクトリ構成は以下のようになる。</p>

<p>```sh
.
├── Gemfile
├── Gemfile.lock
├── Rakefile
├── config
│   └── database.yml
├── db
│   └── migrate
│       └── 20140510_create_hoges.rb
├── log
│   ├── database.log
│   └── trace.txt
└── vendor</p>

<pre><code>└── bundle
        └── (略)
</code></pre>

<p>```</p>

<ul>
<li><a href="https://github.com/momota/activerecord_sample">https://github.com/momota/activerecord_sample</a></li>
</ul>


<!-- more -->


<h2>前準備</h2>

<h3>ruby</h3>

<p>rbenv で ruby 2.1.1 をインストールする。</p>

<p><code>sh
$ rbenv install 2.1.1
$ rbenv local 2.1.1
$ rbenv rehash
$ ruby -v
ruby 2.1.1p76 (2014-02-24 revision 45161) [x86_64-darwin13.0]
</code></p>

<h3>gem</h3>

<p>bundler で gem をインストールする。
まず、bundler をインストールする。</p>

<p><code>sh
$ gem install bundle
$ bundle -v
Bundler version 1.6.2
</code></p>

<p>以下の <code>Gemfile</code> をつくって<code>bundle install --path vendor/bundle</code> して gem をインストールする。</p>

<p>```ruby
source &ldquo;<a href="https://rubygems.org">https://rubygems.org</a>&rdquo;</p>

<p>gem &ldquo;activerecord&rdquo;
gem &ldquo;rake&rdquo;
gem &ldquo;mysql2&rdquo;
gem &ldquo;pry&rdquo;
```</p>

<p><code>mysql2</code> はDBアダプタ。MySQLと接続するために必要。</p>

<p><code>pry</code> はなくてもよい。<code>irb</code> の便利バージョン。</p>

<h3>mysql</h3>

<p>homebrew でインストールした。</p>

<p><code>my.cnf</code>はよしなに。</p>

<p><code>create database</code> とか <code>grant</code> でユーザやデータベースなどはあらかじめ作っておく。</p>

<h2>create table: rake タスクを使ってテーブルを作成する</h2>

<p><code>rake</code> (makeみたいなもん) でテーブルを作成する。(マイグレーション)</p>

<p>マイグレーションは、SQLを使わずにデータベースのテーブルやカラムなどの構造を変更できる仕組みで、移行と解釈するとややこしい。データベース移行をしやすくする仕組み、くらいに捉えておくとよい。</p>

<h3>マイグレーション用ファイルを作成する</h3>

<p><code>db/migrate</code> ディレクトリを作ってマイグレーション用ファイルを作る。</p>

<p>ここでは hoges テーブルを作ることにする。
マイグレーション用ファイルには、テーブル定義を書く。ここでは <code>db/migrate/20140510_create_hoges.rb</code> を作成する。</p>

<p>このファイル名が大事で <code>20140510</code> の部分がバージョンとして管理される。<code>schema_migrations</code> テーブルが自動生成され、そこで管理される。また、マイグレーション用ファイル中に class 名を<code>CreateHoges</code> のようにキャメルケースで定義した場合は、ファイル名は <code>VERSION_create_hoge.rb</code> のようにスネークケースとして命名する必要がある。ファイル名がこの命名規約に反するとマイグレーションがこける。</p>

<p>rails文化の「設定より規約」(CoC: Convention over Configuration)ってやつですね。</p>

<p><code>ActiveRecord::Migration</code> を継承したクラス <code>Createhoges</code> を定義する。
シンボル <code>:hoges</code> がテーブル名。カラム定義は見ての通りだと思う。
主キーは自動的に <code>id</code> というカラム名で生成されるので書かない。(書くとエラーになる)</p>

<p>```ruby
class CreateHoges &lt; ActiveRecord::Migration
  def self.up</p>

<pre><code>create_table :hoges do |t|
  t.string  :name
  t.string  :url
  t.timestamps  # =&gt; これでcreated_atとupdated_atカラムが定義される
end
</code></pre>

<p>  end</p>

<p>  def self.down</p>

<pre><code>drop_table :hoges
</code></pre>

<p>  end
end
```</p>

<p>書き方の詳細は、<a href="http://guides.rubyonrails.org/migrations.html">Active Record Migrations</a> を見れば良いと思う。</p>

<h3>データベース接続情報を yaml に書き出す</h3>

<p>MySQL への接続情報(DBユーザ名とかパスワードとか使うDB名とか)を yaml ファイルに書き出しておく。めんどくさい、かつ、使い捨てのコードならハードコーディングしといてもOK。</p>

<p>ここでは、以下の内容で <code>config/database.yml</code> を作成した。</p>

<p>```erb
db:
  production:</p>

<pre><code>adapter:  mysql2
host:     localhost
username: &lt;%= ENV['DATABASE_USERNAME'] %&gt;
password: &lt;%= ENV['DATABASE_PASSWORD'] %&gt;
database: &lt;%= ENV['DATABASE_NAME']%&gt;
</code></pre>

<p>  development:</p>

<pre><code>adapter:  mysql2
host:     localhost
username: &lt;%= ENV['DEV_DATABASE_USERNAME'] %&gt;
password: &lt;%= ENV['DEV_DATABASE_PASSWORD'] %&gt;
database: &lt;%= ENV['DEV_DATABASE_NAME']%&gt;
</code></pre>

<p>```</p>

<p>パスワードなどの秘匿情報は環境変数から読み込むようにする。(ここではERB形式で書いた)
パスワードをべた書きしといて、間違えて github とかで公開しちゃうと大変なので。</p>

<p><code>~/.zshrc</code> とか <code>~/.bashrc</code> にあらかじめ作っておいたデータベース名とかユーザ名を以下のように足して <code>source ~/.zshrc</code> で読み込めばいいと思う。</p>

<p><code>sh
export DEV_DATABASE_NAME="hoge_db"
export DEV_DATABASE_USERNAME="hoge_user"
export DEV_DATABASE_PASSWORD="hoge_password"
</code></p>

<h3>Rakefile をつくって rakeタスクを実行する</h3>

<p>以下の内容で <code>Rakefile</code> を作る。
DB接続用の設定や環境指定(development/production) やバージョン指定の設定を書いてます。</p>

<p>```ruby
require &ldquo;active_record&rdquo;
require &ldquo;yaml&rdquo;
require &ldquo;erb&rdquo;
require &ldquo;logger&rdquo;</p>

<p>task :default => :migrate</p>

<p>desc &ldquo;Migrate database&rdquo;
task :migrate => :environment do
  ActiveRecord::Migrator.migrate(&lsquo;db/migrate&rsquo;, ENV[&ldquo;VERSION&rdquo;] ? ENV[&ldquo;VERSION&rdquo;].to_i : nil)
end</p>

<p>task :environment do
  db_conf = YAML.load( ERB.new( File.read(&ldquo;./config/database.yml&rdquo;) ).result )</p>

<p>  # <code>rake ENV=development</code>/<code>rake ENV=production</code>で切り替え可能
  ActiveRecord::Base.establish_connection( db_conf[&ldquo;db&rdquo;][ENV[&ldquo;ENV&rdquo;]] )
  ActiveRecord::Base.logger = Logger.new(&ldquo;log/database.log&rdquo;)
end
```</p>

<p>以下を参考。</p>

<ul>
<li><a href="http://qiita.com/foloinfo/items/6ecfe3c5fd1b56f1dceb">非Rails AppでActiveRecord::Migrationを使う + Rakeでバージョン管理する</a></li>
</ul>


<h3>rake タスクを実行する</h3>

<p>まずは rake タスクの確認。</p>

<p><code>sh
$ bundle exec rake -T
rake migrate  # Migrate database
</code></p>

<p>開発環境設定で実行する。(ENV=development)</p>

<p>```sh</p>

<h1>debug 用に&mdash;traceオプションをつけ、標準エラーをlog/trace.txtへリダイレクト。</h1>

<h1>bundle exec rake ENV=development でもOK</h1>

<p>$ bundle exec rake ENV=development &mdash;trace 2> log/trace.txt
```</p>

<p>問題なければテーブルが作成されているはず。</p>

<p>```
mysql> desc schema_migrations;
+&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;+&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&ndash;+
| Field   | Type         | Null | Key | Default | Extra |
+&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;+&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&ndash;+
| version | varchar(255) | NO   | PRI | NULL    |       |
+&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;+&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&ndash;+
1 row in set (0.00 sec)</p>

<p>mysql> select * from schema_migrations;
+&mdash;&mdash;&mdash;&mdash;&mdash;+
| version  |
+&mdash;&mdash;&mdash;&mdash;&mdash;+
| 20140510 |
+&mdash;&mdash;&mdash;&mdash;&mdash;+
1 row in set (0.00 sec)</p>

<p>mysql> desc hoges;
+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;+&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+
| Field      | Type         | Null | Key | Default | Extra          |
+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;+&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+
| id         | int(11)      | NO   | PRI | NULL    | auto_increment |
| name       | varchar(255) | YES  |     | NULL    |                |
| url        | varchar(255) | YES  |     | NULL    |                |
| created_at | datetime     | YES  |     | NULL    |                |
| updated_at | datetime     | YES  |     | NULL    |                |
+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;+&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+
5 rows in set (0.01 sec)</p>

<p>mysql> select * from hoges;
Empty set (0.00 sec)
```</p>

<h2>select とか</h2>

<p>CRUDのCが終わったのでRUDを書こうかな。</p>

<p>疲れたのであとで書く。</p>
]]></content>
  </entry>
  
</feed>
